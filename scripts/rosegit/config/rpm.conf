# Configuration file for Robb's namespace "rpm"								;; -*- shell-script -*-
# Expand variables in $ROSEGIT_CONFIGURE in case they aren't already
ROSEGIT_CONFIGURE="$(eval echo $ROSEGIT_CONFIGURE)"

# libjvm.so, needed unless we add "--without-java".  If we can't find libjvm.so then add --without-java.
for d in \
    /usr/lib/jvm/default-java/jre/lib/amd64/server				'#debian' \
    /usr/lib/jvm/default-java/jre/lib/i386/server				'#debian' \
    /usr/lib/jvm/java-1.5.0-ibm-1.5.0.10.x86_64/jre/bin/classic                '#prism' \
    'NOT_FOUND'; do
    if [ -d "$d" ]; then
	eval $(path-adjust --var=LD_LIBRARY_PATH insert "$d")
	break
    fi
    if [ "$d" = "NOT_FOUND" ]; then
	ROSEGIT_CONFIGURE=$(eval args-adjust del --with-java $ROSEGIT_CONFIGURE)
	ROSEGIT_CONFIGURE=$(eval args-adjust --without-java $ROSEGIT_CONFIGURE)
    fi
done
 

# Locally-installed versions of BOOST
for d in \
    /Users/dquinlan/local/boost_1_42_0_installTree-gxx-4.0.1                  '#Darwin' \
    /export/tmp.hudson-rose/opt/boost_1_40_0-inst                             '#hudson-rose-07' \
    /home/matzke/GS-CAD/boost1.47 \
    /home/matzke/GS-CAD/boost1.46
do
    if [ -d "$d" ]; then
	export BOOST_ROOT="$d"
	export BOOST_VERSION=$(sed -n '/^#.*BOOST_LIB_VERSION /s/.*"\(.*\)".*/\1/p' < $d/include/boost/version.hpp |tr _ .)
	# Added to ROSEGIT_CONFIGURE after we possibly append "-debug" to $BOOST_ROOT below.
	break
    fi
done
ROSEGIT_CONFIGURE=$(eval args-adjust --with-boost=$BOOST_ROOT $ROSEGIT_CONFIGURE)

# Set make parallelism to a lower value unless we're using distcc or ccache
using_distcc=
if (which g++ | grep ccache >/dev/null); then
    if [ "$CCACHE_PREFIX" = "distcc" ]; then
        using_distcc=yes
    fi
elif [ "$DISTCC_HOSTS" != "" ]; then
    using_distcc=yes
fi
[ -n "$using_distcc" ] || ROSEGIT_MAKE="make -j8"

## Add DWARF support
#export DWARF_ROOT=${DWARF_ROOT:-$HOME/GS-CAD/dwarf-20081013/libdwarf}
#ROSEGIT_CONFIGURE=$(eval args-adjust --with-dwarf=$DWARF_ROOT $ROSEGIT_CONFIGURE)
#eval $(path-adjust --var=LD_LIBRARY_PATH insert $DWARF_ROOT)

# Remove DWARF support -- it doesn't work in developerScratchSpace repository
ROSEGIT_CONFIGURE=$(eval args-adjust del --with-dwarf $ROSEGIT_CONFIGURE)

# Add support for the Yices SMT solver if present.
for d in \
    $HOME/GS-CAD/SMT-solvers/yices-1.0.34 \
    $HOME/GS-CAD/SMT-solvers/yices-1.0.28
do
    if [ -d $d ]; then
	ROSEGIT_CONFIGURE=$(eval args-adjust --with-yices=$d $ROSEGIT_CONFIGURE)
	break
    fi
done

# Turn off warnings about deprecated headers
#ROSEGIT_CONFIGURE=$(eval args-adjust --with-CXX_WARNINGS+=-Wno-deprecated $ROSEGIT_CONFIGURE)

# I'm getting tired of seeing warnings about deprecated headers included by boost, so I'm turning them all off.
ROSEGIT_CONFIGURE=$(eval args-adjust --with-C_WARNINGS+='-Wno-deprecated' $ROSEGIT_CONFIGURE)
ROSEGIT_CONFIGURE=$(eval args-adjust --with-CXX_WARNINGS+='-Wno-deprecated' $ROSEGIT_CONFIGURE)

#--------------------------------- other repositories -----------------------------------------

# The developerScratchSpace repository
if [ "$ROSEGIT_SRC" != "$ROSE_SRC" ]; then
    ROSEGIT_CONFIGURE=$(eval args-adjust --prefix=$ROSE_SRC/_build/installed $ROSEGIT_CONFIGURE)

    # MySQL needs a directory name because rose.h includes <mysql.h> rather than <mysql/mysql.h>
    # Unfortunately we can't add it to --with-CXXFLAGS because it won't make it into the Makefiles
    ROSEGIT_CONFIGURE=$(eval args-adjust --with-C_WARNINGS+=-I/usr/include/mysql $ROSEGIT_CONFIGURE)
    ROSEGIT_CONFIGURE=$(eval args-adjust --with-CXX_WARNINGS+=-I/usr/include/mysql $ROSEGIT_CONFIGURE)
fi

# Keep GCC from emitting non-printable characters in diagnostics
export LC_ALL="C"
