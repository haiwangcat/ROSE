=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482c8:push   ebp
    ax = v64
    cx = v65
    dx = v66
    bx = v67
    sp = v104 [from 0x80482c8:push   ebp]
    bp = v69
    si = v70
    di = v71
    es = v72
    cs = v73
    ss = v74
    ds = v75
    fs = v76
    gs = v77
    cf = v78
    ?1 = v79
    pf = v80
    ?3 = v81
    af = v82
    ?5 = v83
    zf = v84
    sf = v85
    tf = v86
    if = v87
    df = v88
    of = v89
    iopl0 = v90
    iopl1 = v91
    nt = v92
    ?15 = v93
    memory = {
        size=4; addr=v68-0x4 [from 0x80482c8:push   ebp]; value=v69
    }
    ip = 0x80482c9 [from 0x80482c8:push   ebp]
0x80482c9:mov    ebp, esp
    ax = v64
    cx = v65
    dx = v66
    bx = v67
    sp = v104 [from 0x80482c8:push   ebp]
    bp = v141 [from 0x80482c9:mov    ebp, esp]
    si = v70
    di = v71
    es = v72
    cs = v73
    ss = v74
    ds = v75
    fs = v76
    gs = v77
    cf = v78
    ?1 = v79
    pf = v80
    ?3 = v81
    af = v82
    ?5 = v83
    zf = v84
    sf = v85
    tf = v86
    if = v87
    df = v88
    of = v89
    iopl0 = v90
    iopl1 = v91
    nt = v92
    ?15 = v93
    memory = {
        size=4; addr=v68-0x4 [from 0x80482c8:push   ebp]; value=v69
    }
    ip = 0x80482cb [from 0x80482c9:mov    ebp, esp]
0x80482cb:sub    esp, 0x08
    ax = v64
    cx = v65
    dx = v66
    bx = v67
    sp = v221 [from 0x80482cb:sub    esp, 0x08]
    bp = v141 [from 0x80482c9:mov    ebp, esp]
    si = v70
    di = v71
    es = v72
    cs = v73
    ss = v74
    ds = v75
    fs = v76
    gs = v77
    cf = -v214-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?1 = v79
    pf = -v204-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?3 = v81
    af = -v211-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?5 = v83
    zf = v209 [from 0x80482cb:sub    esp, 0x08]
    sf = v207 [from 0x80482cb:sub    esp, 0x08]
    tf = v86
    if = v87
    df = v88
    of = v219 [from 0x80482cb:sub    esp, 0x08]
    iopl0 = v90
    iopl1 = v91
    nt = v92
    ?15 = v93
    memory = {
        size=4; addr=v68-0x4 [from 0x80482c8:push   ebp]; value=v69
    }
    ip = 0x80482ce [from 0x80482cb:sub    esp, 0x08]
0x80482ce:call   0x08048364<call_gmon_start>
    ax = v64
    cx = v65
    dx = v66
    bx = v67
    sp = v265 [from 0x80482ce:call   0x08048364<call_gmon_start>]
    bp = v141 [from 0x80482c9:mov    ebp, esp]
    si = v70
    di = v71
    es = v72
    cs = v73
    ss = v74
    ds = v75
    fs = v76
    gs = v77
    cf = -v214-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?1 = v79
    pf = -v204-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?3 = v81
    af = -v211-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?5 = v83
    zf = v209 [from 0x80482cb:sub    esp, 0x08]
    sf = v207 [from 0x80482cb:sub    esp, 0x08]
    tf = v86
    if = v87
    df = v88
    of = v219 [from 0x80482cb:sub    esp, 0x08]
    iopl0 = v90
    iopl1 = v91
    nt = v92
    ?15 = v93
    memory = {
        size=4; addr=v221-0x4 [from 0x80482ce:call   0x08048364<call_gmon_start>]; value=0x80482d3 [from 0x80482ce:call   0x08048364<call_gmon_start>]
    }
    ip = 0x8048364 [from 0x80482ce:call   0x08048364<call_gmon_start>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482d3:call   0x080483d0<frame_dummy>
    ax = v449
    cx = v450
    dx = v451
    bx = v452
    sp = v491 [from 0x80482d3:call   0x080483d0<frame_dummy>]
    bp = v454
    si = v455
    di = v456
    es = v457
    cs = v458
    ss = v459
    ds = v460
    fs = v461
    gs = v462
    cf = v463
    ?1 = v464
    pf = v465
    ?3 = v466
    af = v467
    ?5 = v468
    zf = v469
    sf = v470
    tf = v471
    if = v472
    df = v473
    of = v474
    iopl0 = v475
    iopl1 = v476
    nt = v477
    ?15 = v478
    memory = {
        size=4; addr=v453-0x4 [from 0x80482d3:call   0x080483d0<frame_dummy>]; value=0x80482d8 [from 0x80482d3:call   0x080483d0<frame_dummy>]
    }
    ip = 0x80483d0 [from 0x80482d3:call   0x080483d0<frame_dummy>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482d8:call   0x08048580<__do_global_ctors_aux>
    ax = v675
    cx = v676
    dx = v677
    bx = v678
    sp = v717 [from 0x80482d8:call   0x08048580<__do_global_ctors_aux>]
    bp = v680
    si = v681
    di = v682
    es = v683
    cs = v684
    ss = v685
    ds = v686
    fs = v687
    gs = v688
    cf = v689
    ?1 = v690
    pf = v691
    ?3 = v692
    af = v693
    ?5 = v694
    zf = v695
    sf = v696
    tf = v697
    if = v698
    df = v699
    of = v700
    iopl0 = v701
    iopl1 = v702
    nt = v703
    ?15 = v704
    memory = {
        size=4; addr=v679-0x4 [from 0x80482d8:call   0x08048580<__do_global_ctors_aux>]; value=0x80482dd [from 0x80482d8:call   0x08048580<__do_global_ctors_aux>]
    }
    ip = 0x8048580 [from 0x80482d8:call   0x08048580<__do_global_ctors_aux>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482dd:leave  
    ax = v901
    cx = v902
    dx = v903
    bx = v904
    sp = v943 [from 0x80482dd:leave  ]
    bp = v942 [from 0x80482dd:leave  ]
    si = v907
    di = v908
    es = v909
    cs = v910
    ss = v911
    ds = v912
    fs = v913
    gs = v914
    cf = v915
    ?1 = v916
    pf = v917
    ?3 = v918
    af = v919
    ?5 = v920
    zf = v921
    sf = v922
    tf = v923
    if = v924
    df = v925
    of = v926
    iopl0 = v927
    iopl1 = v928
    nt = v929
    ?15 = v930
    memory = {}
    ip = 0x80482de [from 0x80482dd:leave  ]
0x80482de:ret    
    ax = v901
    cx = v902
    dx = v903
    bx = v904
    sp = v987 [from 0x80482de:ret    ]
    bp = v942 [from 0x80482dd:leave  ]
    si = v907
    di = v908
    es = v909
    cs = v910
    ss = v911
    ds = v912
    fs = v913
    gs = v914
    cf = v915
    ?1 = v916
    pf = v917
    ?3 = v918
    af = v919
    ?5 = v920
    zf = v921
    sf = v922
    tf = v923
    if = v924
    df = v925
    of = v926
    iopl0 = v927
    iopl1 = v928
    nt = v929
    ?15 = v930
    memory = {}
    ip = v985 [from 0x80482de:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482f0:jmp    DWORD PTR ds:[0x080496d4<.got.plt+0x0c>]
    ax = v1051
    cx = v1052
    dx = v1053
    bx = v1054
    sp = v1055
    bp = v1056
    si = v1057
    di = v1058
    es = v1059
    cs = v1060
    ss = v1061
    ds = v1062
    fs = v1063
    gs = v1064
    cf = v1065
    ?1 = v1066
    pf = v1067
    ?3 = v1068
    af = v1069
    ?5 = v1070
    zf = v1071
    sf = v1072
    tf = v1073
    if = v1074
    df = v1075
    of = v1076
    iopl0 = v1077
    iopl1 = v1078
    nt = v1079
    ?15 = v1080
    memory = {}
    ip = v1087 [from 0x80482f0:jmp    DWORD PTR ds:[0x080496d4<.got.plt+0x0c>]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048300:jmp    DWORD PTR ds:[0x080496d8<.got.plt+0x10>]
    ax = v1152
    cx = v1153
    dx = v1154
    bx = v1155
    sp = v1156
    bp = v1157
    si = v1158
    di = v1159
    es = v1160
    cs = v1161
    ss = v1162
    ds = v1163
    fs = v1164
    gs = v1165
    cf = v1166
    ?1 = v1167
    pf = v1168
    ?3 = v1169
    af = v1170
    ?5 = v1171
    zf = v1172
    sf = v1173
    tf = v1174
    if = v1175
    df = v1176
    of = v1177
    iopl0 = v1178
    iopl1 = v1179
    nt = v1180
    ?15 = v1181
    memory = {}
    ip = v1188 [from 0x8048300:jmp    DWORD PTR ds:[0x080496d8<.got.plt+0x10>]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048310:jmp    DWORD PTR ds:[0x080496dc<.got.plt+0x14>]
    ax = v1253
    cx = v1254
    dx = v1255
    bx = v1256
    sp = v1257
    bp = v1258
    si = v1259
    di = v1260
    es = v1261
    cs = v1262
    ss = v1263
    ds = v1264
    fs = v1265
    gs = v1266
    cf = v1267
    ?1 = v1268
    pf = v1269
    ?3 = v1270
    af = v1271
    ?5 = v1272
    zf = v1273
    sf = v1274
    tf = v1275
    if = v1276
    df = v1277
    of = v1278
    iopl0 = v1279
    iopl1 = v1280
    nt = v1281
    ?15 = v1282
    memory = {}
    ip = v1289 [from 0x8048310:jmp    DWORD PTR ds:[0x080496dc<.got.plt+0x14>]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048320:jmp    DWORD PTR ds:[0x080496e0<.got.plt+0x18>]
    ax = v1354
    cx = v1355
    dx = v1356
    bx = v1357
    sp = v1358
    bp = v1359
    si = v1360
    di = v1361
    es = v1362
    cs = v1363
    ss = v1364
    ds = v1365
    fs = v1366
    gs = v1367
    cf = v1368
    ?1 = v1369
    pf = v1370
    ?3 = v1371
    af = v1372
    ?5 = v1373
    zf = v1374
    sf = v1375
    tf = v1376
    if = v1377
    df = v1378
    of = v1379
    iopl0 = v1380
    iopl1 = v1381
    nt = v1382
    ?15 = v1383
    memory = {}
    ip = v1390 [from 0x8048320:jmp    DWORD PTR ds:[0x080496e0<.got.plt+0x18>]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048330:jmp    DWORD PTR ds:[0x080496e4<.got.plt+0x1c>]
    ax = v1455
    cx = v1456
    dx = v1457
    bx = v1458
    sp = v1459
    bp = v1460
    si = v1461
    di = v1462
    es = v1463
    cs = v1464
    ss = v1465
    ds = v1466
    fs = v1467
    gs = v1468
    cf = v1469
    ?1 = v1470
    pf = v1471
    ?3 = v1472
    af = v1473
    ?5 = v1474
    zf = v1475
    sf = v1476
    tf = v1477
    if = v1478
    df = v1479
    of = v1480
    iopl0 = v1481
    iopl1 = v1482
    nt = v1483
    ?15 = v1484
    memory = {}
    ip = v1491 [from 0x8048330:jmp    DWORD PTR ds:[0x080496e4<.got.plt+0x1c>]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048340:xor    ebp, ebp
    ax = v1556
    cx = v1557
    dx = v1558
    bx = v1559
    sp = v1560
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1562
    di = v1563
    es = v1564
    cs = v1565
    ss = v1566
    ds = v1567
    fs = v1568
    gs = v1569
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v1571
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v1573
    af = <top>
    ?5 = v1575
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v1578
    if = v1579
    df = v1580
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v1582
    iopl1 = v1583
    nt = v1584
    ?15 = v1585
    memory = {}
    ip = 0x8048342 [from 0x8048340:xor    ebp, ebp]
0x8048342:pop    esi
    ax = v1556
    cx = v1557
    dx = v1558
    bx = v1559
    sp = v1660 [from 0x8048342:pop    esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1663 [from 0x8048342:pop    esi]
    di = v1563
    es = v1564
    cs = v1565
    ss = v1566
    ds = v1567
    fs = v1568
    gs = v1569
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v1571
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v1573
    af = <top>
    ?5 = v1575
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v1578
    if = v1579
    df = v1580
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v1582
    iopl1 = v1583
    nt = v1584
    ?15 = v1585
    memory = {}
    ip = 0x8048343 [from 0x8048342:pop    esi]
0x8048343:mov    ecx, esp
    ax = v1556
    cx = v1700 [from 0x8048343:mov    ecx, esp]
    dx = v1558
    bx = v1559
    sp = v1660 [from 0x8048342:pop    esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1663 [from 0x8048342:pop    esi]
    di = v1563
    es = v1564
    cs = v1565
    ss = v1566
    ds = v1567
    fs = v1568
    gs = v1569
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v1571
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v1573
    af = <top>
    ?5 = v1575
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v1578
    if = v1579
    df = v1580
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v1582
    iopl1 = v1583
    nt = v1584
    ?15 = v1585
    memory = {}
    ip = 0x8048345 [from 0x8048343:mov    ecx, esp]
0x8048345:and    esp, 0xf0<-0x10>
    ax = v1556
    cx = v1700 [from 0x8048343:mov    ecx, esp]
    dx = v1558
    bx = v1559
    sp = v1761 [from 0x8048345:and    esp, 0xf0<-0x10>]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1663 [from 0x8048342:pop    esi]
    di = v1563
    es = v1564
    cs = v1565
    ss = v1566
    ds = v1567
    fs = v1568
    gs = v1569
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1571
    pf = -v1754-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1573
    af = <top>
    ?5 = v1575
    zf = v1759 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1757 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1578
    if = v1579
    df = v1580
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1582
    iopl1 = v1583
    nt = v1584
    ?15 = v1585
    memory = {}
    ip = 0x8048348 [from 0x8048345:and    esp, 0xf0<-0x10>]
0x8048348:push   eax
    ax = v1556
    cx = v1700 [from 0x8048343:mov    ecx, esp]
    dx = v1558
    bx = v1559
    sp = v1809 [from 0x8048348:push   eax]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1663 [from 0x8048342:pop    esi]
    di = v1563
    es = v1564
    cs = v1565
    ss = v1566
    ds = v1567
    fs = v1568
    gs = v1569
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1571
    pf = -v1754-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1573
    af = <top>
    ?5 = v1575
    zf = v1759 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1757 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1578
    if = v1579
    df = v1580
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1582
    iopl1 = v1583
    nt = v1584
    ?15 = v1585
    memory = {
        size=4; addr=v1761-0x4 [from 0x8048348:push   eax]; value=v1556
    }
    ip = 0x8048349 [from 0x8048348:push   eax]
0x8048349:push   esp
    ax = v1556
    cx = v1700 [from 0x8048343:mov    ecx, esp]
    dx = v1558
    bx = v1559
    sp = v1851 [from 0x8048349:push   esp]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1663 [from 0x8048342:pop    esi]
    di = v1563
    es = v1564
    cs = v1565
    ss = v1566
    ds = v1567
    fs = v1568
    gs = v1569
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1571
    pf = -v1754-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1573
    af = <top>
    ?5 = v1575
    zf = v1759 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1757 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1578
    if = v1579
    df = v1580
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1582
    iopl1 = v1583
    nt = v1584
    ?15 = v1585
    memory = {
        size=4; addr=v1809-0x4 [from 0x8048349:push   esp]; value=v1809 [from 0x8048348:push   eax]
    }
    ip = 0x804834a [from 0x8048349:push   esp]
0x804834a:push   edx
    ax = v1556
    cx = v1700 [from 0x8048343:mov    ecx, esp]
    dx = v1558
    bx = v1559
    sp = v1893 [from 0x804834a:push   edx]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1663 [from 0x8048342:pop    esi]
    di = v1563
    es = v1564
    cs = v1565
    ss = v1566
    ds = v1567
    fs = v1568
    gs = v1569
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1571
    pf = -v1754-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1573
    af = <top>
    ?5 = v1575
    zf = v1759 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1757 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1578
    if = v1579
    df = v1580
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1582
    iopl1 = v1583
    nt = v1584
    ?15 = v1585
    memory = {
        size=4; addr=v1851-0x4 [from 0x804834a:push   edx]; value=v1558
    }
    ip = 0x804834b [from 0x804834a:push   edx]
0x804834b:push   0x08048520<__libc_csu_fini>
    ax = v1556
    cx = v1700 [from 0x8048343:mov    ecx, esp]
    dx = v1558
    bx = v1559
    sp = v1935 [from 0x804834b:push   0x08048520<__libc_csu_fini>]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1663 [from 0x8048342:pop    esi]
    di = v1563
    es = v1564
    cs = v1565
    ss = v1566
    ds = v1567
    fs = v1568
    gs = v1569
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1571
    pf = -v1754-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1573
    af = <top>
    ?5 = v1575
    zf = v1759 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1757 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1578
    if = v1579
    df = v1580
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1582
    iopl1 = v1583
    nt = v1584
    ?15 = v1585
    memory = {
        size=4; addr=v1893-0x4 [from 0x804834b:push   0x08048520<__libc_csu_fini>]; value=0x8048520 [from 0x804834b:push   0x08048520<__libc_csu_fini>]
    }
    ip = 0x8048350 [from 0x804834b:push   0x08048520<__libc_csu_fini>]
0x8048350:push   0x080484b0<__libc_csu_init>
    ax = v1556
    cx = v1700 [from 0x8048343:mov    ecx, esp]
    dx = v1558
    bx = v1559
    sp = v1977 [from 0x8048350:push   0x080484b0<__libc_csu_init>]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1663 [from 0x8048342:pop    esi]
    di = v1563
    es = v1564
    cs = v1565
    ss = v1566
    ds = v1567
    fs = v1568
    gs = v1569
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1571
    pf = -v1754-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1573
    af = <top>
    ?5 = v1575
    zf = v1759 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1757 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1578
    if = v1579
    df = v1580
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1582
    iopl1 = v1583
    nt = v1584
    ?15 = v1585
    memory = {
        size=4; addr=v1935-0x4 [from 0x8048350:push   0x080484b0<__libc_csu_init>]; value=0x80484b0 [from 0x8048350:push   0x080484b0<__libc_csu_init>]
    }
    ip = 0x8048355 [from 0x8048350:push   0x080484b0<__libc_csu_init>]
0x8048355:push   ecx
    ax = v1556
    cx = v1700 [from 0x8048343:mov    ecx, esp]
    dx = v1558
    bx = v1559
    sp = v2019 [from 0x8048355:push   ecx]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1663 [from 0x8048342:pop    esi]
    di = v1563
    es = v1564
    cs = v1565
    ss = v1566
    ds = v1567
    fs = v1568
    gs = v1569
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1571
    pf = -v1754-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1573
    af = <top>
    ?5 = v1575
    zf = v1759 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1757 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1578
    if = v1579
    df = v1580
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1582
    iopl1 = v1583
    nt = v1584
    ?15 = v1585
    memory = {
        size=4; addr=v1977-0x4 [from 0x8048355:push   ecx]; value=v1700 [from 0x8048343:mov    ecx, esp]
    }
    ip = 0x8048356 [from 0x8048355:push   ecx]
0x8048356:push   esi
    ax = v1556
    cx = v1700 [from 0x8048343:mov    ecx, esp]
    dx = v1558
    bx = v1559
    sp = v2061 [from 0x8048356:push   esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1663 [from 0x8048342:pop    esi]
    di = v1563
    es = v1564
    cs = v1565
    ss = v1566
    ds = v1567
    fs = v1568
    gs = v1569
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1571
    pf = -v1754-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1573
    af = <top>
    ?5 = v1575
    zf = v1759 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1757 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1578
    if = v1579
    df = v1580
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1582
    iopl1 = v1583
    nt = v1584
    ?15 = v1585
    memory = {
        size=4; addr=v2019-0x4 [from 0x8048356:push   esi]; value=v1663 [from 0x8048342:pop    esi]
    }
    ip = 0x8048357 [from 0x8048356:push   esi]
0x8048357:push   0x08048410<main>
    ax = v1556
    cx = v1700 [from 0x8048343:mov    ecx, esp]
    dx = v1558
    bx = v1559
    sp = v2103 [from 0x8048357:push   0x08048410<main>]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1663 [from 0x8048342:pop    esi]
    di = v1563
    es = v1564
    cs = v1565
    ss = v1566
    ds = v1567
    fs = v1568
    gs = v1569
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1571
    pf = -v1754-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1573
    af = <top>
    ?5 = v1575
    zf = v1759 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1757 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1578
    if = v1579
    df = v1580
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1582
    iopl1 = v1583
    nt = v1584
    ?15 = v1585
    memory = {
        size=4; addr=v2061-0x4 [from 0x8048357:push   0x08048410<main>]; value=0x8048410 [from 0x8048357:push   0x08048410<main>]
    }
    ip = 0x804835c [from 0x8048357:push   0x08048410<main>]
0x804835c:call   0x08048310<__libc_start_main@plt>
    ax = v1556
    cx = v1700 [from 0x8048343:mov    ecx, esp]
    dx = v1558
    bx = v1559
    sp = v2147 [from 0x804835c:call   0x08048310<__libc_start_main@plt>]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1663 [from 0x8048342:pop    esi]
    di = v1563
    es = v1564
    cs = v1565
    ss = v1566
    ds = v1567
    fs = v1568
    gs = v1569
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1571
    pf = -v1754-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1573
    af = <top>
    ?5 = v1575
    zf = v1759 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1757 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1578
    if = v1579
    df = v1580
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1582
    iopl1 = v1583
    nt = v1584
    ?15 = v1585
    memory = {
        size=4; addr=v2103-0x4 [from 0x804835c:call   0x08048310<__libc_start_main@plt>]; value=0x8048361 [from 0x804835c:call   0x08048310<__libc_start_main@plt>]
    }
    ip = 0x8048310 [from 0x804835c:call   0x08048310<__libc_start_main@plt>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048361:hlt    
    ax = v2331
    cx = v2332
    dx = v2333
    bx = v2334
    sp = v2335
    bp = v2336
    si = v2337
    di = v2338
    es = v2339
    cs = v2340
    ss = v2341
    ds = v2342
    fs = v2343
    gs = v2344
    cf = v2345
    ?1 = v2346
    pf = v2347
    ?3 = v2348
    af = v2349
    ?5 = v2350
    zf = v2351
    sf = v2352
    tf = v2353
    if = v2354
    df = v2355
    of = v2356
    iopl0 = v2357
    iopl1 = v2358
    nt = v2359
    ?15 = v2360
    memory = {}
    ip = 0x8048361
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048364:push   ebp
    ax = v2429
    cx = v2430
    dx = v2431
    bx = v2432
    sp = v2469 [from 0x8048364:push   ebp]
    bp = v2434
    si = v2435
    di = v2436
    es = v2437
    cs = v2438
    ss = v2439
    ds = v2440
    fs = v2441
    gs = v2442
    cf = v2443
    ?1 = v2444
    pf = v2445
    ?3 = v2446
    af = v2447
    ?5 = v2448
    zf = v2449
    sf = v2450
    tf = v2451
    if = v2452
    df = v2453
    of = v2454
    iopl0 = v2455
    iopl1 = v2456
    nt = v2457
    ?15 = v2458
    memory = {
        size=4; addr=v2433-0x4 [from 0x8048364:push   ebp]; value=v2434
    }
    ip = 0x8048365 [from 0x8048364:push   ebp]
0x8048365:mov    ebp, esp
    ax = v2429
    cx = v2430
    dx = v2431
    bx = v2432
    sp = v2469 [from 0x8048364:push   ebp]
    bp = v2506 [from 0x8048365:mov    ebp, esp]
    si = v2435
    di = v2436
    es = v2437
    cs = v2438
    ss = v2439
    ds = v2440
    fs = v2441
    gs = v2442
    cf = v2443
    ?1 = v2444
    pf = v2445
    ?3 = v2446
    af = v2447
    ?5 = v2448
    zf = v2449
    sf = v2450
    tf = v2451
    if = v2452
    df = v2453
    of = v2454
    iopl0 = v2455
    iopl1 = v2456
    nt = v2457
    ?15 = v2458
    memory = {
        size=4; addr=v2433-0x4 [from 0x8048364:push   ebp]; value=v2434
    }
    ip = 0x8048367 [from 0x8048365:mov    ebp, esp]
0x8048367:push   ebx
    ax = v2429
    cx = v2430
    dx = v2431
    bx = v2432
    sp = v2548 [from 0x8048367:push   ebx]
    bp = v2506 [from 0x8048365:mov    ebp, esp]
    si = v2435
    di = v2436
    es = v2437
    cs = v2438
    ss = v2439
    ds = v2440
    fs = v2441
    gs = v2442
    cf = v2443
    ?1 = v2444
    pf = v2445
    ?3 = v2446
    af = v2447
    ?5 = v2448
    zf = v2449
    sf = v2450
    tf = v2451
    if = v2452
    df = v2453
    of = v2454
    iopl0 = v2455
    iopl1 = v2456
    nt = v2457
    ?15 = v2458
    memory = {
        size=4; addr=v2469-0x4 [from 0x8048367:push   ebx]; value=v2432
    }
    ip = 0x8048368 [from 0x8048367:push   ebx]
0x8048368:push   ecx
    ax = v2429
    cx = v2430
    dx = v2431
    bx = v2432
    sp = v2590 [from 0x8048368:push   ecx]
    bp = v2506 [from 0x8048365:mov    ebp, esp]
    si = v2435
    di = v2436
    es = v2437
    cs = v2438
    ss = v2439
    ds = v2440
    fs = v2441
    gs = v2442
    cf = v2443
    ?1 = v2444
    pf = v2445
    ?3 = v2446
    af = v2447
    ?5 = v2448
    zf = v2449
    sf = v2450
    tf = v2451
    if = v2452
    df = v2453
    of = v2454
    iopl0 = v2455
    iopl1 = v2456
    nt = v2457
    ?15 = v2458
    memory = {
        size=4; addr=v2548-0x4 [from 0x8048368:push   ecx]; value=v2430
    }
    ip = 0x8048369 [from 0x8048368:push   ecx]
0x8048369:call   0x0804836e<<Insn>>
    ax = v2429
    cx = v2430
    dx = v2431
    bx = v2432
    sp = v2634 [from 0x8048369:call   0x0804836e<<Insn>>]
    bp = v2506 [from 0x8048365:mov    ebp, esp]
    si = v2435
    di = v2436
    es = v2437
    cs = v2438
    ss = v2439
    ds = v2440
    fs = v2441
    gs = v2442
    cf = v2443
    ?1 = v2444
    pf = v2445
    ?3 = v2446
    af = v2447
    ?5 = v2448
    zf = v2449
    sf = v2450
    tf = v2451
    if = v2452
    df = v2453
    of = v2454
    iopl0 = v2455
    iopl1 = v2456
    nt = v2457
    ?15 = v2458
    memory = {
        size=4; addr=v2590-0x4 [from 0x8048369:call   0x0804836e<<Insn>>]; value=0x804836e [from 0x8048369:call   0x0804836e<<Insn>>]
    }
    ip = 0x804836e [from 0x8048369:call   0x0804836e<<Insn>>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804836e:pop    ebx
    ax = v2728
    cx = v2729
    dx = v2730
    bx = v2768 [from 0x804836e:pop    ebx]
    sp = v2765 [from 0x804836e:pop    ebx]
    bp = v2733
    si = v2734
    di = v2735
    es = v2736
    cs = v2737
    ss = v2738
    ds = v2739
    fs = v2740
    gs = v2741
    cf = v2742
    ?1 = v2743
    pf = v2744
    ?3 = v2745
    af = v2746
    ?5 = v2747
    zf = v2748
    sf = v2749
    tf = v2750
    if = v2751
    df = v2752
    of = v2753
    iopl0 = v2754
    iopl1 = v2755
    nt = v2756
    ?15 = v2757
    memory = {}
    ip = 0x804836f [from 0x804836e:pop    ebx]
0x804836f:add    ebx, 0x0000135a
    ax = v2728
    cx = v2729
    dx = v2730
    bx = v2844 [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2765 [from 0x804836e:pop    ebx]
    bp = v2733
    si = v2734
    di = v2735
    es = v2736
    cs = v2737
    ss = v2738
    ds = v2739
    fs = v2740
    gs = v2741
    cf = v2838 [from 0x804836f:add    ebx, 0x0000135a]
    ?1 = v2743
    pf = -v2829-0x1 [from 0x804836f:add    ebx, 0x0000135a]
    ?3 = v2745
    af = v2836 [from 0x804836f:add    ebx, 0x0000135a]
    ?5 = v2747
    zf = v2834 [from 0x804836f:add    ebx, 0x0000135a]
    sf = v2832 [from 0x804836f:add    ebx, 0x0000135a]
    tf = v2750
    if = v2751
    df = v2752
    of = v2842 [from 0x804836f:add    ebx, 0x0000135a]
    iopl0 = v2754
    iopl1 = v2755
    nt = v2756
    ?15 = v2757
    memory = {}
    ip = 0x8048375 [from 0x804836f:add    ebx, 0x0000135a]
0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]
    ax = v2728
    cx = v2729
    dx = v2885 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
    bx = v2844 [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2765 [from 0x804836e:pop    ebx]
    bp = v2733
    si = v2734
    di = v2735
    es = v2736
    cs = v2737
    ss = v2738
    ds = v2739
    fs = v2740
    gs = v2741
    cf = v2838 [from 0x804836f:add    ebx, 0x0000135a]
    ?1 = v2743
    pf = -v2829-0x1 [from 0x804836f:add    ebx, 0x0000135a]
    ?3 = v2745
    af = v2836 [from 0x804836f:add    ebx, 0x0000135a]
    ?5 = v2747
    zf = v2834 [from 0x804836f:add    ebx, 0x0000135a]
    sf = v2832 [from 0x804836f:add    ebx, 0x0000135a]
    tf = v2750
    if = v2751
    df = v2752
    of = v2842 [from 0x804836f:add    ebx, 0x0000135a]
    iopl0 = v2754
    iopl1 = v2755
    nt = v2756
    ?15 = v2757
    memory = {}
    ip = 0x804837b [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
0x804837b:test   edx, edx
    ax = v2728
    cx = v2729
    dx = v2885 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
    bx = v2844 [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2765 [from 0x804836e:pop    ebx]
    bp = v2733
    si = v2734
    di = v2735
    es = v2736
    cs = v2737
    ss = v2738
    ds = v2739
    fs = v2740
    gs = v2741
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v2743
    pf = -v2939-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v2745
    af = <top>
    ?5 = v2747
    zf = v2944 [from 0x804837b:test   edx, edx]
    sf = v2942 [from 0x804837b:test   edx, edx]
    tf = v2750
    if = v2751
    df = v2752
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v2754
    iopl1 = v2755
    nt = v2756
    ?15 = v2757
    memory = {}
    ip = 0x804837d [from 0x804837b:test   edx, edx]
0x804837d:je     0x08048384<<Insn>>
    ax = v2728
    cx = v2729
    dx = v2885 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
    bx = v2844 [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2765 [from 0x804836e:pop    ebx]
    bp = v2733
    si = v2734
    di = v2735
    es = v2736
    cs = v2737
    ss = v2738
    ds = v2739
    fs = v2740
    gs = v2741
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v2743
    pf = -v2939-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v2745
    af = <top>
    ?5 = v2747
    zf = v2944 [from 0x804837b:test   edx, edx]
    sf = v2942 [from 0x804837b:test   edx, edx]
    tf = v2750
    if = v2751
    df = v2752
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v2754
    iopl1 = v2755
    nt = v2756
    ?15 = v2757
    memory = {}
    ip = v2990 [from 0x804837d:je     0x08048384<<Insn>>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804837f:call   0x08048330<__gmon_start__@plt>
    ax = v3115
    cx = v3116
    dx = v3117
    bx = v3118
    sp = v3157 [from 0x804837f:call   0x08048330<__gmon_start__@plt>]
    bp = v3120
    si = v3121
    di = v3122
    es = v3123
    cs = v3124
    ss = v3125
    ds = v3126
    fs = v3127
    gs = v3128
    cf = v3129
    ?1 = v3130
    pf = v3131
    ?3 = v3132
    af = v3133
    ?5 = v3134
    zf = v3135
    sf = v3136
    tf = v3137
    if = v3138
    df = v3139
    of = v3140
    iopl0 = v3141
    iopl1 = v3142
    nt = v3143
    ?15 = v3144
    memory = {
        size=4; addr=v3119-0x4 [from 0x804837f:call   0x08048330<__gmon_start__@plt>]; value=0x8048384 [from 0x804837f:call   0x08048330<__gmon_start__@plt>]
    }
    ip = 0x8048330 [from 0x804837f:call   0x08048330<__gmon_start__@plt>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048384:pop    eax
    ax = v3381 [from 0x8048384:pop    eax]
    cx = v3342
    dx = v3343
    bx = v3344
    sp = v3378 [from 0x8048384:pop    eax]
    bp = v3346
    si = v3347
    di = v3348
    es = v3349
    cs = v3350
    ss = v3351
    ds = v3352
    fs = v3353
    gs = v3354
    cf = v3355
    ?1 = v3356
    pf = v3357
    ?3 = v3358
    af = v3359
    ?5 = v3360
    zf = v3361
    sf = v3362
    tf = v3363
    if = v3364
    df = v3365
    of = v3366
    iopl0 = v3367
    iopl1 = v3368
    nt = v3369
    ?15 = v3370
    memory = {}
    ip = 0x8048385 [from 0x8048384:pop    eax]
0x8048385:pop    ebx
    ax = v3381 [from 0x8048384:pop    eax]
    cx = v3342
    dx = v3343
    bx = v3423 [from 0x8048385:pop    ebx]
    sp = v3420 [from 0x8048385:pop    ebx]
    bp = v3346
    si = v3347
    di = v3348
    es = v3349
    cs = v3350
    ss = v3351
    ds = v3352
    fs = v3353
    gs = v3354
    cf = v3355
    ?1 = v3356
    pf = v3357
    ?3 = v3358
    af = v3359
    ?5 = v3360
    zf = v3361
    sf = v3362
    tf = v3363
    if = v3364
    df = v3365
    of = v3366
    iopl0 = v3367
    iopl1 = v3368
    nt = v3369
    ?15 = v3370
    memory = {}
    ip = 0x8048386 [from 0x8048385:pop    ebx]
0x8048386:leave  
    ax = v3381 [from 0x8048384:pop    eax]
    cx = v3342
    dx = v3343
    bx = v3423 [from 0x8048385:pop    ebx]
    sp = v3467 [from 0x8048386:leave  ]
    bp = v3466 [from 0x8048386:leave  ]
    si = v3347
    di = v3348
    es = v3349
    cs = v3350
    ss = v3351
    ds = v3352
    fs = v3353
    gs = v3354
    cf = v3355
    ?1 = v3356
    pf = v3357
    ?3 = v3358
    af = v3359
    ?5 = v3360
    zf = v3361
    sf = v3362
    tf = v3363
    if = v3364
    df = v3365
    of = v3366
    iopl0 = v3367
    iopl1 = v3368
    nt = v3369
    ?15 = v3370
    memory = {}
    ip = 0x8048387 [from 0x8048386:leave  ]
0x8048387:ret    
    ax = v3381 [from 0x8048384:pop    eax]
    cx = v3342
    dx = v3343
    bx = v3423 [from 0x8048385:pop    ebx]
    sp = v3511 [from 0x8048387:ret    ]
    bp = v3466 [from 0x8048386:leave  ]
    si = v3347
    di = v3348
    es = v3349
    cs = v3350
    ss = v3351
    ds = v3352
    fs = v3353
    gs = v3354
    cf = v3355
    ?1 = v3356
    pf = v3357
    ?3 = v3358
    af = v3359
    ?5 = v3360
    zf = v3361
    sf = v3362
    tf = v3363
    if = v3364
    df = v3365
    of = v3366
    iopl0 = v3367
    iopl1 = v3368
    nt = v3369
    ?15 = v3370
    memory = {}
    ip = v3509 [from 0x8048387:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048390:push   ebp
    ax = v3575
    cx = v3576
    dx = v3577
    bx = v3578
    sp = v3615 [from 0x8048390:push   ebp]
    bp = v3580
    si = v3581
    di = v3582
    es = v3583
    cs = v3584
    ss = v3585
    ds = v3586
    fs = v3587
    gs = v3588
    cf = v3589
    ?1 = v3590
    pf = v3591
    ?3 = v3592
    af = v3593
    ?5 = v3594
    zf = v3595
    sf = v3596
    tf = v3597
    if = v3598
    df = v3599
    of = v3600
    iopl0 = v3601
    iopl1 = v3602
    nt = v3603
    ?15 = v3604
    memory = {
        size=4; addr=v3579-0x4 [from 0x8048390:push   ebp]; value=v3580
    }
    ip = 0x8048391 [from 0x8048390:push   ebp]
0x8048391:mov    ebp, esp
    ax = v3575
    cx = v3576
    dx = v3577
    bx = v3578
    sp = v3615 [from 0x8048390:push   ebp]
    bp = v3652 [from 0x8048391:mov    ebp, esp]
    si = v3581
    di = v3582
    es = v3583
    cs = v3584
    ss = v3585
    ds = v3586
    fs = v3587
    gs = v3588
    cf = v3589
    ?1 = v3590
    pf = v3591
    ?3 = v3592
    af = v3593
    ?5 = v3594
    zf = v3595
    sf = v3596
    tf = v3597
    if = v3598
    df = v3599
    of = v3600
    iopl0 = v3601
    iopl1 = v3602
    nt = v3603
    ?15 = v3604
    memory = {
        size=4; addr=v3579-0x4 [from 0x8048390:push   ebp]; value=v3580
    }
    ip = 0x8048393 [from 0x8048391:mov    ebp, esp]
0x8048393:sub    esp, 0x08
    ax = v3575
    cx = v3576
    dx = v3577
    bx = v3578
    sp = v3732 [from 0x8048393:sub    esp, 0x08]
    bp = v3652 [from 0x8048391:mov    ebp, esp]
    si = v3581
    di = v3582
    es = v3583
    cs = v3584
    ss = v3585
    ds = v3586
    fs = v3587
    gs = v3588
    cf = -v3725-0x1 [from 0x8048393:sub    esp, 0x08]
    ?1 = v3590
    pf = -v3715-0x1 [from 0x8048393:sub    esp, 0x08]
    ?3 = v3592
    af = -v3722-0x1 [from 0x8048393:sub    esp, 0x08]
    ?5 = v3594
    zf = v3720 [from 0x8048393:sub    esp, 0x08]
    sf = v3718 [from 0x8048393:sub    esp, 0x08]
    tf = v3597
    if = v3598
    df = v3599
    of = v3730 [from 0x8048393:sub    esp, 0x08]
    iopl0 = v3601
    iopl1 = v3602
    nt = v3603
    ?15 = v3604
    memory = {
        size=4; addr=v3579-0x4 [from 0x8048390:push   ebp]; value=v3580
    }
    ip = 0x8048396 [from 0x8048393:sub    esp, 0x08]
0x8048396:cmp    BYTE PTR ds:[0x080496f4<.bss>], 0x00
    ax = v3575
    cx = v3576
    dx = v3577
    bx = v3578
    sp = v3732 [from 0x8048393:sub    esp, 0x08]
    bp = v3652 [from 0x8048391:mov    ebp, esp]
    si = v3581
    di = v3582
    es = v3583
    cs = v3584
    ss = v3585
    ds = v3586
    fs = v3587
    gs = v3588
    cf = -v3807-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4<.bss>], 0x00]
    ?1 = v3590
    pf = -v3797-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4<.bss>], 0x00]
    ?3 = v3592
    af = -v3804-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4<.bss>], 0x00]
    ?5 = v3594
    zf = v3802 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4<.bss>], 0x00]
    sf = v3800 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4<.bss>], 0x00]
    tf = v3597
    if = v3598
    df = v3599
    of = v3812 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4<.bss>], 0x00]
    iopl0 = v3601
    iopl1 = v3602
    nt = v3603
    ?15 = v3604
    memory = {
        size=4; addr=v3579-0x4 [from 0x8048390:push   ebp]; value=v3580
    }
    ip = 0x804839d [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4<.bss>], 0x00]
0x804839d:jne    0x080483cc<<Insn>>
    ax = v3575
    cx = v3576
    dx = v3577
    bx = v3578
    sp = v3732 [from 0x8048393:sub    esp, 0x08]
    bp = v3652 [from 0x8048391:mov    ebp, esp]
    si = v3581
    di = v3582
    es = v3583
    cs = v3584
    ss = v3585
    ds = v3586
    fs = v3587
    gs = v3588
    cf = -v3807-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4<.bss>], 0x00]
    ?1 = v3590
    pf = -v3797-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4<.bss>], 0x00]
    ?3 = v3592
    af = -v3804-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4<.bss>], 0x00]
    ?5 = v3594
    zf = v3802 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4<.bss>], 0x00]
    sf = v3800 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4<.bss>], 0x00]
    tf = v3597
    if = v3598
    df = v3599
    of = v3812 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4<.bss>], 0x00]
    iopl0 = v3601
    iopl1 = v3602
    nt = v3603
    ?15 = v3604
    memory = {
        size=4; addr=v3579-0x4 [from 0x8048390:push   ebp]; value=v3580
    }
    ip = v3853 [from 0x804839d:jne    0x080483cc<<Insn>>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804839f:mov    eax, DWORD PTR ds:[0x080496f0<.data+8>]
    ax = v4015 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0<.data+8>]]
    cx = v3979
    dx = v3980
    bx = v3981
    sp = v3982
    bp = v3983
    si = v3984
    di = v3985
    es = v3986
    cs = v3987
    ss = v3988
    ds = v3989
    fs = v3990
    gs = v3991
    cf = v3992
    ?1 = v3993
    pf = v3994
    ?3 = v3995
    af = v3996
    ?5 = v3997
    zf = v3998
    sf = v3999
    tf = v4000
    if = v4001
    df = v4002
    of = v4003
    iopl0 = v4004
    iopl1 = v4005
    nt = v4006
    ?15 = v4007
    memory = {}
    ip = 0x80483a4 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0<.data+8>]]
0x80483a4:mov    edx, DWORD PTR ds:[eax]
    ax = v4015 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0<.data+8>]]
    cx = v3979
    dx = v4054 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3981
    sp = v3982
    bp = v3983
    si = v3984
    di = v3985
    es = v3986
    cs = v3987
    ss = v3988
    ds = v3989
    fs = v3990
    gs = v3991
    cf = v3992
    ?1 = v3993
    pf = v3994
    ?3 = v3995
    af = v3996
    ?5 = v3997
    zf = v3998
    sf = v3999
    tf = v4000
    if = v4001
    df = v4002
    of = v4003
    iopl0 = v4004
    iopl1 = v4005
    nt = v4006
    ?15 = v4007
    memory = {}
    ip = 0x80483a6 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
0x80483a6:test   edx, edx
    ax = v4015 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0<.data+8>]]
    cx = v3979
    dx = v4054 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3981
    sp = v3982
    bp = v3983
    si = v3984
    di = v3985
    es = v3986
    cs = v3987
    ss = v3988
    ds = v3989
    fs = v3990
    gs = v3991
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v3993
    pf = -v4108-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v3995
    af = <top>
    ?5 = v3997
    zf = v4113 [from 0x80483a6:test   edx, edx]
    sf = v4111 [from 0x80483a6:test   edx, edx]
    tf = v4000
    if = v4001
    df = v4002
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v4004
    iopl1 = v4005
    nt = v4006
    ?15 = v4007
    memory = {}
    ip = 0x80483a8 [from 0x80483a6:test   edx, edx]
0x80483a8:je     0x080483c5<<Insn>>
    ax = v4015 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0<.data+8>]]
    cx = v3979
    dx = v4054 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3981
    sp = v3982
    bp = v3983
    si = v3984
    di = v3985
    es = v3986
    cs = v3987
    ss = v3988
    ds = v3989
    fs = v3990
    gs = v3991
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v3993
    pf = -v4108-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v3995
    af = <top>
    ?5 = v3997
    zf = v4113 [from 0x80483a6:test   edx, edx]
    sf = v4111 [from 0x80483a6:test   edx, edx]
    tf = v4000
    if = v4001
    df = v4002
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v4004
    iopl1 = v4005
    nt = v4006
    ?15 = v4007
    memory = {}
    ip = v4159 [from 0x80483a8:je     0x080483c5<<Insn>>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483aa:lea    esi, [esi + 0x00000000]
    ax = v4284
    cx = v4285
    dx = v4286
    bx = v4287
    sp = v4288
    bp = v4289
    si = v4321 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v4291
    es = v4292
    cs = v4293
    ss = v4294
    ds = v4295
    fs = v4296
    gs = v4297
    cf = v4298
    ?1 = v4299
    pf = v4300
    ?3 = v4301
    af = v4302
    ?5 = v4303
    zf = v4304
    sf = v4305
    tf = v4306
    if = v4307
    df = v4308
    of = v4309
    iopl0 = v4310
    iopl1 = v4311
    nt = v4312
    ?15 = v4313
    memory = {}
    ip = 0x80483b0 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
0x80483b0:add    eax, 0x04
    ax = v4397 [from 0x80483b0:add    eax, 0x04]
    cx = v4285
    dx = v4286
    bx = v4287
    sp = v4288
    bp = v4289
    si = v4321 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v4291
    es = v4292
    cs = v4293
    ss = v4294
    ds = v4295
    fs = v4296
    gs = v4297
    cf = v4391 [from 0x80483b0:add    eax, 0x04]
    ?1 = v4299
    pf = -v4382-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v4301
    af = v4389 [from 0x80483b0:add    eax, 0x04]
    ?5 = v4303
    zf = v4387 [from 0x80483b0:add    eax, 0x04]
    sf = v4385 [from 0x80483b0:add    eax, 0x04]
    tf = v4306
    if = v4307
    df = v4308
    of = v4395 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v4310
    iopl1 = v4311
    nt = v4312
    ?15 = v4313
    memory = {}
    ip = 0x80483b3 [from 0x80483b0:add    eax, 0x04]
0x80483b3:mov    DWORD PTR ds:[0x080496f0<.data+8>], eax
    ax = v4397 [from 0x80483b0:add    eax, 0x04]
    cx = v4285
    dx = v4286
    bx = v4287
    sp = v4288
    bp = v4289
    si = v4321 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v4291
    es = v4292
    cs = v4293
    ss = v4294
    ds = v4295
    fs = v4296
    gs = v4297
    cf = v4391 [from 0x80483b0:add    eax, 0x04]
    ?1 = v4299
    pf = -v4382-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v4301
    af = v4389 [from 0x80483b0:add    eax, 0x04]
    ?5 = v4303
    zf = v4387 [from 0x80483b0:add    eax, 0x04]
    sf = v4385 [from 0x80483b0:add    eax, 0x04]
    tf = v4306
    if = v4307
    df = v4308
    of = v4395 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v4310
    iopl1 = v4311
    nt = v4312
    ?15 = v4313
    memory = {
        size=4; addr=0x80496f0 [from 0x80483b3:mov    DWORD PTR ds:[0x080496f0<.data+8>], eax]; value=v4397 [from 0x80483b0:add    eax, 0x04]
    }
    ip = 0x80483b8 [from 0x80483b3:mov    DWORD PTR ds:[0x080496f0<.data+8>], eax]
0x80483b8:call   edx
    ax = v4397 [from 0x80483b0:add    eax, 0x04]
    cx = v4285
    dx = v4286
    bx = v4287
    sp = v4480 [from 0x80483b8:call   edx]
    bp = v4289
    si = v4321 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v4291
    es = v4292
    cs = v4293
    ss = v4294
    ds = v4295
    fs = v4296
    gs = v4297
    cf = v4391 [from 0x80483b0:add    eax, 0x04]
    ?1 = v4299
    pf = -v4382-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v4301
    af = v4389 [from 0x80483b0:add    eax, 0x04]
    ?5 = v4303
    zf = v4387 [from 0x80483b0:add    eax, 0x04]
    sf = v4385 [from 0x80483b0:add    eax, 0x04]
    tf = v4306
    if = v4307
    df = v4308
    of = v4395 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v4310
    iopl1 = v4311
    nt = v4312
    ?15 = v4313
    memory = {
        size=4; addr=v4288-0x4 [from 0x80483b8:call   edx]; value=0x80483ba [from 0x80483b8:call   edx]
    }
    ip = v4286
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0<.data+8>]
    ax = v4671 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0<.data+8>]]
    cx = v4635
    dx = v4636
    bx = v4637
    sp = v4638
    bp = v4639
    si = v4640
    di = v4641
    es = v4642
    cs = v4643
    ss = v4644
    ds = v4645
    fs = v4646
    gs = v4647
    cf = v4648
    ?1 = v4649
    pf = v4650
    ?3 = v4651
    af = v4652
    ?5 = v4653
    zf = v4654
    sf = v4655
    tf = v4656
    if = v4657
    df = v4658
    of = v4659
    iopl0 = v4660
    iopl1 = v4661
    nt = v4662
    ?15 = v4663
    memory = {}
    ip = 0x80483bf [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0<.data+8>]]
0x80483bf:mov    edx, DWORD PTR ds:[eax]
    ax = v4671 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0<.data+8>]]
    cx = v4635
    dx = v4710 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = v4637
    sp = v4638
    bp = v4639
    si = v4640
    di = v4641
    es = v4642
    cs = v4643
    ss = v4644
    ds = v4645
    fs = v4646
    gs = v4647
    cf = v4648
    ?1 = v4649
    pf = v4650
    ?3 = v4651
    af = v4652
    ?5 = v4653
    zf = v4654
    sf = v4655
    tf = v4656
    if = v4657
    df = v4658
    of = v4659
    iopl0 = v4660
    iopl1 = v4661
    nt = v4662
    ?15 = v4663
    memory = {}
    ip = 0x80483c1 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
0x80483c1:test   edx, edx
    ax = v4671 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0<.data+8>]]
    cx = v4635
    dx = v4710 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = v4637
    sp = v4638
    bp = v4639
    si = v4640
    di = v4641
    es = v4642
    cs = v4643
    ss = v4644
    ds = v4645
    fs = v4646
    gs = v4647
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = v4649
    pf = -v4764-0x1 [from 0x80483c1:test   edx, edx]
    ?3 = v4651
    af = <top>
    ?5 = v4653
    zf = v4769 [from 0x80483c1:test   edx, edx]
    sf = v4767 [from 0x80483c1:test   edx, edx]
    tf = v4656
    if = v4657
    df = v4658
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = v4660
    iopl1 = v4661
    nt = v4662
    ?15 = v4663
    memory = {}
    ip = 0x80483c3 [from 0x80483c1:test   edx, edx]
0x80483c3:jne    0x080483b0<<Insn>>
    ax = v4671 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0<.data+8>]]
    cx = v4635
    dx = v4710 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = v4637
    sp = v4638
    bp = v4639
    si = v4640
    di = v4641
    es = v4642
    cs = v4643
    ss = v4644
    ds = v4645
    fs = v4646
    gs = v4647
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = v4649
    pf = -v4764-0x1 [from 0x80483c1:test   edx, edx]
    ?3 = v4651
    af = <top>
    ?5 = v4653
    zf = v4769 [from 0x80483c1:test   edx, edx]
    sf = v4767 [from 0x80483c1:test   edx, edx]
    tf = v4656
    if = v4657
    df = v4658
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = v4660
    iopl1 = v4661
    nt = v4662
    ?15 = v4663
    memory = {}
    ip = v4816 [from 0x80483c3:jne    0x080483b0<<Insn>>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483c5:mov    BYTE PTR ds:[0x080496f4<.bss>], 0x01
    ax = v4941
    cx = v4942
    dx = v4943
    bx = v4944
    sp = v4945
    bp = v4946
    si = v4947
    di = v4948
    es = v4949
    cs = v4950
    ss = v4951
    ds = v4952
    fs = v4953
    gs = v4954
    cf = v4955
    ?1 = v4956
    pf = v4957
    ?3 = v4958
    af = v4959
    ?5 = v4960
    zf = v4961
    sf = v4962
    tf = v4963
    if = v4964
    df = v4965
    of = v4966
    iopl0 = v4967
    iopl1 = v4968
    nt = v4969
    ?15 = v4970
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4<.bss>], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4<.bss>], 0x01]
    }
    ip = 0x80483cc [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4<.bss>], 0x01]
0x80483cc:leave  
    ax = v4941
    cx = v4942
    dx = v4943
    bx = v4944
    sp = v5022 [from 0x80483cc:leave  ]
    bp = v5021 [from 0x80483cc:leave  ]
    si = v4947
    di = v4948
    es = v4949
    cs = v4950
    ss = v4951
    ds = v4952
    fs = v4953
    gs = v4954
    cf = v4955
    ?1 = v4956
    pf = v4957
    ?3 = v4958
    af = v4959
    ?5 = v4960
    zf = v4961
    sf = v4962
    tf = v4963
    if = v4964
    df = v4965
    of = v4966
    iopl0 = v4967
    iopl1 = v4968
    nt = v4969
    ?15 = v4970
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4<.bss>], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4<.bss>], 0x01]
    }
    ip = 0x80483cd [from 0x80483cc:leave  ]
0x80483cd:ret    
    ax = v4941
    cx = v4942
    dx = v4943
    bx = v4944
    sp = v5066 [from 0x80483cd:ret    ]
    bp = v5021 [from 0x80483cc:leave  ]
    si = v4947
    di = v4948
    es = v4949
    cs = v4950
    ss = v4951
    ds = v4952
    fs = v4953
    gs = v4954
    cf = v4955
    ?1 = v4956
    pf = v4957
    ?3 = v4958
    af = v4959
    ?5 = v4960
    zf = v4961
    sf = v4962
    tf = v4963
    if = v4964
    df = v4965
    of = v4966
    iopl0 = v4967
    iopl1 = v4968
    nt = v4969
    ?15 = v4970
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4<.bss>], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4<.bss>], 0x01]
    }
    ip = v5064 [from 0x80483cd:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483d0:push   ebp
    ax = v5130
    cx = v5131
    dx = v5132
    bx = v5133
    sp = v5170 [from 0x80483d0:push   ebp]
    bp = v5135
    si = v5136
    di = v5137
    es = v5138
    cs = v5139
    ss = v5140
    ds = v5141
    fs = v5142
    gs = v5143
    cf = v5144
    ?1 = v5145
    pf = v5146
    ?3 = v5147
    af = v5148
    ?5 = v5149
    zf = v5150
    sf = v5151
    tf = v5152
    if = v5153
    df = v5154
    of = v5155
    iopl0 = v5156
    iopl1 = v5157
    nt = v5158
    ?15 = v5159
    memory = {
        size=4; addr=v5134-0x4 [from 0x80483d0:push   ebp]; value=v5135
    }
    ip = 0x80483d1 [from 0x80483d0:push   ebp]
0x80483d1:mov    ebp, esp
    ax = v5130
    cx = v5131
    dx = v5132
    bx = v5133
    sp = v5170 [from 0x80483d0:push   ebp]
    bp = v5207 [from 0x80483d1:mov    ebp, esp]
    si = v5136
    di = v5137
    es = v5138
    cs = v5139
    ss = v5140
    ds = v5141
    fs = v5142
    gs = v5143
    cf = v5144
    ?1 = v5145
    pf = v5146
    ?3 = v5147
    af = v5148
    ?5 = v5149
    zf = v5150
    sf = v5151
    tf = v5152
    if = v5153
    df = v5154
    of = v5155
    iopl0 = v5156
    iopl1 = v5157
    nt = v5158
    ?15 = v5159
    memory = {
        size=4; addr=v5134-0x4 [from 0x80483d0:push   ebp]; value=v5135
    }
    ip = 0x80483d3 [from 0x80483d1:mov    ebp, esp]
0x80483d3:sub    esp, 0x08
    ax = v5130
    cx = v5131
    dx = v5132
    bx = v5133
    sp = v5287 [from 0x80483d3:sub    esp, 0x08]
    bp = v5207 [from 0x80483d1:mov    ebp, esp]
    si = v5136
    di = v5137
    es = v5138
    cs = v5139
    ss = v5140
    ds = v5141
    fs = v5142
    gs = v5143
    cf = -v5280-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?1 = v5145
    pf = -v5270-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?3 = v5147
    af = -v5277-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?5 = v5149
    zf = v5275 [from 0x80483d3:sub    esp, 0x08]
    sf = v5273 [from 0x80483d3:sub    esp, 0x08]
    tf = v5152
    if = v5153
    df = v5154
    of = v5285 [from 0x80483d3:sub    esp, 0x08]
    iopl0 = v5156
    iopl1 = v5157
    nt = v5158
    ?15 = v5159
    memory = {
        size=4; addr=v5134-0x4 [from 0x80483d0:push   ebp]; value=v5135
    }
    ip = 0x80483d6 [from 0x80483d3:sub    esp, 0x08]
0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8<.jcr>]
    ax = v5326 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8<.jcr>]]
    cx = v5131
    dx = v5132
    bx = v5133
    sp = v5287 [from 0x80483d3:sub    esp, 0x08]
    bp = v5207 [from 0x80483d1:mov    ebp, esp]
    si = v5136
    di = v5137
    es = v5138
    cs = v5139
    ss = v5140
    ds = v5141
    fs = v5142
    gs = v5143
    cf = -v5280-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?1 = v5145
    pf = -v5270-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?3 = v5147
    af = -v5277-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?5 = v5149
    zf = v5275 [from 0x80483d3:sub    esp, 0x08]
    sf = v5273 [from 0x80483d3:sub    esp, 0x08]
    tf = v5152
    if = v5153
    df = v5154
    of = v5285 [from 0x80483d3:sub    esp, 0x08]
    iopl0 = v5156
    iopl1 = v5157
    nt = v5158
    ?15 = v5159
    memory = {
        size=4; addr=v5134-0x4 [from 0x80483d0:push   ebp]; value=v5135
    }
    ip = 0x80483db [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8<.jcr>]]
0x80483db:test   eax, eax
    ax = v5326 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8<.jcr>]]
    cx = v5131
    dx = v5132
    bx = v5133
    sp = v5287 [from 0x80483d3:sub    esp, 0x08]
    bp = v5207 [from 0x80483d1:mov    ebp, esp]
    si = v5136
    di = v5137
    es = v5138
    cs = v5139
    ss = v5140
    ds = v5141
    fs = v5142
    gs = v5143
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v5145
    pf = -v5380-0x1 [from 0x80483db:test   eax, eax]
    ?3 = v5147
    af = <top>
    ?5 = v5149
    zf = v5385 [from 0x80483db:test   eax, eax]
    sf = v5383 [from 0x80483db:test   eax, eax]
    tf = v5152
    if = v5153
    df = v5154
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v5156
    iopl1 = v5157
    nt = v5158
    ?15 = v5159
    memory = {
        size=4; addr=v5134-0x4 [from 0x80483d0:push   ebp]; value=v5135
    }
    ip = 0x80483dd [from 0x80483db:test   eax, eax]
0x80483dd:je     0x08048400<<Insn>>
    ax = v5326 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8<.jcr>]]
    cx = v5131
    dx = v5132
    bx = v5133
    sp = v5287 [from 0x80483d3:sub    esp, 0x08]
    bp = v5207 [from 0x80483d1:mov    ebp, esp]
    si = v5136
    di = v5137
    es = v5138
    cs = v5139
    ss = v5140
    ds = v5141
    fs = v5142
    gs = v5143
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v5145
    pf = -v5380-0x1 [from 0x80483db:test   eax, eax]
    ?3 = v5147
    af = <top>
    ?5 = v5149
    zf = v5385 [from 0x80483db:test   eax, eax]
    sf = v5383 [from 0x80483db:test   eax, eax]
    tf = v5152
    if = v5153
    df = v5154
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v5156
    iopl1 = v5157
    nt = v5158
    ?15 = v5159
    memory = {
        size=4; addr=v5134-0x4 [from 0x80483d0:push   ebp]; value=v5135
    }
    ip = v5431 [from 0x80483dd:je     0x08048400<<Insn>>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483df:mov    eax, 0x00000000
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v5557
    dx = v5558
    bx = v5559
    sp = v5560
    bp = v5561
    si = v5562
    di = v5563
    es = v5564
    cs = v5565
    ss = v5566
    ds = v5567
    fs = v5568
    gs = v5569
    cf = v5570
    ?1 = v5571
    pf = v5572
    ?3 = v5573
    af = v5574
    ?5 = v5575
    zf = v5576
    sf = v5577
    tf = v5578
    if = v5579
    df = v5580
    of = v5581
    iopl0 = v5582
    iopl1 = v5583
    nt = v5584
    ?15 = v5585
    memory = {}
    ip = 0x80483e4 [from 0x80483df:mov    eax, 0x00000000]
0x80483e4:test   eax, eax
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v5557
    dx = v5558
    bx = v5559
    sp = v5560
    bp = v5561
    si = v5562
    di = v5563
    es = v5564
    cs = v5565
    ss = v5566
    ds = v5567
    fs = v5568
    gs = v5569
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v5571
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v5573
    af = <top>
    ?5 = v5575
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v5578
    if = v5579
    df = v5580
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v5582
    iopl1 = v5583
    nt = v5584
    ?15 = v5585
    memory = {}
    ip = 0x80483e6 [from 0x80483e4:test   eax, eax]
0x80483e6:je     0x08048400<<Insn>>
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v5557
    dx = v5558
    bx = v5559
    sp = v5560
    bp = v5561
    si = v5562
    di = v5563
    es = v5564
    cs = v5565
    ss = v5566
    ds = v5567
    fs = v5568
    gs = v5569
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v5571
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v5573
    af = <top>
    ?5 = v5575
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v5578
    if = v5579
    df = v5580
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v5582
    iopl1 = v5583
    nt = v5584
    ?15 = v5585
    memory = {}
    ip = 0x8048400 [from 0x80483e6:je     0x08048400<<Insn>>]
0x8048400:mov    esp, ebp
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v5557
    dx = v5558
    bx = v5559
    sp = v5734 [from 0x8048400:mov    esp, ebp]
    bp = v5561
    si = v5562
    di = v5563
    es = v5564
    cs = v5565
    ss = v5566
    ds = v5567
    fs = v5568
    gs = v5569
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v5571
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v5573
    af = <top>
    ?5 = v5575
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v5578
    if = v5579
    df = v5580
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v5582
    iopl1 = v5583
    nt = v5584
    ?15 = v5585
    memory = {}
    ip = 0x8048402 [from 0x8048400:mov    esp, ebp]
0x8048402:pop    ebp
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v5557
    dx = v5558
    bx = v5559
    sp = v5773 [from 0x8048402:pop    ebp]
    bp = v5776 [from 0x8048402:pop    ebp]
    si = v5562
    di = v5563
    es = v5564
    cs = v5565
    ss = v5566
    ds = v5567
    fs = v5568
    gs = v5569
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v5571
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v5573
    af = <top>
    ?5 = v5575
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v5578
    if = v5579
    df = v5580
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v5582
    iopl1 = v5583
    nt = v5584
    ?15 = v5585
    memory = {}
    ip = 0x8048403 [from 0x8048402:pop    ebp]
0x8048403:ret    
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v5557
    dx = v5558
    bx = v5559
    sp = v5820 [from 0x8048403:ret    ]
    bp = v5776 [from 0x8048402:pop    ebp]
    si = v5562
    di = v5563
    es = v5564
    cs = v5565
    ss = v5566
    ds = v5567
    fs = v5568
    gs = v5569
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v5571
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v5573
    af = <top>
    ?5 = v5575
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v5578
    if = v5579
    df = v5580
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v5582
    iopl1 = v5583
    nt = v5584
    ?15 = v5585
    memory = {}
    ip = v5818 [from 0x8048403:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8<.jcr>
    ax = v5884
    cx = v5885
    dx = v5886
    bx = v5887
    sp = v5888
    bp = v5889
    si = v5890
    di = v5891
    es = v5892
    cs = v5893
    ss = v5894
    ds = v5895
    fs = v5896
    gs = v5897
    cf = v5898
    ?1 = v5899
    pf = v5900
    ?3 = v5901
    af = v5902
    ?5 = v5903
    zf = v5904
    sf = v5905
    tf = v5906
    if = v5907
    df = v5908
    of = v5909
    iopl0 = v5910
    iopl1 = v5911
    nt = v5912
    ?15 = v5913
    memory = {
        size=4; addr=v5888; value=0x80495f8 [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8<.jcr>]
    }
    ip = 0x80483ef [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8<.jcr>]
0x80483ef:call   0x00000000
    ax = v5884
    cx = v5885
    dx = v5886
    bx = v5887
    sp = v5965 [from 0x80483ef:call   0x00000000]
    bp = v5889
    si = v5890
    di = v5891
    es = v5892
    cs = v5893
    ss = v5894
    ds = v5895
    fs = v5896
    gs = v5897
    cf = v5898
    ?1 = v5899
    pf = v5900
    ?3 = v5901
    af = v5902
    ?5 = v5903
    zf = v5904
    sf = v5905
    tf = v5906
    if = v5907
    df = v5908
    of = v5909
    iopl0 = v5910
    iopl1 = v5911
    nt = v5912
    ?15 = v5913
    memory = {
        size=4; addr=v5888; value=0x80495f8 [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8<.jcr>]
        size=4; addr=v5888-0x4 [from 0x80483ef:call   0x00000000]; value=0x80483f4 [from 0x80483ef:call   0x00000000]
    }
    ip = 0x0 [from 0x80483ef:call   0x00000000]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483f4:lea    esi, [esi + 0x00000000]
    ax = v6149
    cx = v6150
    dx = v6151
    bx = v6152
    sp = v6153
    bp = v6154
    si = v6186 [from 0x80483f4:lea    esi, [esi + 0x00000000]]
    di = v6156
    es = v6157
    cs = v6158
    ss = v6159
    ds = v6160
    fs = v6161
    gs = v6162
    cf = v6163
    ?1 = v6164
    pf = v6165
    ?3 = v6166
    af = v6167
    ?5 = v6168
    zf = v6169
    sf = v6170
    tf = v6171
    if = v6172
    df = v6173
    of = v6174
    iopl0 = v6175
    iopl1 = v6176
    nt = v6177
    ?15 = v6178
    memory = {}
    ip = 0x80483fa [from 0x80483f4:lea    esi, [esi + 0x00000000]]
0x80483fa:lea    edi, [edi + 0x00000000]
    ax = v6149
    cx = v6150
    dx = v6151
    bx = v6152
    sp = v6153
    bp = v6154
    si = v6186 [from 0x80483f4:lea    esi, [esi + 0x00000000]]
    di = v6225 [from 0x80483fa:lea    edi, [edi + 0x00000000]]
    es = v6157
    cs = v6158
    ss = v6159
    ds = v6160
    fs = v6161
    gs = v6162
    cf = v6163
    ?1 = v6164
    pf = v6165
    ?3 = v6166
    af = v6167
    ?5 = v6168
    zf = v6169
    sf = v6170
    tf = v6171
    if = v6172
    df = v6173
    of = v6174
    iopl0 = v6175
    iopl1 = v6176
    nt = v6177
    ?15 = v6178
    memory = {}
    ip = 0x8048400 [from 0x80483fa:lea    edi, [edi + 0x00000000]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048410:push   ebp
    ax = v6319
    cx = v6320
    dx = v6321
    bx = v6322
    sp = v6359 [from 0x8048410:push   ebp]
    bp = v6324
    si = v6325
    di = v6326
    es = v6327
    cs = v6328
    ss = v6329
    ds = v6330
    fs = v6331
    gs = v6332
    cf = v6333
    ?1 = v6334
    pf = v6335
    ?3 = v6336
    af = v6337
    ?5 = v6338
    zf = v6339
    sf = v6340
    tf = v6341
    if = v6342
    df = v6343
    of = v6344
    iopl0 = v6345
    iopl1 = v6346
    nt = v6347
    ?15 = v6348
    memory = {
        size=4; addr=v6323-0x4 [from 0x8048410:push   ebp]; value=v6324
    }
    ip = 0x8048411 [from 0x8048410:push   ebp]
0x8048411:mov    edx, 0x08048480<handler>
    ax = v6319
    cx = v6320
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480<handler>]
    bx = v6322
    sp = v6359 [from 0x8048410:push   ebp]
    bp = v6324
    si = v6325
    di = v6326
    es = v6327
    cs = v6328
    ss = v6329
    ds = v6330
    fs = v6331
    gs = v6332
    cf = v6333
    ?1 = v6334
    pf = v6335
    ?3 = v6336
    af = v6337
    ?5 = v6338
    zf = v6339
    sf = v6340
    tf = v6341
    if = v6342
    df = v6343
    of = v6344
    iopl0 = v6345
    iopl1 = v6346
    nt = v6347
    ?15 = v6348
    memory = {
        size=4; addr=v6323-0x4 [from 0x8048410:push   ebp]; value=v6324
    }
    ip = 0x8048416 [from 0x8048411:mov    edx, 0x08048480<handler>]
0x8048416:mov    ebp, esp
    ax = v6319
    cx = v6320
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480<handler>]
    bx = v6322
    sp = v6359 [from 0x8048410:push   ebp]
    bp = v6433 [from 0x8048416:mov    ebp, esp]
    si = v6325
    di = v6326
    es = v6327
    cs = v6328
    ss = v6329
    ds = v6330
    fs = v6331
    gs = v6332
    cf = v6333
    ?1 = v6334
    pf = v6335
    ?3 = v6336
    af = v6337
    ?5 = v6338
    zf = v6339
    sf = v6340
    tf = v6341
    if = v6342
    df = v6343
    of = v6344
    iopl0 = v6345
    iopl1 = v6346
    nt = v6347
    ?15 = v6348
    memory = {
        size=4; addr=v6323-0x4 [from 0x8048410:push   ebp]; value=v6324
    }
    ip = 0x8048418 [from 0x8048416:mov    ebp, esp]
0x8048418:sub    esp, 0x08
    ax = v6319
    cx = v6320
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480<handler>]
    bx = v6322
    sp = v6513 [from 0x8048418:sub    esp, 0x08]
    bp = v6433 [from 0x8048416:mov    ebp, esp]
    si = v6325
    di = v6326
    es = v6327
    cs = v6328
    ss = v6329
    ds = v6330
    fs = v6331
    gs = v6332
    cf = -v6506-0x1 [from 0x8048418:sub    esp, 0x08]
    ?1 = v6334
    pf = -v6496-0x1 [from 0x8048418:sub    esp, 0x08]
    ?3 = v6336
    af = -v6503-0x1 [from 0x8048418:sub    esp, 0x08]
    ?5 = v6338
    zf = v6501 [from 0x8048418:sub    esp, 0x08]
    sf = v6499 [from 0x8048418:sub    esp, 0x08]
    tf = v6341
    if = v6342
    df = v6343
    of = v6511 [from 0x8048418:sub    esp, 0x08]
    iopl0 = v6345
    iopl1 = v6346
    nt = v6347
    ?15 = v6348
    memory = {
        size=4; addr=v6323-0x4 [from 0x8048410:push   ebp]; value=v6324
    }
    ip = 0x804841b [from 0x8048418:sub    esp, 0x08]
0x804841b:and    esp, 0xf0<-0x10>
    ax = v6319
    cx = v6320
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480<handler>]
    bx = v6322
    sp = v6574 [from 0x804841b:and    esp, 0xf0<-0x10>]
    bp = v6433 [from 0x8048416:mov    ebp, esp]
    si = v6325
    di = v6326
    es = v6327
    cs = v6328
    ss = v6329
    ds = v6330
    fs = v6331
    gs = v6332
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v6334
    pf = -v6567-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v6336
    af = <top>
    ?5 = v6338
    zf = v6572 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v6570 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v6341
    if = v6342
    df = v6343
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v6345
    iopl1 = v6346
    nt = v6347
    ?15 = v6348
    memory = {
        size=4; addr=v6323-0x4 [from 0x8048410:push   ebp]; value=v6324
    }
    ip = 0x804841e [from 0x804841b:and    esp, 0xf0<-0x10>]
0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx
    ax = v6319
    cx = v6320
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480<handler>]
    bx = v6322
    sp = v6574 [from 0x804841b:and    esp, 0xf0<-0x10>]
    bp = v6433 [from 0x8048416:mov    ebp, esp]
    si = v6325
    di = v6326
    es = v6327
    cs = v6328
    ss = v6329
    ds = v6330
    fs = v6331
    gs = v6332
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v6334
    pf = -v6567-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v6336
    af = <top>
    ?5 = v6338
    zf = v6572 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v6570 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v6341
    if = v6342
    df = v6343
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v6345
    iopl1 = v6346
    nt = v6347
    ?15 = v6348
    memory = {
        size=4; addr=v6574+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480<handler>]
    }
    ip = 0x8048422 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]
0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a
    ax = v6319
    cx = v6320
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480<handler>]
    bx = v6322
    sp = v6574 [from 0x804841b:and    esp, 0xf0<-0x10>]
    bp = v6433 [from 0x8048416:mov    ebp, esp]
    si = v6325
    di = v6326
    es = v6327
    cs = v6328
    ss = v6329
    ds = v6330
    fs = v6331
    gs = v6332
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v6334
    pf = -v6567-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v6336
    af = <top>
    ?5 = v6338
    zf = v6572 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v6570 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v6341
    if = v6342
    df = v6343
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v6345
    iopl1 = v6346
    nt = v6347
    ?15 = v6348
    memory = {
        size=4; addr=v6574 [from 0x804841b:and    esp, 0xf0<-0x10>]; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
        size=4; addr=v6574+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480<handler>]
    }
    ip = 0x8048429 [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
0x8048429:call   0x080482f0<signal@plt>
    ax = v6319
    cx = v6320
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480<handler>]
    bx = v6322
    sp = v6704 [from 0x8048429:call   0x080482f0<signal@plt>]
    bp = v6433 [from 0x8048416:mov    ebp, esp]
    si = v6325
    di = v6326
    es = v6327
    cs = v6328
    ss = v6329
    ds = v6330
    fs = v6331
    gs = v6332
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v6334
    pf = -v6567-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v6336
    af = <top>
    ?5 = v6338
    zf = v6572 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v6570 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v6341
    if = v6342
    df = v6343
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v6345
    iopl1 = v6346
    nt = v6347
    ?15 = v6348
    memory = {
        size=4; addr=v6574 [from 0x804841b:and    esp, 0xf0<-0x10>]; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
        size=4; addr=v6574+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480<handler>]
        size=4; addr=v6574-0x4 [from 0x8048429:call   0x080482f0<signal@plt>]; value=0x804842e [from 0x8048429:call   0x080482f0<signal@plt>]
    }
    ip = 0x80482f0 [from 0x8048429:call   0x080482f0<signal@plt>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804842e:mov    esp, ebp
    ax = v6888
    cx = v6889
    dx = v6890
    bx = v6891
    sp = v6923 [from 0x804842e:mov    esp, ebp]
    bp = v6893
    si = v6894
    di = v6895
    es = v6896
    cs = v6897
    ss = v6898
    ds = v6899
    fs = v6900
    gs = v6901
    cf = v6902
    ?1 = v6903
    pf = v6904
    ?3 = v6905
    af = v6906
    ?5 = v6907
    zf = v6908
    sf = v6909
    tf = v6910
    if = v6911
    df = v6912
    of = v6913
    iopl0 = v6914
    iopl1 = v6915
    nt = v6916
    ?15 = v6917
    memory = {}
    ip = 0x8048430 [from 0x804842e:mov    esp, ebp]
0x8048430:xor    eax, eax
    ax = 0x0 [from 0x8048430:xor    eax, eax]
    cx = v6889
    dx = v6890
    bx = v6891
    sp = v6923 [from 0x804842e:mov    esp, ebp]
    bp = v6893
    si = v6894
    di = v6895
    es = v6896
    cs = v6897
    ss = v6898
    ds = v6899
    fs = v6900
    gs = v6901
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = v6903
    pf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    ?3 = v6905
    af = <top>
    ?5 = v6907
    zf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    sf = 0x0 [from 0x8048430:xor    eax, eax]
    tf = v6910
    if = v6911
    df = v6912
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = v6914
    iopl1 = v6915
    nt = v6916
    ?15 = v6917
    memory = {}
    ip = 0x8048432 [from 0x8048430:xor    eax, eax]
0x8048432:pop    ebp
    ax = 0x0 [from 0x8048430:xor    eax, eax]
    cx = v6889
    dx = v6890
    bx = v6891
    sp = v7029 [from 0x8048432:pop    ebp]
    bp = v7032 [from 0x8048432:pop    ebp]
    si = v6894
    di = v6895
    es = v6896
    cs = v6897
    ss = v6898
    ds = v6899
    fs = v6900
    gs = v6901
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = v6903
    pf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    ?3 = v6905
    af = <top>
    ?5 = v6907
    zf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    sf = 0x0 [from 0x8048430:xor    eax, eax]
    tf = v6910
    if = v6911
    df = v6912
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = v6914
    iopl1 = v6915
    nt = v6916
    ?15 = v6917
    memory = {}
    ip = 0x8048433 [from 0x8048432:pop    ebp]
0x8048433:ret    
    ax = 0x0 [from 0x8048430:xor    eax, eax]
    cx = v6889
    dx = v6890
    bx = v6891
    sp = v7076 [from 0x8048433:ret    ]
    bp = v7032 [from 0x8048432:pop    ebp]
    si = v6894
    di = v6895
    es = v6896
    cs = v6897
    ss = v6898
    ds = v6899
    fs = v6900
    gs = v6901
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = v6903
    pf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    ?3 = v6905
    af = <top>
    ?5 = v6907
    zf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    sf = 0x0 [from 0x8048430:xor    eax, eax]
    tf = v6910
    if = v6911
    df = v6912
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = v6914
    iopl1 = v6915
    nt = v6916
    ?15 = v6917
    memory = {}
    ip = v7074 [from 0x8048433:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048440:push   ebp
    ax = v7140
    cx = v7141
    dx = v7142
    bx = v7143
    sp = v7180 [from 0x8048440:push   ebp]
    bp = v7145
    si = v7146
    di = v7147
    es = v7148
    cs = v7149
    ss = v7150
    ds = v7151
    fs = v7152
    gs = v7153
    cf = v7154
    ?1 = v7155
    pf = v7156
    ?3 = v7157
    af = v7158
    ?5 = v7159
    zf = v7160
    sf = v7161
    tf = v7162
    if = v7163
    df = v7164
    of = v7165
    iopl0 = v7166
    iopl1 = v7167
    nt = v7168
    ?15 = v7169
    memory = {
        size=4; addr=v7144-0x4 [from 0x8048440:push   ebp]; value=v7145
    }
    ip = 0x8048441 [from 0x8048440:push   ebp]
0x8048441:mov    ebp, esp
    ax = v7140
    cx = v7141
    dx = v7142
    bx = v7143
    sp = v7180 [from 0x8048440:push   ebp]
    bp = v7217 [from 0x8048441:mov    ebp, esp]
    si = v7146
    di = v7147
    es = v7148
    cs = v7149
    ss = v7150
    ds = v7151
    fs = v7152
    gs = v7153
    cf = v7154
    ?1 = v7155
    pf = v7156
    ?3 = v7157
    af = v7158
    ?5 = v7159
    zf = v7160
    sf = v7161
    tf = v7162
    if = v7163
    df = v7164
    of = v7165
    iopl0 = v7166
    iopl1 = v7167
    nt = v7168
    ?15 = v7169
    memory = {
        size=4; addr=v7144-0x4 [from 0x8048440:push   ebp]; value=v7145
    }
    ip = 0x8048443 [from 0x8048441:mov    ebp, esp]
0x8048443:sub    esp, 0x08
    ax = v7140
    cx = v7141
    dx = v7142
    bx = v7143
    sp = v7297 [from 0x8048443:sub    esp, 0x08]
    bp = v7217 [from 0x8048441:mov    ebp, esp]
    si = v7146
    di = v7147
    es = v7148
    cs = v7149
    ss = v7150
    ds = v7151
    fs = v7152
    gs = v7153
    cf = -v7290-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v7155
    pf = -v7280-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v7157
    af = -v7287-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v7159
    zf = v7285 [from 0x8048443:sub    esp, 0x08]
    sf = v7283 [from 0x8048443:sub    esp, 0x08]
    tf = v7162
    if = v7163
    df = v7164
    of = v7295 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v7166
    iopl1 = v7167
    nt = v7168
    ?15 = v7169
    memory = {
        size=4; addr=v7144-0x4 [from 0x8048440:push   ebp]; value=v7145
    }
    ip = 0x8048446 [from 0x8048443:sub    esp, 0x08]
0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>
    ax = v7140
    cx = v7141
    dx = v7142
    bx = v7143
    sp = v7297 [from 0x8048443:sub    esp, 0x08]
    bp = v7217 [from 0x8048441:mov    ebp, esp]
    si = v7146
    di = v7147
    es = v7148
    cs = v7149
    ss = v7150
    ds = v7151
    fs = v7152
    gs = v7153
    cf = -v7290-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v7155
    pf = -v7280-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v7157
    af = -v7287-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v7159
    zf = v7285 [from 0x8048443:sub    esp, 0x08]
    sf = v7283 [from 0x8048443:sub    esp, 0x08]
    tf = v7162
    if = v7163
    df = v7164
    of = v7295 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v7166
    iopl1 = v7167
    nt = v7168
    ?15 = v7169
    memory = {
        size=4; addr=v7297 [from 0x8048443:sub    esp, 0x08]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>]
    }
    ip = 0x804844d [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>]
0x804844d:call   0x08048300<puts@plt>
    ax = v7140
    cx = v7141
    dx = v7142
    bx = v7143
    sp = v7380 [from 0x804844d:call   0x08048300<puts@plt>]
    bp = v7217 [from 0x8048441:mov    ebp, esp]
    si = v7146
    di = v7147
    es = v7148
    cs = v7149
    ss = v7150
    ds = v7151
    fs = v7152
    gs = v7153
    cf = -v7290-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v7155
    pf = -v7280-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v7157
    af = -v7287-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v7159
    zf = v7285 [from 0x8048443:sub    esp, 0x08]
    sf = v7283 [from 0x8048443:sub    esp, 0x08]
    tf = v7162
    if = v7163
    df = v7164
    of = v7295 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v7166
    iopl1 = v7167
    nt = v7168
    ?15 = v7169
    memory = {
        size=4; addr=v7297 [from 0x8048443:sub    esp, 0x08]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>]
        size=4; addr=v7297-0x4 [from 0x804844d:call   0x08048300<puts@plt>]; value=0x8048452 [from 0x804844d:call   0x08048300<puts@plt>]
    }
    ip = 0x8048300 [from 0x804844d:call   0x08048300<puts@plt>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048452:mov    esp, ebp
    ax = v7564
    cx = v7565
    dx = v7566
    bx = v7567
    sp = v7599 [from 0x8048452:mov    esp, ebp]
    bp = v7569
    si = v7570
    di = v7571
    es = v7572
    cs = v7573
    ss = v7574
    ds = v7575
    fs = v7576
    gs = v7577
    cf = v7578
    ?1 = v7579
    pf = v7580
    ?3 = v7581
    af = v7582
    ?5 = v7583
    zf = v7584
    sf = v7585
    tf = v7586
    if = v7587
    df = v7588
    of = v7589
    iopl0 = v7590
    iopl1 = v7591
    nt = v7592
    ?15 = v7593
    memory = {}
    ip = 0x8048454 [from 0x8048452:mov    esp, ebp]
0x8048454:pop    ebp
    ax = v7564
    cx = v7565
    dx = v7566
    bx = v7567
    sp = v7638 [from 0x8048454:pop    ebp]
    bp = v7641 [from 0x8048454:pop    ebp]
    si = v7570
    di = v7571
    es = v7572
    cs = v7573
    ss = v7574
    ds = v7575
    fs = v7576
    gs = v7577
    cf = v7578
    ?1 = v7579
    pf = v7580
    ?3 = v7581
    af = v7582
    ?5 = v7583
    zf = v7584
    sf = v7585
    tf = v7586
    if = v7587
    df = v7588
    of = v7589
    iopl0 = v7590
    iopl1 = v7591
    nt = v7592
    ?15 = v7593
    memory = {}
    ip = 0x8048455 [from 0x8048454:pop    ebp]
0x8048455:ret    
    ax = v7564
    cx = v7565
    dx = v7566
    bx = v7567
    sp = v7685 [from 0x8048455:ret    ]
    bp = v7641 [from 0x8048454:pop    ebp]
    si = v7570
    di = v7571
    es = v7572
    cs = v7573
    ss = v7574
    ds = v7575
    fs = v7576
    gs = v7577
    cf = v7578
    ?1 = v7579
    pf = v7580
    ?3 = v7581
    af = v7582
    ?5 = v7583
    zf = v7584
    sf = v7585
    tf = v7586
    if = v7587
    df = v7588
    of = v7589
    iopl0 = v7590
    iopl1 = v7591
    nt = v7592
    ?15 = v7593
    memory = {}
    ip = v7683 [from 0x8048455:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048460:push   ebp
    ax = v7749
    cx = v7750
    dx = v7751
    bx = v7752
    sp = v7789 [from 0x8048460:push   ebp]
    bp = v7754
    si = v7755
    di = v7756
    es = v7757
    cs = v7758
    ss = v7759
    ds = v7760
    fs = v7761
    gs = v7762
    cf = v7763
    ?1 = v7764
    pf = v7765
    ?3 = v7766
    af = v7767
    ?5 = v7768
    zf = v7769
    sf = v7770
    tf = v7771
    if = v7772
    df = v7773
    of = v7774
    iopl0 = v7775
    iopl1 = v7776
    nt = v7777
    ?15 = v7778
    memory = {
        size=4; addr=v7753-0x4 [from 0x8048460:push   ebp]; value=v7754
    }
    ip = 0x8048461 [from 0x8048460:push   ebp]
0x8048461:mov    ebp, esp
    ax = v7749
    cx = v7750
    dx = v7751
    bx = v7752
    sp = v7789 [from 0x8048460:push   ebp]
    bp = v7826 [from 0x8048461:mov    ebp, esp]
    si = v7755
    di = v7756
    es = v7757
    cs = v7758
    ss = v7759
    ds = v7760
    fs = v7761
    gs = v7762
    cf = v7763
    ?1 = v7764
    pf = v7765
    ?3 = v7766
    af = v7767
    ?5 = v7768
    zf = v7769
    sf = v7770
    tf = v7771
    if = v7772
    df = v7773
    of = v7774
    iopl0 = v7775
    iopl1 = v7776
    nt = v7777
    ?15 = v7778
    memory = {
        size=4; addr=v7753-0x4 [from 0x8048460:push   ebp]; value=v7754
    }
    ip = 0x8048463 [from 0x8048461:mov    ebp, esp]
0x8048463:sub    esp, 0x08
    ax = v7749
    cx = v7750
    dx = v7751
    bx = v7752
    sp = v7906 [from 0x8048463:sub    esp, 0x08]
    bp = v7826 [from 0x8048461:mov    ebp, esp]
    si = v7755
    di = v7756
    es = v7757
    cs = v7758
    ss = v7759
    ds = v7760
    fs = v7761
    gs = v7762
    cf = -v7899-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v7764
    pf = -v7889-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v7766
    af = -v7896-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v7768
    zf = v7894 [from 0x8048463:sub    esp, 0x08]
    sf = v7892 [from 0x8048463:sub    esp, 0x08]
    tf = v7771
    if = v7772
    df = v7773
    of = v7904 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v7775
    iopl1 = v7776
    nt = v7777
    ?15 = v7778
    memory = {
        size=4; addr=v7753-0x4 [from 0x8048460:push   ebp]; value=v7754
    }
    ip = 0x8048466 [from 0x8048463:sub    esp, 0x08]
0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>
    ax = v7749
    cx = v7750
    dx = v7751
    bx = v7752
    sp = v7906 [from 0x8048463:sub    esp, 0x08]
    bp = v7826 [from 0x8048461:mov    ebp, esp]
    si = v7755
    di = v7756
    es = v7757
    cs = v7758
    ss = v7759
    ds = v7760
    fs = v7761
    gs = v7762
    cf = -v7899-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v7764
    pf = -v7889-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v7766
    af = -v7896-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v7768
    zf = v7894 [from 0x8048463:sub    esp, 0x08]
    sf = v7892 [from 0x8048463:sub    esp, 0x08]
    tf = v7771
    if = v7772
    df = v7773
    of = v7904 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v7775
    iopl1 = v7776
    nt = v7777
    ?15 = v7778
    memory = {
        size=4; addr=v7906 [from 0x8048463:sub    esp, 0x08]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>]
    }
    ip = 0x804846d [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>]
0x804846d:call   0x08048300<puts@plt>
    ax = v7749
    cx = v7750
    dx = v7751
    bx = v7752
    sp = v7989 [from 0x804846d:call   0x08048300<puts@plt>]
    bp = v7826 [from 0x8048461:mov    ebp, esp]
    si = v7755
    di = v7756
    es = v7757
    cs = v7758
    ss = v7759
    ds = v7760
    fs = v7761
    gs = v7762
    cf = -v7899-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v7764
    pf = -v7889-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v7766
    af = -v7896-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v7768
    zf = v7894 [from 0x8048463:sub    esp, 0x08]
    sf = v7892 [from 0x8048463:sub    esp, 0x08]
    tf = v7771
    if = v7772
    df = v7773
    of = v7904 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v7775
    iopl1 = v7776
    nt = v7777
    ?15 = v7778
    memory = {
        size=4; addr=v7906 [from 0x8048463:sub    esp, 0x08]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>]
        size=4; addr=v7906-0x4 [from 0x804846d:call   0x08048300<puts@plt>]; value=0x8048472 [from 0x804846d:call   0x08048300<puts@plt>]
    }
    ip = 0x8048300 [from 0x804846d:call   0x08048300<puts@plt>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048472:mov    DWORD PTR ss:[esp], 0x00000000
    ax = v8173
    cx = v8174
    dx = v8175
    bx = v8176
    sp = v8177
    bp = v8178
    si = v8179
    di = v8180
    es = v8181
    cs = v8182
    ss = v8183
    ds = v8184
    fs = v8185
    gs = v8186
    cf = v8187
    ?1 = v8188
    pf = v8189
    ?3 = v8190
    af = v8191
    ?5 = v8192
    zf = v8193
    sf = v8194
    tf = v8195
    if = v8196
    df = v8197
    of = v8198
    iopl0 = v8199
    iopl1 = v8200
    nt = v8201
    ?15 = v8202
    memory = {
        size=4; addr=v8177; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
    }
    ip = 0x8048479 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
0x8048479:call   0x08048320<_exit@plt>
    ax = v8173
    cx = v8174
    dx = v8175
    bx = v8176
    sp = v8254 [from 0x8048479:call   0x08048320<_exit@plt>]
    bp = v8178
    si = v8179
    di = v8180
    es = v8181
    cs = v8182
    ss = v8183
    ds = v8184
    fs = v8185
    gs = v8186
    cf = v8187
    ?1 = v8188
    pf = v8189
    ?3 = v8190
    af = v8191
    ?5 = v8192
    zf = v8193
    sf = v8194
    tf = v8195
    if = v8196
    df = v8197
    of = v8198
    iopl0 = v8199
    iopl1 = v8200
    nt = v8201
    ?15 = v8202
    memory = {
        size=4; addr=v8177; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
        size=4; addr=v8177-0x4 [from 0x8048479:call   0x08048320<_exit@plt>]; value=0x804847e [from 0x8048479:call   0x08048320<_exit@plt>]
    }
    ip = 0x8048320 [from 0x8048479:call   0x08048320<_exit@plt>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048480:push   ebp
    ax = v8438
    cx = v8439
    dx = v8440
    bx = v8441
    sp = v8478 [from 0x8048480:push   ebp]
    bp = v8443
    si = v8444
    di = v8445
    es = v8446
    cs = v8447
    ss = v8448
    ds = v8449
    fs = v8450
    gs = v8451
    cf = v8452
    ?1 = v8453
    pf = v8454
    ?3 = v8455
    af = v8456
    ?5 = v8457
    zf = v8458
    sf = v8459
    tf = v8460
    if = v8461
    df = v8462
    of = v8463
    iopl0 = v8464
    iopl1 = v8465
    nt = v8466
    ?15 = v8467
    memory = {
        size=4; addr=v8442-0x4 [from 0x8048480:push   ebp]; value=v8443
    }
    ip = 0x8048481 [from 0x8048480:push   ebp]
0x8048481:mov    ebp, esp
    ax = v8438
    cx = v8439
    dx = v8440
    bx = v8441
    sp = v8478 [from 0x8048480:push   ebp]
    bp = v8515 [from 0x8048481:mov    ebp, esp]
    si = v8444
    di = v8445
    es = v8446
    cs = v8447
    ss = v8448
    ds = v8449
    fs = v8450
    gs = v8451
    cf = v8452
    ?1 = v8453
    pf = v8454
    ?3 = v8455
    af = v8456
    ?5 = v8457
    zf = v8458
    sf = v8459
    tf = v8460
    if = v8461
    df = v8462
    of = v8463
    iopl0 = v8464
    iopl1 = v8465
    nt = v8466
    ?15 = v8467
    memory = {
        size=4; addr=v8442-0x4 [from 0x8048480:push   ebp]; value=v8443
    }
    ip = 0x8048483 [from 0x8048481:mov    ebp, esp]
0x8048483:sub    esp, 0x08
    ax = v8438
    cx = v8439
    dx = v8440
    bx = v8441
    sp = v8595 [from 0x8048483:sub    esp, 0x08]
    bp = v8515 [from 0x8048481:mov    ebp, esp]
    si = v8444
    di = v8445
    es = v8446
    cs = v8447
    ss = v8448
    ds = v8449
    fs = v8450
    gs = v8451
    cf = -v8588-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v8453
    pf = -v8578-0x1 [from 0x8048483:sub    esp, 0x08]
    ?3 = v8455
    af = -v8585-0x1 [from 0x8048483:sub    esp, 0x08]
    ?5 = v8457
    zf = v8583 [from 0x8048483:sub    esp, 0x08]
    sf = v8581 [from 0x8048483:sub    esp, 0x08]
    tf = v8460
    if = v8461
    df = v8462
    of = v8593 [from 0x8048483:sub    esp, 0x08]
    iopl0 = v8464
    iopl1 = v8465
    nt = v8466
    ?15 = v8467
    memory = {
        size=4; addr=v8442-0x4 [from 0x8048480:push   ebp]; value=v8443
    }
    ip = 0x8048486 [from 0x8048483:sub    esp, 0x08]
0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]
    ax = v8438
    cx = v8439
    dx = v8440
    bx = v8441
    sp = v8595 [from 0x8048483:sub    esp, 0x08]
    bp = v8515 [from 0x8048481:mov    ebp, esp]
    si = v8444
    di = v8445
    es = v8446
    cs = v8447
    ss = v8448
    ds = v8449
    fs = v8450
    gs = v8451
    cf = -v8588-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v8453
    pf = -v8658-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]]
    ?3 = v8455
    af = v8665 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]]
    ?5 = v8457
    zf = v8663 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]]
    sf = v8661 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]]
    tf = v8460
    if = v8461
    df = v8462
    of = v8669 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]]
    iopl0 = v8464
    iopl1 = v8465
    nt = v8466
    ?15 = v8467
    memory = {
        size=4; addr=0x80496f8 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]]; value=v8633+0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]]
    }
    ip = 0x804848c [from 0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]]
0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>
    ax = v8438
    cx = v8439
    dx = v8440
    bx = v8441
    sp = v8595 [from 0x8048483:sub    esp, 0x08]
    bp = v8515 [from 0x8048481:mov    ebp, esp]
    si = v8444
    di = v8445
    es = v8446
    cs = v8447
    ss = v8448
    ds = v8449
    fs = v8450
    gs = v8451
    cf = -v8588-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v8453
    pf = -v8658-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]]
    ?3 = v8455
    af = v8665 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]]
    ?5 = v8457
    zf = v8663 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]]
    sf = v8661 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]]
    tf = v8460
    if = v8461
    df = v8462
    of = v8669 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]]
    iopl0 = v8464
    iopl1 = v8465
    nt = v8466
    ?15 = v8467
    memory = {
        size=4; addr=v8595 [from 0x8048483:sub    esp, 0x08]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>]
    }
    ip = 0x8048493 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>]
0x8048493:call   0x08048300<puts@plt>
    ax = v8438
    cx = v8439
    dx = v8440
    bx = v8441
    sp = v8756 [from 0x8048493:call   0x08048300<puts@plt>]
    bp = v8515 [from 0x8048481:mov    ebp, esp]
    si = v8444
    di = v8445
    es = v8446
    cs = v8447
    ss = v8448
    ds = v8449
    fs = v8450
    gs = v8451
    cf = -v8588-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v8453
    pf = -v8658-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]]
    ?3 = v8455
    af = v8665 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]]
    ?5 = v8457
    zf = v8663 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]]
    sf = v8661 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]]
    tf = v8460
    if = v8461
    df = v8462
    of = v8669 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]]
    iopl0 = v8464
    iopl1 = v8465
    nt = v8466
    ?15 = v8467
    memory = {
        size=4; addr=v8595 [from 0x8048483:sub    esp, 0x08]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>]
        size=4; addr=v8595-0x4 [from 0x8048493:call   0x08048300<puts@plt>]; value=0x8048498 [from 0x8048493:call   0x08048300<puts@plt>]
    }
    ip = 0x8048300 [from 0x8048493:call   0x08048300<puts@plt>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048498:mov    DWORD PTR ss:[esp], 0x00000000
    ax = v8940
    cx = v8941
    dx = v8942
    bx = v8943
    sp = v8944
    bp = v8945
    si = v8946
    di = v8947
    es = v8948
    cs = v8949
    ss = v8950
    ds = v8951
    fs = v8952
    gs = v8953
    cf = v8954
    ?1 = v8955
    pf = v8956
    ?3 = v8957
    af = v8958
    ?5 = v8959
    zf = v8960
    sf = v8961
    tf = v8962
    if = v8963
    df = v8964
    of = v8965
    iopl0 = v8966
    iopl1 = v8967
    nt = v8968
    ?15 = v8969
    memory = {
        size=4; addr=v8944; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
    }
    ip = 0x804849f [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
0x804849f:call   0x08048320<_exit@plt>
    ax = v8940
    cx = v8941
    dx = v8942
    bx = v8943
    sp = v9021 [from 0x804849f:call   0x08048320<_exit@plt>]
    bp = v8945
    si = v8946
    di = v8947
    es = v8948
    cs = v8949
    ss = v8950
    ds = v8951
    fs = v8952
    gs = v8953
    cf = v8954
    ?1 = v8955
    pf = v8956
    ?3 = v8957
    af = v8958
    ?5 = v8959
    zf = v8960
    sf = v8961
    tf = v8962
    if = v8963
    df = v8964
    of = v8965
    iopl0 = v8966
    iopl1 = v8967
    nt = v8968
    ?15 = v8969
    memory = {
        size=4; addr=v8944; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
        size=4; addr=v8944-0x4 [from 0x804849f:call   0x08048320<_exit@plt>]; value=0x80484a4 [from 0x804849f:call   0x08048320<_exit@plt>]
    }
    ip = 0x8048320 [from 0x804849f:call   0x08048320<_exit@plt>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484b0:push   ebp
    ax = v9205
    cx = v9206
    dx = v9207
    bx = v9208
    sp = v9245 [from 0x80484b0:push   ebp]
    bp = v9210
    si = v9211
    di = v9212
    es = v9213
    cs = v9214
    ss = v9215
    ds = v9216
    fs = v9217
    gs = v9218
    cf = v9219
    ?1 = v9220
    pf = v9221
    ?3 = v9222
    af = v9223
    ?5 = v9224
    zf = v9225
    sf = v9226
    tf = v9227
    if = v9228
    df = v9229
    of = v9230
    iopl0 = v9231
    iopl1 = v9232
    nt = v9233
    ?15 = v9234
    memory = {
        size=4; addr=v9209-0x4 [from 0x80484b0:push   ebp]; value=v9210
    }
    ip = 0x80484b1 [from 0x80484b0:push   ebp]
0x80484b1:mov    ebp, esp
    ax = v9205
    cx = v9206
    dx = v9207
    bx = v9208
    sp = v9245 [from 0x80484b0:push   ebp]
    bp = v9282 [from 0x80484b1:mov    ebp, esp]
    si = v9211
    di = v9212
    es = v9213
    cs = v9214
    ss = v9215
    ds = v9216
    fs = v9217
    gs = v9218
    cf = v9219
    ?1 = v9220
    pf = v9221
    ?3 = v9222
    af = v9223
    ?5 = v9224
    zf = v9225
    sf = v9226
    tf = v9227
    if = v9228
    df = v9229
    of = v9230
    iopl0 = v9231
    iopl1 = v9232
    nt = v9233
    ?15 = v9234
    memory = {
        size=4; addr=v9209-0x4 [from 0x80484b0:push   ebp]; value=v9210
    }
    ip = 0x80484b3 [from 0x80484b1:mov    ebp, esp]
0x80484b3:push   edi
    ax = v9205
    cx = v9206
    dx = v9207
    bx = v9208
    sp = v9324 [from 0x80484b3:push   edi]
    bp = v9282 [from 0x80484b1:mov    ebp, esp]
    si = v9211
    di = v9212
    es = v9213
    cs = v9214
    ss = v9215
    ds = v9216
    fs = v9217
    gs = v9218
    cf = v9219
    ?1 = v9220
    pf = v9221
    ?3 = v9222
    af = v9223
    ?5 = v9224
    zf = v9225
    sf = v9226
    tf = v9227
    if = v9228
    df = v9229
    of = v9230
    iopl0 = v9231
    iopl1 = v9232
    nt = v9233
    ?15 = v9234
    memory = {
        size=4; addr=v9245-0x4 [from 0x80484b3:push   edi]; value=v9212
    }
    ip = 0x80484b4 [from 0x80484b3:push   edi]
0x80484b4:push   esi
    ax = v9205
    cx = v9206
    dx = v9207
    bx = v9208
    sp = v9366 [from 0x80484b4:push   esi]
    bp = v9282 [from 0x80484b1:mov    ebp, esp]
    si = v9211
    di = v9212
    es = v9213
    cs = v9214
    ss = v9215
    ds = v9216
    fs = v9217
    gs = v9218
    cf = v9219
    ?1 = v9220
    pf = v9221
    ?3 = v9222
    af = v9223
    ?5 = v9224
    zf = v9225
    sf = v9226
    tf = v9227
    if = v9228
    df = v9229
    of = v9230
    iopl0 = v9231
    iopl1 = v9232
    nt = v9233
    ?15 = v9234
    memory = {
        size=4; addr=v9324-0x4 [from 0x80484b4:push   esi]; value=v9211
    }
    ip = 0x80484b5 [from 0x80484b4:push   esi]
0x80484b5:push   ebx
    ax = v9205
    cx = v9206
    dx = v9207
    bx = v9208
    sp = v9408 [from 0x80484b5:push   ebx]
    bp = v9282 [from 0x80484b1:mov    ebp, esp]
    si = v9211
    di = v9212
    es = v9213
    cs = v9214
    ss = v9215
    ds = v9216
    fs = v9217
    gs = v9218
    cf = v9219
    ?1 = v9220
    pf = v9221
    ?3 = v9222
    af = v9223
    ?5 = v9224
    zf = v9225
    sf = v9226
    tf = v9227
    if = v9228
    df = v9229
    of = v9230
    iopl0 = v9231
    iopl1 = v9232
    nt = v9233
    ?15 = v9234
    memory = {
        size=4; addr=v9366-0x4 [from 0x80484b5:push   ebx]; value=v9208
    }
    ip = 0x80484b6 [from 0x80484b5:push   ebx]
0x80484b6:sub    esp, 0x0c
    ax = v9205
    cx = v9206
    dx = v9207
    bx = v9208
    sp = v9488 [from 0x80484b6:sub    esp, 0x0c]
    bp = v9282 [from 0x80484b1:mov    ebp, esp]
    si = v9211
    di = v9212
    es = v9213
    cs = v9214
    ss = v9215
    ds = v9216
    fs = v9217
    gs = v9218
    cf = -v9481-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?1 = v9220
    pf = -v9471-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?3 = v9222
    af = -v9478-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?5 = v9224
    zf = v9476 [from 0x80484b6:sub    esp, 0x0c]
    sf = v9474 [from 0x80484b6:sub    esp, 0x0c]
    tf = v9227
    if = v9228
    df = v9229
    of = v9486 [from 0x80484b6:sub    esp, 0x0c]
    iopl0 = v9231
    iopl1 = v9232
    nt = v9233
    ?15 = v9234
    memory = {
        size=4; addr=v9366-0x4 [from 0x80484b5:push   ebx]; value=v9208
    }
    ip = 0x80484b9 [from 0x80484b6:sub    esp, 0x0c]
0x80484b9:call   0x080484be<<Insn>>
    ax = v9205
    cx = v9206
    dx = v9207
    bx = v9208
    sp = v9532 [from 0x80484b9:call   0x080484be<<Insn>>]
    bp = v9282 [from 0x80484b1:mov    ebp, esp]
    si = v9211
    di = v9212
    es = v9213
    cs = v9214
    ss = v9215
    ds = v9216
    fs = v9217
    gs = v9218
    cf = -v9481-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?1 = v9220
    pf = -v9471-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?3 = v9222
    af = -v9478-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?5 = v9224
    zf = v9476 [from 0x80484b6:sub    esp, 0x0c]
    sf = v9474 [from 0x80484b6:sub    esp, 0x0c]
    tf = v9227
    if = v9228
    df = v9229
    of = v9486 [from 0x80484b6:sub    esp, 0x0c]
    iopl0 = v9231
    iopl1 = v9232
    nt = v9233
    ?15 = v9234
    memory = {
        size=4; addr=v9488-0x4 [from 0x80484b9:call   0x080484be<<Insn>>]; value=0x80484be [from 0x80484b9:call   0x080484be<<Insn>>]
    }
    ip = 0x80484be [from 0x80484b9:call   0x080484be<<Insn>>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484be:pop    ebx
    ax = v9626
    cx = v9627
    dx = v9628
    bx = v9666 [from 0x80484be:pop    ebx]
    sp = v9663 [from 0x80484be:pop    ebx]
    bp = v9631
    si = v9632
    di = v9633
    es = v9634
    cs = v9635
    ss = v9636
    ds = v9637
    fs = v9638
    gs = v9639
    cf = v9640
    ?1 = v9641
    pf = v9642
    ?3 = v9643
    af = v9644
    ?5 = v9645
    zf = v9646
    sf = v9647
    tf = v9648
    if = v9649
    df = v9650
    of = v9651
    iopl0 = v9652
    iopl1 = v9653
    nt = v9654
    ?15 = v9655
    memory = {}
    ip = 0x80484bf [from 0x80484be:pop    ebx]
0x80484bf:add    ebx, 0x0000120a
    ax = v9626
    cx = v9627
    dx = v9628
    bx = v9742 [from 0x80484bf:add    ebx, 0x0000120a]
    sp = v9663 [from 0x80484be:pop    ebx]
    bp = v9631
    si = v9632
    di = v9633
    es = v9634
    cs = v9635
    ss = v9636
    ds = v9637
    fs = v9638
    gs = v9639
    cf = v9736 [from 0x80484bf:add    ebx, 0x0000120a]
    ?1 = v9641
    pf = -v9727-0x1 [from 0x80484bf:add    ebx, 0x0000120a]
    ?3 = v9643
    af = v9734 [from 0x80484bf:add    ebx, 0x0000120a]
    ?5 = v9645
    zf = v9732 [from 0x80484bf:add    ebx, 0x0000120a]
    sf = v9730 [from 0x80484bf:add    ebx, 0x0000120a]
    tf = v9648
    if = v9649
    df = v9650
    of = v9740 [from 0x80484bf:add    ebx, 0x0000120a]
    iopl0 = v9652
    iopl1 = v9653
    nt = v9654
    ?15 = v9655
    memory = {}
    ip = 0x80484c5 [from 0x80484bf:add    ebx, 0x0000120a]
0x80484c5:call   0x080482c8<_init>
    ax = v9626
    cx = v9627
    dx = v9628
    bx = v9742 [from 0x80484bf:add    ebx, 0x0000120a]
    sp = v9786 [from 0x80484c5:call   0x080482c8<_init>]
    bp = v9631
    si = v9632
    di = v9633
    es = v9634
    cs = v9635
    ss = v9636
    ds = v9637
    fs = v9638
    gs = v9639
    cf = v9736 [from 0x80484bf:add    ebx, 0x0000120a]
    ?1 = v9641
    pf = -v9727-0x1 [from 0x80484bf:add    ebx, 0x0000120a]
    ?3 = v9643
    af = v9734 [from 0x80484bf:add    ebx, 0x0000120a]
    ?5 = v9645
    zf = v9732 [from 0x80484bf:add    ebx, 0x0000120a]
    sf = v9730 [from 0x80484bf:add    ebx, 0x0000120a]
    tf = v9648
    if = v9649
    df = v9650
    of = v9740 [from 0x80484bf:add    ebx, 0x0000120a]
    iopl0 = v9652
    iopl1 = v9653
    nt = v9654
    ?15 = v9655
    memory = {
        size=4; addr=v9663-0x4 [from 0x80484c5:call   0x080482c8<_init>]; value=0x80484ca [from 0x80484c5:call   0x080482c8<_init>]
    }
    ip = 0x80482c8 [from 0x80484c5:call   0x080482c8<_init>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
    ax = v10007 [from 0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v9971
    dx = v9972
    bx = v9973
    sp = v9974
    bp = v9975
    si = v9976
    di = v9977
    es = v9978
    cs = v9979
    ss = v9980
    ds = v9981
    fs = v9982
    gs = v9983
    cf = v9984
    ?1 = v9985
    pf = v9986
    ?3 = v9987
    af = v9988
    ?5 = v9989
    zf = v9990
    sf = v9991
    tf = v9992
    if = v9993
    df = v9994
    of = v9995
    iopl0 = v9996
    iopl1 = v9997
    nt = v9998
    ?15 = v9999
    memory = {}
    ip = 0x80484d0 [from 0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
    ax = v10007 [from 0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v9971
    dx = v10046 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9973
    sp = v9974
    bp = v9975
    si = v9976
    di = v9977
    es = v9978
    cs = v9979
    ss = v9980
    ds = v9981
    fs = v9982
    gs = v9983
    cf = v9984
    ?1 = v9985
    pf = v9986
    ?3 = v9987
    af = v9988
    ?5 = v9989
    zf = v9990
    sf = v9991
    tf = v9992
    if = v9993
    df = v9994
    of = v9995
    iopl0 = v9996
    iopl1 = v9997
    nt = v9998
    ?15 = v9999
    memory = {}
    ip = 0x80484d6 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
0x80484d6:sub    eax, edx
    ax = v10126 [from 0x80484d6:sub    eax, edx]
    cx = v9971
    dx = v10046 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9973
    sp = v9974
    bp = v9975
    si = v9976
    di = v9977
    es = v9978
    cs = v9979
    ss = v9980
    ds = v9981
    fs = v9982
    gs = v9983
    cf = -v10119-0x1 [from 0x80484d6:sub    eax, edx]
    ?1 = v9985
    pf = -v10109-0x1 [from 0x80484d6:sub    eax, edx]
    ?3 = v9987
    af = -v10116-0x1 [from 0x80484d6:sub    eax, edx]
    ?5 = v9989
    zf = v10114 [from 0x80484d6:sub    eax, edx]
    sf = v10112 [from 0x80484d6:sub    eax, edx]
    tf = v9992
    if = v9993
    df = v9994
    of = v10124 [from 0x80484d6:sub    eax, edx]
    iopl0 = v9996
    iopl1 = v9997
    nt = v9998
    ?15 = v9999
    memory = {}
    ip = 0x80484d8 [from 0x80484d6:sub    eax, edx]
0x80484d8:sar    eax, 0x02
    ax = v10218 [from 0x80484d8:sar    eax, 0x02]
    cx = v9971
    dx = v10046 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9973
    sp = v9974
    bp = v9975
    si = v9976
    di = v9977
    es = v9978
    cs = v9979
    ss = v9980
    ds = v9981
    fs = v9982
    gs = v9983
    cf = v10173 [from 0x80484d8:sar    eax, 0x02]
    ?1 = v9985
    pf = -v10206-0x1 [from 0x80484d8:sar    eax, 0x02]
    ?3 = v9987
    af = <top>
    ?5 = v9989
    zf = v10215 [from 0x80484d8:sar    eax, 0x02]
    sf = v10211 [from 0x80484d8:sar    eax, 0x02]
    tf = v9992
    if = v9993
    df = v9994
    of = v10124 [from 0x80484d6:sub    eax, edx]
    iopl0 = v9996
    iopl1 = v9997
    nt = v9998
    ?15 = v9999
    memory = {}
    ip = 0x80484db [from 0x80484d8:sar    eax, 0x02]
0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
    ax = v10218 [from 0x80484d8:sar    eax, 0x02]
    cx = v9971
    dx = v10046 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9973
    sp = v9974
    bp = v9975
    si = v9976
    di = v9977
    es = v9978
    cs = v9979
    ss = v9980
    ds = v9981
    fs = v9982
    gs = v9983
    cf = v10173 [from 0x80484d8:sar    eax, 0x02]
    ?1 = v9985
    pf = -v10206-0x1 [from 0x80484d8:sar    eax, 0x02]
    ?3 = v9987
    af = <top>
    ?5 = v9989
    zf = v10215 [from 0x80484d8:sar    eax, 0x02]
    sf = v10211 [from 0x80484d8:sar    eax, 0x02]
    tf = v9992
    if = v9993
    df = v9994
    of = v10124 [from 0x80484d6:sub    eax, edx]
    iopl0 = v9996
    iopl1 = v9997
    nt = v9998
    ?15 = v9999
    memory = {
        size=4; addr=v9975-0x10 [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v10218 [from 0x80484d8:sar    eax, 0x02]
    }
    ip = 0x80484de [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]
0x80484de:jne    0x080484f0<<StaticData@0x080484e8>+8>
    ax = v10218 [from 0x80484d8:sar    eax, 0x02]
    cx = v9971
    dx = v10046 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9973
    sp = v9974
    bp = v9975
    si = v9976
    di = v9977
    es = v9978
    cs = v9979
    ss = v9980
    ds = v9981
    fs = v9982
    gs = v9983
    cf = v10173 [from 0x80484d8:sar    eax, 0x02]
    ?1 = v9985
    pf = -v10206-0x1 [from 0x80484d8:sar    eax, 0x02]
    ?3 = v9987
    af = <top>
    ?5 = v9989
    zf = v10215 [from 0x80484d8:sar    eax, 0x02]
    sf = v10211 [from 0x80484d8:sar    eax, 0x02]
    tf = v9992
    if = v9993
    df = v9994
    of = v10124 [from 0x80484d6:sub    eax, edx]
    iopl0 = v9996
    iopl1 = v9997
    nt = v9998
    ?15 = v9999
    memory = {
        size=4; addr=v9975-0x10 [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v10218 [from 0x80484d8:sar    eax, 0x02]
    }
    ip = v10299 [from 0x80484de:jne    0x080484f0<<StaticData@0x080484e8>+8>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484e0:add    esp, 0x0c
    ax = v10424
    cx = v10425
    dx = v10426
    bx = v10427
    sp = v10498 [from 0x80484e0:add    esp, 0x0c]
    bp = v10429
    si = v10430
    di = v10431
    es = v10432
    cs = v10433
    ss = v10434
    ds = v10435
    fs = v10436
    gs = v10437
    cf = v10492 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v10439
    pf = -v10483-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v10441
    af = v10490 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v10443
    zf = v10488 [from 0x80484e0:add    esp, 0x0c]
    sf = v10486 [from 0x80484e0:add    esp, 0x0c]
    tf = v10446
    if = v10447
    df = v10448
    of = v10496 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v10450
    iopl1 = v10451
    nt = v10452
    ?15 = v10453
    memory = {}
    ip = 0x80484e3 [from 0x80484e0:add    esp, 0x0c]
0x80484e3:pop    ebx
    ax = v10424
    cx = v10425
    dx = v10426
    bx = v10540 [from 0x80484e3:pop    ebx]
    sp = v10537 [from 0x80484e3:pop    ebx]
    bp = v10429
    si = v10430
    di = v10431
    es = v10432
    cs = v10433
    ss = v10434
    ds = v10435
    fs = v10436
    gs = v10437
    cf = v10492 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v10439
    pf = -v10483-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v10441
    af = v10490 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v10443
    zf = v10488 [from 0x80484e0:add    esp, 0x0c]
    sf = v10486 [from 0x80484e0:add    esp, 0x0c]
    tf = v10446
    if = v10447
    df = v10448
    of = v10496 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v10450
    iopl1 = v10451
    nt = v10452
    ?15 = v10453
    memory = {}
    ip = 0x80484e4 [from 0x80484e3:pop    ebx]
0x80484e4:pop    esi
    ax = v10424
    cx = v10425
    dx = v10426
    bx = v10540 [from 0x80484e3:pop    ebx]
    sp = v10579 [from 0x80484e4:pop    esi]
    bp = v10429
    si = v10582 [from 0x80484e4:pop    esi]
    di = v10431
    es = v10432
    cs = v10433
    ss = v10434
    ds = v10435
    fs = v10436
    gs = v10437
    cf = v10492 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v10439
    pf = -v10483-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v10441
    af = v10490 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v10443
    zf = v10488 [from 0x80484e0:add    esp, 0x0c]
    sf = v10486 [from 0x80484e0:add    esp, 0x0c]
    tf = v10446
    if = v10447
    df = v10448
    of = v10496 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v10450
    iopl1 = v10451
    nt = v10452
    ?15 = v10453
    memory = {}
    ip = 0x80484e5 [from 0x80484e4:pop    esi]
0x80484e5:pop    edi
    ax = v10424
    cx = v10425
    dx = v10426
    bx = v10540 [from 0x80484e3:pop    ebx]
    sp = v10621 [from 0x80484e5:pop    edi]
    bp = v10429
    si = v10582 [from 0x80484e4:pop    esi]
    di = v10624 [from 0x80484e5:pop    edi]
    es = v10432
    cs = v10433
    ss = v10434
    ds = v10435
    fs = v10436
    gs = v10437
    cf = v10492 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v10439
    pf = -v10483-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v10441
    af = v10490 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v10443
    zf = v10488 [from 0x80484e0:add    esp, 0x0c]
    sf = v10486 [from 0x80484e0:add    esp, 0x0c]
    tf = v10446
    if = v10447
    df = v10448
    of = v10496 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v10450
    iopl1 = v10451
    nt = v10452
    ?15 = v10453
    memory = {}
    ip = 0x80484e6 [from 0x80484e5:pop    edi]
0x80484e6:pop    ebp
    ax = v10424
    cx = v10425
    dx = v10426
    bx = v10540 [from 0x80484e3:pop    ebx]
    sp = v10663 [from 0x80484e6:pop    ebp]
    bp = v10666 [from 0x80484e6:pop    ebp]
    si = v10582 [from 0x80484e4:pop    esi]
    di = v10624 [from 0x80484e5:pop    edi]
    es = v10432
    cs = v10433
    ss = v10434
    ds = v10435
    fs = v10436
    gs = v10437
    cf = v10492 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v10439
    pf = -v10483-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v10441
    af = v10490 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v10443
    zf = v10488 [from 0x80484e0:add    esp, 0x0c]
    sf = v10486 [from 0x80484e0:add    esp, 0x0c]
    tf = v10446
    if = v10447
    df = v10448
    of = v10496 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v10450
    iopl1 = v10451
    nt = v10452
    ?15 = v10453
    memory = {}
    ip = 0x80484e7 [from 0x80484e6:pop    ebp]
0x80484e7:ret    
    ax = v10424
    cx = v10425
    dx = v10426
    bx = v10540 [from 0x80484e3:pop    ebx]
    sp = v10710 [from 0x80484e7:ret    ]
    bp = v10666 [from 0x80484e6:pop    ebp]
    si = v10582 [from 0x80484e4:pop    esi]
    di = v10624 [from 0x80484e5:pop    edi]
    es = v10432
    cs = v10433
    ss = v10434
    ds = v10435
    fs = v10436
    gs = v10437
    cf = v10492 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v10439
    pf = -v10483-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v10441
    af = v10490 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v10443
    zf = v10488 [from 0x80484e0:add    esp, 0x0c]
    sf = v10486 [from 0x80484e0:add    esp, 0x0c]
    tf = v10446
    if = v10447
    df = v10448
    of = v10496 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v10450
    iopl1 = v10451
    nt = v10452
    ?15 = v10453
    memory = {}
    ip = v10708 [from 0x80484e7:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048520:push   ebp
    ax = v10774
    cx = v10775
    dx = v10776
    bx = v10777
    sp = v10814 [from 0x8048520:push   ebp]
    bp = v10779
    si = v10780
    di = v10781
    es = v10782
    cs = v10783
    ss = v10784
    ds = v10785
    fs = v10786
    gs = v10787
    cf = v10788
    ?1 = v10789
    pf = v10790
    ?3 = v10791
    af = v10792
    ?5 = v10793
    zf = v10794
    sf = v10795
    tf = v10796
    if = v10797
    df = v10798
    of = v10799
    iopl0 = v10800
    iopl1 = v10801
    nt = v10802
    ?15 = v10803
    memory = {
        size=4; addr=v10778-0x4 [from 0x8048520:push   ebp]; value=v10779
    }
    ip = 0x8048521 [from 0x8048520:push   ebp]
0x8048521:mov    ebp, esp
    ax = v10774
    cx = v10775
    dx = v10776
    bx = v10777
    sp = v10814 [from 0x8048520:push   ebp]
    bp = v10851 [from 0x8048521:mov    ebp, esp]
    si = v10780
    di = v10781
    es = v10782
    cs = v10783
    ss = v10784
    ds = v10785
    fs = v10786
    gs = v10787
    cf = v10788
    ?1 = v10789
    pf = v10790
    ?3 = v10791
    af = v10792
    ?5 = v10793
    zf = v10794
    sf = v10795
    tf = v10796
    if = v10797
    df = v10798
    of = v10799
    iopl0 = v10800
    iopl1 = v10801
    nt = v10802
    ?15 = v10803
    memory = {
        size=4; addr=v10778-0x4 [from 0x8048520:push   ebp]; value=v10779
    }
    ip = 0x8048523 [from 0x8048521:mov    ebp, esp]
0x8048523:push   edi
    ax = v10774
    cx = v10775
    dx = v10776
    bx = v10777
    sp = v10893 [from 0x8048523:push   edi]
    bp = v10851 [from 0x8048521:mov    ebp, esp]
    si = v10780
    di = v10781
    es = v10782
    cs = v10783
    ss = v10784
    ds = v10785
    fs = v10786
    gs = v10787
    cf = v10788
    ?1 = v10789
    pf = v10790
    ?3 = v10791
    af = v10792
    ?5 = v10793
    zf = v10794
    sf = v10795
    tf = v10796
    if = v10797
    df = v10798
    of = v10799
    iopl0 = v10800
    iopl1 = v10801
    nt = v10802
    ?15 = v10803
    memory = {
        size=4; addr=v10814-0x4 [from 0x8048523:push   edi]; value=v10781
    }
    ip = 0x8048524 [from 0x8048523:push   edi]
0x8048524:push   esi
    ax = v10774
    cx = v10775
    dx = v10776
    bx = v10777
    sp = v10935 [from 0x8048524:push   esi]
    bp = v10851 [from 0x8048521:mov    ebp, esp]
    si = v10780
    di = v10781
    es = v10782
    cs = v10783
    ss = v10784
    ds = v10785
    fs = v10786
    gs = v10787
    cf = v10788
    ?1 = v10789
    pf = v10790
    ?3 = v10791
    af = v10792
    ?5 = v10793
    zf = v10794
    sf = v10795
    tf = v10796
    if = v10797
    df = v10798
    of = v10799
    iopl0 = v10800
    iopl1 = v10801
    nt = v10802
    ?15 = v10803
    memory = {
        size=4; addr=v10893-0x4 [from 0x8048524:push   esi]; value=v10780
    }
    ip = 0x8048525 [from 0x8048524:push   esi]
0x8048525:push   ebx
    ax = v10774
    cx = v10775
    dx = v10776
    bx = v10777
    sp = v10977 [from 0x8048525:push   ebx]
    bp = v10851 [from 0x8048521:mov    ebp, esp]
    si = v10780
    di = v10781
    es = v10782
    cs = v10783
    ss = v10784
    ds = v10785
    fs = v10786
    gs = v10787
    cf = v10788
    ?1 = v10789
    pf = v10790
    ?3 = v10791
    af = v10792
    ?5 = v10793
    zf = v10794
    sf = v10795
    tf = v10796
    if = v10797
    df = v10798
    of = v10799
    iopl0 = v10800
    iopl1 = v10801
    nt = v10802
    ?15 = v10803
    memory = {
        size=4; addr=v10935-0x4 [from 0x8048525:push   ebx]; value=v10777
    }
    ip = 0x8048526 [from 0x8048525:push   ebx]
0x8048526:sub    esp, 0x0c
    ax = v10774
    cx = v10775
    dx = v10776
    bx = v10777
    sp = v11057 [from 0x8048526:sub    esp, 0x0c]
    bp = v10851 [from 0x8048521:mov    ebp, esp]
    si = v10780
    di = v10781
    es = v10782
    cs = v10783
    ss = v10784
    ds = v10785
    fs = v10786
    gs = v10787
    cf = -v11050-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?1 = v10789
    pf = -v11040-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?3 = v10791
    af = -v11047-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?5 = v10793
    zf = v11045 [from 0x8048526:sub    esp, 0x0c]
    sf = v11043 [from 0x8048526:sub    esp, 0x0c]
    tf = v10796
    if = v10797
    df = v10798
    of = v11055 [from 0x8048526:sub    esp, 0x0c]
    iopl0 = v10800
    iopl1 = v10801
    nt = v10802
    ?15 = v10803
    memory = {
        size=4; addr=v10935-0x4 [from 0x8048525:push   ebx]; value=v10777
    }
    ip = 0x8048529 [from 0x8048526:sub    esp, 0x0c]
0x8048529:call   0x0804852e<<Insn>>
    ax = v10774
    cx = v10775
    dx = v10776
    bx = v10777
    sp = v11101 [from 0x8048529:call   0x0804852e<<Insn>>]
    bp = v10851 [from 0x8048521:mov    ebp, esp]
    si = v10780
    di = v10781
    es = v10782
    cs = v10783
    ss = v10784
    ds = v10785
    fs = v10786
    gs = v10787
    cf = -v11050-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?1 = v10789
    pf = -v11040-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?3 = v10791
    af = -v11047-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?5 = v10793
    zf = v11045 [from 0x8048526:sub    esp, 0x0c]
    sf = v11043 [from 0x8048526:sub    esp, 0x0c]
    tf = v10796
    if = v10797
    df = v10798
    of = v11055 [from 0x8048526:sub    esp, 0x0c]
    iopl0 = v10800
    iopl1 = v10801
    nt = v10802
    ?15 = v10803
    memory = {
        size=4; addr=v11057-0x4 [from 0x8048529:call   0x0804852e<<Insn>>]; value=0x804852e [from 0x8048529:call   0x0804852e<<Insn>>]
    }
    ip = 0x804852e [from 0x8048529:call   0x0804852e<<Insn>>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804852e:pop    ebx
    ax = v11195
    cx = v11196
    dx = v11197
    bx = v11235 [from 0x804852e:pop    ebx]
    sp = v11232 [from 0x804852e:pop    ebx]
    bp = v11200
    si = v11201
    di = v11202
    es = v11203
    cs = v11204
    ss = v11205
    ds = v11206
    fs = v11207
    gs = v11208
    cf = v11209
    ?1 = v11210
    pf = v11211
    ?3 = v11212
    af = v11213
    ?5 = v11214
    zf = v11215
    sf = v11216
    tf = v11217
    if = v11218
    df = v11219
    of = v11220
    iopl0 = v11221
    iopl1 = v11222
    nt = v11223
    ?15 = v11224
    memory = {}
    ip = 0x804852f [from 0x804852e:pop    ebx]
0x804852f:add    ebx, 0x0000119a
    ax = v11195
    cx = v11196
    dx = v11197
    bx = v11311 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v11232 [from 0x804852e:pop    ebx]
    bp = v11200
    si = v11201
    di = v11202
    es = v11203
    cs = v11204
    ss = v11205
    ds = v11206
    fs = v11207
    gs = v11208
    cf = v11305 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v11210
    pf = -v11296-0x1 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v11212
    af = v11303 [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v11214
    zf = v11301 [from 0x804852f:add    ebx, 0x0000119a]
    sf = v11299 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v11217
    if = v11218
    df = v11219
    of = v11309 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v11221
    iopl1 = v11222
    nt = v11223
    ?15 = v11224
    memory = {}
    ip = 0x8048535 [from 0x804852f:add    ebx, 0x0000119a]
0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
    ax = v11350 [from 0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v11196
    dx = v11197
    bx = v11311 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v11232 [from 0x804852e:pop    ebx]
    bp = v11200
    si = v11201
    di = v11202
    es = v11203
    cs = v11204
    ss = v11205
    ds = v11206
    fs = v11207
    gs = v11208
    cf = v11305 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v11210
    pf = -v11296-0x1 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v11212
    af = v11303 [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v11214
    zf = v11301 [from 0x804852f:add    ebx, 0x0000119a]
    sf = v11299 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v11217
    if = v11218
    df = v11219
    of = v11309 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v11221
    iopl1 = v11222
    nt = v11223
    ?15 = v11224
    memory = {}
    ip = 0x804853b [from 0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
    ax = v11350 [from 0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v11196
    dx = v11389 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v11311 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v11232 [from 0x804852e:pop    ebx]
    bp = v11200
    si = v11201
    di = v11202
    es = v11203
    cs = v11204
    ss = v11205
    ds = v11206
    fs = v11207
    gs = v11208
    cf = v11305 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v11210
    pf = -v11296-0x1 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v11212
    af = v11303 [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v11214
    zf = v11301 [from 0x804852f:add    ebx, 0x0000119a]
    sf = v11299 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v11217
    if = v11218
    df = v11219
    of = v11309 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v11221
    iopl1 = v11222
    nt = v11223
    ?15 = v11224
    memory = {}
    ip = 0x8048541 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
0x8048541:sub    eax, edx
    ax = v11469 [from 0x8048541:sub    eax, edx]
    cx = v11196
    dx = v11389 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v11311 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v11232 [from 0x804852e:pop    ebx]
    bp = v11200
    si = v11201
    di = v11202
    es = v11203
    cs = v11204
    ss = v11205
    ds = v11206
    fs = v11207
    gs = v11208
    cf = -v11462-0x1 [from 0x8048541:sub    eax, edx]
    ?1 = v11210
    pf = -v11452-0x1 [from 0x8048541:sub    eax, edx]
    ?3 = v11212
    af = -v11459-0x1 [from 0x8048541:sub    eax, edx]
    ?5 = v11214
    zf = v11457 [from 0x8048541:sub    eax, edx]
    sf = v11455 [from 0x8048541:sub    eax, edx]
    tf = v11217
    if = v11218
    df = v11219
    of = v11467 [from 0x8048541:sub    eax, edx]
    iopl0 = v11221
    iopl1 = v11222
    nt = v11223
    ?15 = v11224
    memory = {}
    ip = 0x8048543 [from 0x8048541:sub    eax, edx]
0x8048543:sar    eax, 0x02
    ax = v11561 [from 0x8048543:sar    eax, 0x02]
    cx = v11196
    dx = v11389 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v11311 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v11232 [from 0x804852e:pop    ebx]
    bp = v11200
    si = v11201
    di = v11202
    es = v11203
    cs = v11204
    ss = v11205
    ds = v11206
    fs = v11207
    gs = v11208
    cf = v11516 [from 0x8048543:sar    eax, 0x02]
    ?1 = v11210
    pf = -v11549-0x1 [from 0x8048543:sar    eax, 0x02]
    ?3 = v11212
    af = <top>
    ?5 = v11214
    zf = v11558 [from 0x8048543:sar    eax, 0x02]
    sf = v11554 [from 0x8048543:sar    eax, 0x02]
    tf = v11217
    if = v11218
    df = v11219
    of = v11467 [from 0x8048541:sub    eax, edx]
    iopl0 = v11221
    iopl1 = v11222
    nt = v11223
    ?15 = v11224
    memory = {}
    ip = 0x8048546 [from 0x8048543:sar    eax, 0x02]
0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
    ax = v11561 [from 0x8048543:sar    eax, 0x02]
    cx = v11196
    dx = v11389 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v11311 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v11232 [from 0x804852e:pop    ebx]
    bp = v11200
    si = v11201
    di = v11202
    es = v11203
    cs = v11204
    ss = v11205
    ds = v11206
    fs = v11207
    gs = v11208
    cf = v11516 [from 0x8048543:sar    eax, 0x02]
    ?1 = v11210
    pf = -v11549-0x1 [from 0x8048543:sar    eax, 0x02]
    ?3 = v11212
    af = <top>
    ?5 = v11214
    zf = v11558 [from 0x8048543:sar    eax, 0x02]
    sf = v11554 [from 0x8048543:sar    eax, 0x02]
    tf = v11217
    if = v11218
    df = v11219
    of = v11467 [from 0x8048541:sub    eax, edx]
    iopl0 = v11221
    iopl1 = v11222
    nt = v11223
    ?15 = v11224
    memory = {
        size=4; addr=v11200-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v11561 [from 0x8048543:sar    eax, 0x02]
    }
    ip = 0x8048549 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]
0x8048549:dec    eax
    ax = v11677 [from 0x8048549:dec    eax]
    cx = v11196
    dx = v11389 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v11311 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v11232 [from 0x804852e:pop    ebx]
    bp = v11200
    si = v11201
    di = v11202
    es = v11203
    cs = v11204
    ss = v11205
    ds = v11206
    fs = v11207
    gs = v11208
    cf = v11516 [from 0x8048543:sar    eax, 0x02]
    ?1 = v11210
    pf = -v11663-0x1 [from 0x8048549:dec    eax]
    ?3 = v11212
    af = -v11670-0x1 [from 0x8048549:dec    eax]
    ?5 = v11214
    zf = v11668 [from 0x8048549:dec    eax]
    sf = v11666 [from 0x8048549:dec    eax]
    tf = v11217
    if = v11218
    df = v11219
    of = v11675 [from 0x8048549:dec    eax]
    iopl0 = v11221
    iopl1 = v11222
    nt = v11223
    ?15 = v11224
    memory = {
        size=4; addr=v11200-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v11561 [from 0x8048543:sar    eax, 0x02]
    }
    ip = 0x804854a [from 0x8048549:dec    eax]
0x804854a:cmp    eax, 0xff<-0x01>
    ax = v11677 [from 0x8048549:dec    eax]
    cx = v11196
    dx = v11389 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v11311 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v11232 [from 0x804852e:pop    ebx]
    bp = v11200
    si = v11201
    di = v11202
    es = v11203
    cs = v11204
    ss = v11205
    ds = v11206
    fs = v11207
    gs = v11208
    cf = -v11750-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?1 = v11210
    pf = -v11740-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?3 = v11212
    af = -v11747-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?5 = v11214
    zf = v11745 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    sf = v11743 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    tf = v11217
    if = v11218
    df = v11219
    of = v11755 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    iopl0 = v11221
    iopl1 = v11222
    nt = v11223
    ?15 = v11224
    memory = {
        size=4; addr=v11200-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v11561 [from 0x8048543:sar    eax, 0x02]
    }
    ip = 0x804854d [from 0x804854a:cmp    eax, 0xff<-0x01>]
0x804854d:je     0x0804856b<<Insn>>
    ax = v11677 [from 0x8048549:dec    eax]
    cx = v11196
    dx = v11389 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v11311 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v11232 [from 0x804852e:pop    ebx]
    bp = v11200
    si = v11201
    di = v11202
    es = v11203
    cs = v11204
    ss = v11205
    ds = v11206
    fs = v11207
    gs = v11208
    cf = -v11750-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?1 = v11210
    pf = -v11740-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?3 = v11212
    af = -v11747-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?5 = v11214
    zf = v11745 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    sf = v11743 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    tf = v11217
    if = v11218
    df = v11219
    of = v11755 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    iopl0 = v11221
    iopl1 = v11222
    nt = v11223
    ?15 = v11224
    memory = {
        size=4; addr=v11200-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v11561 [from 0x8048543:sar    eax, 0x02]
    }
    ip = v11795 [from 0x804854d:je     0x0804856b<<Insn>>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804854f:lea    esi, [edx + eax*0x04]
    ax = v11920
    cx = v11921
    dx = v11922
    bx = v11923
    sp = v11924
    bp = v11925
    si = v11960 [from 0x804854f:lea    esi, [edx + eax*0x04]]
    di = v11927
    es = v11928
    cs = v11929
    ss = v11930
    ds = v11931
    fs = v11932
    gs = v11933
    cf = v11934
    ?1 = v11935
    pf = v11936
    ?3 = v11937
    af = v11938
    ?5 = v11939
    zf = v11940
    sf = v11941
    tf = v11942
    if = v11943
    df = v11944
    of = v11945
    iopl0 = v11946
    iopl1 = v11947
    nt = v11948
    ?15 = v11949
    memory = {}
    ip = 0x8048552 [from 0x804854f:lea    esi, [edx + eax*0x04]]
0x8048552:xor    edi, edi
    ax = v11920
    cx = v11921
    dx = v11922
    bx = v11923
    sp = v11924
    bp = v11925
    si = v11960 [from 0x804854f:lea    esi, [edx + eax*0x04]]
    di = 0x0 [from 0x8048552:xor    edi, edi]
    es = v11928
    cs = v11929
    ss = v11930
    ds = v11931
    fs = v11932
    gs = v11933
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = v11935
    pf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    ?3 = v11937
    af = <top>
    ?5 = v11939
    zf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    sf = 0x0 [from 0x8048552:xor    edi, edi]
    tf = v11942
    if = v11943
    df = v11944
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = v11946
    iopl1 = v11947
    nt = v11948
    ?15 = v11949
    memory = {}
    ip = 0x8048554 [from 0x8048552:xor    edi, edi]
0x8048554:lea    esi, [esi + 0x00000000]
    ax = v11920
    cx = v11921
    dx = v11922
    bx = v11923
    sp = v11924
    bp = v11925
    si = v12066 [from 0x8048554:lea    esi, [esi + 0x00000000]]
    di = 0x0 [from 0x8048552:xor    edi, edi]
    es = v11928
    cs = v11929
    ss = v11930
    ds = v11931
    fs = v11932
    gs = v11933
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = v11935
    pf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    ?3 = v11937
    af = <top>
    ?5 = v11939
    zf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    sf = 0x0 [from 0x8048552:xor    edi, edi]
    tf = v11942
    if = v11943
    df = v11944
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = v11946
    iopl1 = v11947
    nt = v11948
    ?15 = v11949
    memory = {}
    ip = 0x804855a [from 0x8048554:lea    esi, [esi + 0x00000000]]
0x804855a:lea    edi, [edi + 0x00000000]
    ax = v11920
    cx = v11921
    dx = v11922
    bx = v11923
    sp = v11924
    bp = v11925
    si = v12066 [from 0x8048554:lea    esi, [esi + 0x00000000]]
    di = 0x0 [from 0x804855a:lea    edi, [edi + 0x00000000]]
    es = v11928
    cs = v11929
    ss = v11930
    ds = v11931
    fs = v11932
    gs = v11933
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = v11935
    pf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    ?3 = v11937
    af = <top>
    ?5 = v11939
    zf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    sf = 0x0 [from 0x8048552:xor    edi, edi]
    tf = v11942
    if = v11943
    df = v11944
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = v11946
    iopl1 = v11947
    nt = v11948
    ?15 = v11949
    memory = {}
    ip = 0x8048560 [from 0x804855a:lea    edi, [edi + 0x00000000]]
0x8048560:call   DWORD PTR ds:[esi]
    ax = v11920
    cx = v11921
    dx = v11922
    bx = v11923
    sp = v12151 [from 0x8048560:call   DWORD PTR ds:[esi]]
    bp = v11925
    si = v12066 [from 0x8048554:lea    esi, [esi + 0x00000000]]
    di = 0x0 [from 0x804855a:lea    edi, [edi + 0x00000000]]
    es = v11928
    cs = v11929
    ss = v11930
    ds = v11931
    fs = v11932
    gs = v11933
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = v11935
    pf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    ?3 = v11937
    af = <top>
    ?5 = v11939
    zf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    sf = 0x0 [from 0x8048552:xor    edi, edi]
    tf = v11942
    if = v11943
    df = v11944
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = v11946
    iopl1 = v11947
    nt = v11948
    ?15 = v11949
    memory = {
        size=4; addr=v11924-0x4 [from 0x8048560:call   DWORD PTR ds:[esi]]; value=0x8048562 [from 0x8048560:call   DWORD PTR ds:[esi]]
    }
    ip = v12149 [from 0x8048560:call   DWORD PTR ds:[esi]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048562:inc    edi
    ax = v12305
    cx = v12306
    dx = v12307
    bx = v12308
    sp = v12309
    bp = v12310
    si = v12311
    di = v12377 [from 0x8048562:inc    edi]
    es = v12313
    cs = v12314
    ss = v12315
    ds = v12316
    fs = v12317
    gs = v12318
    cf = v12319
    ?1 = v12320
    pf = -v12364-0x1 [from 0x8048562:inc    edi]
    ?3 = v12322
    af = v12371 [from 0x8048562:inc    edi]
    ?5 = v12324
    zf = v12369 [from 0x8048562:inc    edi]
    sf = v12367 [from 0x8048562:inc    edi]
    tf = v12327
    if = v12328
    df = v12329
    of = v12375 [from 0x8048562:inc    edi]
    iopl0 = v12331
    iopl1 = v12332
    nt = v12333
    ?15 = v12334
    memory = {}
    ip = 0x8048563 [from 0x8048562:inc    edi]
0x8048563:sub    esi, 0x04
    ax = v12305
    cx = v12306
    dx = v12307
    bx = v12308
    sp = v12309
    bp = v12310
    si = v12457 [from 0x8048563:sub    esi, 0x04]
    di = v12377 [from 0x8048562:inc    edi]
    es = v12313
    cs = v12314
    ss = v12315
    ds = v12316
    fs = v12317
    gs = v12318
    cf = -v12450-0x1 [from 0x8048563:sub    esi, 0x04]
    ?1 = v12320
    pf = -v12440-0x1 [from 0x8048563:sub    esi, 0x04]
    ?3 = v12322
    af = -v12447-0x1 [from 0x8048563:sub    esi, 0x04]
    ?5 = v12324
    zf = v12445 [from 0x8048563:sub    esi, 0x04]
    sf = v12443 [from 0x8048563:sub    esi, 0x04]
    tf = v12327
    if = v12328
    df = v12329
    of = v12455 [from 0x8048563:sub    esi, 0x04]
    iopl0 = v12331
    iopl1 = v12332
    nt = v12333
    ?15 = v12334
    memory = {}
    ip = 0x8048566 [from 0x8048563:sub    esi, 0x04]
0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi
    ax = v12305
    cx = v12306
    dx = v12307
    bx = v12308
    sp = v12309
    bp = v12310
    si = v12457 [from 0x8048563:sub    esi, 0x04]
    di = v12377 [from 0x8048562:inc    edi]
    es = v12313
    cs = v12314
    ss = v12315
    ds = v12316
    fs = v12317
    gs = v12318
    cf = -v12534-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?1 = v12320
    pf = -v12524-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?3 = v12322
    af = -v12531-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?5 = v12324
    zf = v12529 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    sf = v12527 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    tf = v12327
    if = v12328
    df = v12329
    of = v12539 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    iopl0 = v12331
    iopl1 = v12332
    nt = v12333
    ?15 = v12334
    memory = {}
    ip = 0x8048569 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
0x8048569:jne    0x08048560<<Insn>>
    ax = v12305
    cx = v12306
    dx = v12307
    bx = v12308
    sp = v12309
    bp = v12310
    si = v12457 [from 0x8048563:sub    esi, 0x04]
    di = v12377 [from 0x8048562:inc    edi]
    es = v12313
    cs = v12314
    ss = v12315
    ds = v12316
    fs = v12317
    gs = v12318
    cf = -v12534-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?1 = v12320
    pf = -v12524-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?3 = v12322
    af = -v12531-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?5 = v12324
    zf = v12529 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    sf = v12527 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    tf = v12327
    if = v12328
    df = v12329
    of = v12539 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    iopl0 = v12331
    iopl1 = v12332
    nt = v12333
    ?15 = v12334
    memory = {}
    ip = v12580 [from 0x8048569:jne    0x08048560<<Insn>>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804856b:call   0x080485b0<_fini>
    ax = v12705
    cx = v12706
    dx = v12707
    bx = v12708
    sp = v12747 [from 0x804856b:call   0x080485b0<_fini>]
    bp = v12710
    si = v12711
    di = v12712
    es = v12713
    cs = v12714
    ss = v12715
    ds = v12716
    fs = v12717
    gs = v12718
    cf = v12719
    ?1 = v12720
    pf = v12721
    ?3 = v12722
    af = v12723
    ?5 = v12724
    zf = v12725
    sf = v12726
    tf = v12727
    if = v12728
    df = v12729
    of = v12730
    iopl0 = v12731
    iopl1 = v12732
    nt = v12733
    ?15 = v12734
    memory = {
        size=4; addr=v12709-0x4 [from 0x804856b:call   0x080485b0<_fini>]; value=0x8048570 [from 0x804856b:call   0x080485b0<_fini>]
    }
    ip = 0x80485b0 [from 0x804856b:call   0x080485b0<_fini>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048570:add    esp, 0x0c
    ax = v12931
    cx = v12932
    dx = v12933
    bx = v12934
    sp = v13005 [from 0x8048570:add    esp, 0x0c]
    bp = v12936
    si = v12937
    di = v12938
    es = v12939
    cs = v12940
    ss = v12941
    ds = v12942
    fs = v12943
    gs = v12944
    cf = v12999 [from 0x8048570:add    esp, 0x0c]
    ?1 = v12946
    pf = -v12990-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v12948
    af = v12997 [from 0x8048570:add    esp, 0x0c]
    ?5 = v12950
    zf = v12995 [from 0x8048570:add    esp, 0x0c]
    sf = v12993 [from 0x8048570:add    esp, 0x0c]
    tf = v12953
    if = v12954
    df = v12955
    of = v13003 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v12957
    iopl1 = v12958
    nt = v12959
    ?15 = v12960
    memory = {}
    ip = 0x8048573 [from 0x8048570:add    esp, 0x0c]
0x8048573:pop    ebx
    ax = v12931
    cx = v12932
    dx = v12933
    bx = v13047 [from 0x8048573:pop    ebx]
    sp = v13044 [from 0x8048573:pop    ebx]
    bp = v12936
    si = v12937
    di = v12938
    es = v12939
    cs = v12940
    ss = v12941
    ds = v12942
    fs = v12943
    gs = v12944
    cf = v12999 [from 0x8048570:add    esp, 0x0c]
    ?1 = v12946
    pf = -v12990-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v12948
    af = v12997 [from 0x8048570:add    esp, 0x0c]
    ?5 = v12950
    zf = v12995 [from 0x8048570:add    esp, 0x0c]
    sf = v12993 [from 0x8048570:add    esp, 0x0c]
    tf = v12953
    if = v12954
    df = v12955
    of = v13003 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v12957
    iopl1 = v12958
    nt = v12959
    ?15 = v12960
    memory = {}
    ip = 0x8048574 [from 0x8048573:pop    ebx]
0x8048574:pop    esi
    ax = v12931
    cx = v12932
    dx = v12933
    bx = v13047 [from 0x8048573:pop    ebx]
    sp = v13086 [from 0x8048574:pop    esi]
    bp = v12936
    si = v13089 [from 0x8048574:pop    esi]
    di = v12938
    es = v12939
    cs = v12940
    ss = v12941
    ds = v12942
    fs = v12943
    gs = v12944
    cf = v12999 [from 0x8048570:add    esp, 0x0c]
    ?1 = v12946
    pf = -v12990-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v12948
    af = v12997 [from 0x8048570:add    esp, 0x0c]
    ?5 = v12950
    zf = v12995 [from 0x8048570:add    esp, 0x0c]
    sf = v12993 [from 0x8048570:add    esp, 0x0c]
    tf = v12953
    if = v12954
    df = v12955
    of = v13003 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v12957
    iopl1 = v12958
    nt = v12959
    ?15 = v12960
    memory = {}
    ip = 0x8048575 [from 0x8048574:pop    esi]
0x8048575:pop    edi
    ax = v12931
    cx = v12932
    dx = v12933
    bx = v13047 [from 0x8048573:pop    ebx]
    sp = v13128 [from 0x8048575:pop    edi]
    bp = v12936
    si = v13089 [from 0x8048574:pop    esi]
    di = v13131 [from 0x8048575:pop    edi]
    es = v12939
    cs = v12940
    ss = v12941
    ds = v12942
    fs = v12943
    gs = v12944
    cf = v12999 [from 0x8048570:add    esp, 0x0c]
    ?1 = v12946
    pf = -v12990-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v12948
    af = v12997 [from 0x8048570:add    esp, 0x0c]
    ?5 = v12950
    zf = v12995 [from 0x8048570:add    esp, 0x0c]
    sf = v12993 [from 0x8048570:add    esp, 0x0c]
    tf = v12953
    if = v12954
    df = v12955
    of = v13003 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v12957
    iopl1 = v12958
    nt = v12959
    ?15 = v12960
    memory = {}
    ip = 0x8048576 [from 0x8048575:pop    edi]
0x8048576:pop    ebp
    ax = v12931
    cx = v12932
    dx = v12933
    bx = v13047 [from 0x8048573:pop    ebx]
    sp = v13170 [from 0x8048576:pop    ebp]
    bp = v13173 [from 0x8048576:pop    ebp]
    si = v13089 [from 0x8048574:pop    esi]
    di = v13131 [from 0x8048575:pop    edi]
    es = v12939
    cs = v12940
    ss = v12941
    ds = v12942
    fs = v12943
    gs = v12944
    cf = v12999 [from 0x8048570:add    esp, 0x0c]
    ?1 = v12946
    pf = -v12990-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v12948
    af = v12997 [from 0x8048570:add    esp, 0x0c]
    ?5 = v12950
    zf = v12995 [from 0x8048570:add    esp, 0x0c]
    sf = v12993 [from 0x8048570:add    esp, 0x0c]
    tf = v12953
    if = v12954
    df = v12955
    of = v13003 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v12957
    iopl1 = v12958
    nt = v12959
    ?15 = v12960
    memory = {}
    ip = 0x8048577 [from 0x8048576:pop    ebp]
0x8048577:ret    
    ax = v12931
    cx = v12932
    dx = v12933
    bx = v13047 [from 0x8048573:pop    ebx]
    sp = v13217 [from 0x8048577:ret    ]
    bp = v13173 [from 0x8048576:pop    ebp]
    si = v13089 [from 0x8048574:pop    esi]
    di = v13131 [from 0x8048575:pop    edi]
    es = v12939
    cs = v12940
    ss = v12941
    ds = v12942
    fs = v12943
    gs = v12944
    cf = v12999 [from 0x8048570:add    esp, 0x0c]
    ?1 = v12946
    pf = -v12990-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v12948
    af = v12997 [from 0x8048570:add    esp, 0x0c]
    ?5 = v12950
    zf = v12995 [from 0x8048570:add    esp, 0x0c]
    sf = v12993 [from 0x8048570:add    esp, 0x0c]
    tf = v12953
    if = v12954
    df = v12955
    of = v13003 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v12957
    iopl1 = v12958
    nt = v12959
    ?15 = v12960
    memory = {}
    ip = v13215 [from 0x8048577:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048580:push   ebp
    ax = v13281
    cx = v13282
    dx = v13283
    bx = v13284
    sp = v13321 [from 0x8048580:push   ebp]
    bp = v13286
    si = v13287
    di = v13288
    es = v13289
    cs = v13290
    ss = v13291
    ds = v13292
    fs = v13293
    gs = v13294
    cf = v13295
    ?1 = v13296
    pf = v13297
    ?3 = v13298
    af = v13299
    ?5 = v13300
    zf = v13301
    sf = v13302
    tf = v13303
    if = v13304
    df = v13305
    of = v13306
    iopl0 = v13307
    iopl1 = v13308
    nt = v13309
    ?15 = v13310
    memory = {
        size=4; addr=v13285-0x4 [from 0x8048580:push   ebp]; value=v13286
    }
    ip = 0x8048581 [from 0x8048580:push   ebp]
0x8048581:mov    ebp, esp
    ax = v13281
    cx = v13282
    dx = v13283
    bx = v13284
    sp = v13321 [from 0x8048580:push   ebp]
    bp = v13358 [from 0x8048581:mov    ebp, esp]
    si = v13287
    di = v13288
    es = v13289
    cs = v13290
    ss = v13291
    ds = v13292
    fs = v13293
    gs = v13294
    cf = v13295
    ?1 = v13296
    pf = v13297
    ?3 = v13298
    af = v13299
    ?5 = v13300
    zf = v13301
    sf = v13302
    tf = v13303
    if = v13304
    df = v13305
    of = v13306
    iopl0 = v13307
    iopl1 = v13308
    nt = v13309
    ?15 = v13310
    memory = {
        size=4; addr=v13285-0x4 [from 0x8048580:push   ebp]; value=v13286
    }
    ip = 0x8048583 [from 0x8048581:mov    ebp, esp]
0x8048583:push   ebx
    ax = v13281
    cx = v13282
    dx = v13283
    bx = v13284
    sp = v13400 [from 0x8048583:push   ebx]
    bp = v13358 [from 0x8048581:mov    ebp, esp]
    si = v13287
    di = v13288
    es = v13289
    cs = v13290
    ss = v13291
    ds = v13292
    fs = v13293
    gs = v13294
    cf = v13295
    ?1 = v13296
    pf = v13297
    ?3 = v13298
    af = v13299
    ?5 = v13300
    zf = v13301
    sf = v13302
    tf = v13303
    if = v13304
    df = v13305
    of = v13306
    iopl0 = v13307
    iopl1 = v13308
    nt = v13309
    ?15 = v13310
    memory = {
        size=4; addr=v13321-0x4 [from 0x8048583:push   ebx]; value=v13284
    }
    ip = 0x8048584 [from 0x8048583:push   ebx]
0x8048584:sub    esp, 0x04
    ax = v13281
    cx = v13282
    dx = v13283
    bx = v13284
    sp = v13480 [from 0x8048584:sub    esp, 0x04]
    bp = v13358 [from 0x8048581:mov    ebp, esp]
    si = v13287
    di = v13288
    es = v13289
    cs = v13290
    ss = v13291
    ds = v13292
    fs = v13293
    gs = v13294
    cf = -v13473-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v13296
    pf = -v13463-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v13298
    af = -v13470-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v13300
    zf = v13468 [from 0x8048584:sub    esp, 0x04]
    sf = v13466 [from 0x8048584:sub    esp, 0x04]
    tf = v13303
    if = v13304
    df = v13305
    of = v13478 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v13307
    iopl1 = v13308
    nt = v13309
    ?15 = v13310
    memory = {
        size=4; addr=v13321-0x4 [from 0x8048583:push   ebx]; value=v13284
    }
    ip = 0x8048587 [from 0x8048584:sub    esp, 0x04]
0x8048587:mov    ebx, 0x080495e8<.ctors>
    ax = v13281
    cx = v13282
    dx = v13283
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8<.ctors>]
    sp = v13480 [from 0x8048584:sub    esp, 0x04]
    bp = v13358 [from 0x8048581:mov    ebp, esp]
    si = v13287
    di = v13288
    es = v13289
    cs = v13290
    ss = v13291
    ds = v13292
    fs = v13293
    gs = v13294
    cf = -v13473-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v13296
    pf = -v13463-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v13298
    af = -v13470-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v13300
    zf = v13468 [from 0x8048584:sub    esp, 0x04]
    sf = v13466 [from 0x8048584:sub    esp, 0x04]
    tf = v13303
    if = v13304
    df = v13305
    of = v13478 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v13307
    iopl1 = v13308
    nt = v13309
    ?15 = v13310
    memory = {
        size=4; addr=v13321-0x4 [from 0x8048583:push   ebx]; value=v13284
    }
    ip = 0x804858c [from 0x8048587:mov    ebx, 0x080495e8<.ctors>]
0x804858c:mov    eax, DWORD PTR ds:[0x080495e8<.ctors>]
    ax = v13556 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8<.ctors>]]
    cx = v13282
    dx = v13283
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8<.ctors>]
    sp = v13480 [from 0x8048584:sub    esp, 0x04]
    bp = v13358 [from 0x8048581:mov    ebp, esp]
    si = v13287
    di = v13288
    es = v13289
    cs = v13290
    ss = v13291
    ds = v13292
    fs = v13293
    gs = v13294
    cf = -v13473-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v13296
    pf = -v13463-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v13298
    af = -v13470-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v13300
    zf = v13468 [from 0x8048584:sub    esp, 0x04]
    sf = v13466 [from 0x8048584:sub    esp, 0x04]
    tf = v13303
    if = v13304
    df = v13305
    of = v13478 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v13307
    iopl1 = v13308
    nt = v13309
    ?15 = v13310
    memory = {
        size=4; addr=v13321-0x4 [from 0x8048583:push   ebx]; value=v13284
    }
    ip = 0x8048591 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8<.ctors>]]
0x8048591:cmp    eax, 0xff<-0x01>
    ax = v13556 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8<.ctors>]]
    cx = v13282
    dx = v13283
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8<.ctors>]
    sp = v13480 [from 0x8048584:sub    esp, 0x04]
    bp = v13358 [from 0x8048581:mov    ebp, esp]
    si = v13287
    di = v13288
    es = v13289
    cs = v13290
    ss = v13291
    ds = v13292
    fs = v13293
    gs = v13294
    cf = -v13629-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?1 = v13296
    pf = -v13619-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?3 = v13298
    af = -v13626-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?5 = v13300
    zf = v13624 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    sf = v13622 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    tf = v13303
    if = v13304
    df = v13305
    of = v13634 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    iopl0 = v13307
    iopl1 = v13308
    nt = v13309
    ?15 = v13310
    memory = {
        size=4; addr=v13321-0x4 [from 0x8048583:push   ebx]; value=v13284
    }
    ip = 0x8048594 [from 0x8048591:cmp    eax, 0xff<-0x01>]
0x8048594:je     0x080485ac<<Insn>>
    ax = v13556 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8<.ctors>]]
    cx = v13282
    dx = v13283
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8<.ctors>]
    sp = v13480 [from 0x8048584:sub    esp, 0x04]
    bp = v13358 [from 0x8048581:mov    ebp, esp]
    si = v13287
    di = v13288
    es = v13289
    cs = v13290
    ss = v13291
    ds = v13292
    fs = v13293
    gs = v13294
    cf = -v13629-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?1 = v13296
    pf = -v13619-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?3 = v13298
    af = -v13626-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?5 = v13300
    zf = v13624 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    sf = v13622 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    tf = v13303
    if = v13304
    df = v13305
    of = v13634 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    iopl0 = v13307
    iopl1 = v13308
    nt = v13309
    ?15 = v13310
    memory = {
        size=4; addr=v13321-0x4 [from 0x8048583:push   ebx]; value=v13284
    }
    ip = v13674 [from 0x8048594:je     0x080485ac<<Insn>>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048596:lea    esi, [esi + 0x00]
    ax = v13799
    cx = v13800
    dx = v13801
    bx = v13802
    sp = v13803
    bp = v13804
    si = v13836 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v13806
    es = v13807
    cs = v13808
    ss = v13809
    ds = v13810
    fs = v13811
    gs = v13812
    cf = v13813
    ?1 = v13814
    pf = v13815
    ?3 = v13816
    af = v13817
    ?5 = v13818
    zf = v13819
    sf = v13820
    tf = v13821
    if = v13822
    df = v13823
    of = v13824
    iopl0 = v13825
    iopl1 = v13826
    nt = v13827
    ?15 = v13828
    memory = {}
    ip = 0x8048599 [from 0x8048596:lea    esi, [esi + 0x00]]
0x8048599:lea    edi, [edi + 0x00000000]
    ax = v13799
    cx = v13800
    dx = v13801
    bx = v13802
    sp = v13803
    bp = v13804
    si = v13836 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v13875 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v13807
    cs = v13808
    ss = v13809
    ds = v13810
    fs = v13811
    gs = v13812
    cf = v13813
    ?1 = v13814
    pf = v13815
    ?3 = v13816
    af = v13817
    ?5 = v13818
    zf = v13819
    sf = v13820
    tf = v13821
    if = v13822
    df = v13823
    of = v13824
    iopl0 = v13825
    iopl1 = v13826
    nt = v13827
    ?15 = v13828
    memory = {}
    ip = 0x80485a0 [from 0x8048599:lea    edi, [edi + 0x00000000]]
0x80485a0:sub    ebx, 0x04
    ax = v13799
    cx = v13800
    dx = v13801
    bx = v13955 [from 0x80485a0:sub    ebx, 0x04]
    sp = v13803
    bp = v13804
    si = v13836 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v13875 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v13807
    cs = v13808
    ss = v13809
    ds = v13810
    fs = v13811
    gs = v13812
    cf = -v13948-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?1 = v13814
    pf = -v13938-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?3 = v13816
    af = -v13945-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?5 = v13818
    zf = v13943 [from 0x80485a0:sub    ebx, 0x04]
    sf = v13941 [from 0x80485a0:sub    ebx, 0x04]
    tf = v13821
    if = v13822
    df = v13823
    of = v13953 [from 0x80485a0:sub    ebx, 0x04]
    iopl0 = v13825
    iopl1 = v13826
    nt = v13827
    ?15 = v13828
    memory = {}
    ip = 0x80485a3 [from 0x80485a0:sub    ebx, 0x04]
0x80485a3:call   eax
    ax = v13799
    cx = v13800
    dx = v13801
    bx = v13955 [from 0x80485a0:sub    ebx, 0x04]
    sp = v13999 [from 0x80485a3:call   eax]
    bp = v13804
    si = v13836 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v13875 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v13807
    cs = v13808
    ss = v13809
    ds = v13810
    fs = v13811
    gs = v13812
    cf = -v13948-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?1 = v13814
    pf = -v13938-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?3 = v13816
    af = -v13945-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?5 = v13818
    zf = v13943 [from 0x80485a0:sub    ebx, 0x04]
    sf = v13941 [from 0x80485a0:sub    ebx, 0x04]
    tf = v13821
    if = v13822
    df = v13823
    of = v13953 [from 0x80485a0:sub    ebx, 0x04]
    iopl0 = v13825
    iopl1 = v13826
    nt = v13827
    ?15 = v13828
    memory = {
        size=4; addr=v13803-0x4 [from 0x80485a3:call   eax]; value=0x80485a5 [from 0x80485a3:call   eax]
    }
    ip = v13799
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485a5:mov    eax, DWORD PTR ds:[ebx]
    ax = v14190 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = v14154
    dx = v14155
    bx = v14156
    sp = v14157
    bp = v14158
    si = v14159
    di = v14160
    es = v14161
    cs = v14162
    ss = v14163
    ds = v14164
    fs = v14165
    gs = v14166
    cf = v14167
    ?1 = v14168
    pf = v14169
    ?3 = v14170
    af = v14171
    ?5 = v14172
    zf = v14173
    sf = v14174
    tf = v14175
    if = v14176
    df = v14177
    of = v14178
    iopl0 = v14179
    iopl1 = v14180
    nt = v14181
    ?15 = v14182
    memory = {}
    ip = 0x80485a7 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
0x80485a7:cmp    eax, 0xff<-0x01>
    ax = v14190 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = v14154
    dx = v14155
    bx = v14156
    sp = v14157
    bp = v14158
    si = v14159
    di = v14160
    es = v14161
    cs = v14162
    ss = v14163
    ds = v14164
    fs = v14165
    gs = v14166
    cf = -v14263-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?1 = v14168
    pf = -v14253-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?3 = v14170
    af = -v14260-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?5 = v14172
    zf = v14258 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    sf = v14256 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    tf = v14175
    if = v14176
    df = v14177
    of = v14268 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    iopl0 = v14179
    iopl1 = v14180
    nt = v14181
    ?15 = v14182
    memory = {}
    ip = 0x80485aa [from 0x80485a7:cmp    eax, 0xff<-0x01>]
0x80485aa:jne    0x080485a0<<Insn>>
    ax = v14190 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = v14154
    dx = v14155
    bx = v14156
    sp = v14157
    bp = v14158
    si = v14159
    di = v14160
    es = v14161
    cs = v14162
    ss = v14163
    ds = v14164
    fs = v14165
    gs = v14166
    cf = -v14263-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?1 = v14168
    pf = -v14253-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?3 = v14170
    af = -v14260-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?5 = v14172
    zf = v14258 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    sf = v14256 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    tf = v14175
    if = v14176
    df = v14177
    of = v14268 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    iopl0 = v14179
    iopl1 = v14180
    nt = v14181
    ?15 = v14182
    memory = {}
    ip = v14309 [from 0x80485aa:jne    0x080485a0<<Insn>>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485ac:pop    eax
    ax = v14474 [from 0x80485ac:pop    eax]
    cx = v14435
    dx = v14436
    bx = v14437
    sp = v14471 [from 0x80485ac:pop    eax]
    bp = v14439
    si = v14440
    di = v14441
    es = v14442
    cs = v14443
    ss = v14444
    ds = v14445
    fs = v14446
    gs = v14447
    cf = v14448
    ?1 = v14449
    pf = v14450
    ?3 = v14451
    af = v14452
    ?5 = v14453
    zf = v14454
    sf = v14455
    tf = v14456
    if = v14457
    df = v14458
    of = v14459
    iopl0 = v14460
    iopl1 = v14461
    nt = v14462
    ?15 = v14463
    memory = {}
    ip = 0x80485ad [from 0x80485ac:pop    eax]
0x80485ad:pop    ebx
    ax = v14474 [from 0x80485ac:pop    eax]
    cx = v14435
    dx = v14436
    bx = v14516 [from 0x80485ad:pop    ebx]
    sp = v14513 [from 0x80485ad:pop    ebx]
    bp = v14439
    si = v14440
    di = v14441
    es = v14442
    cs = v14443
    ss = v14444
    ds = v14445
    fs = v14446
    gs = v14447
    cf = v14448
    ?1 = v14449
    pf = v14450
    ?3 = v14451
    af = v14452
    ?5 = v14453
    zf = v14454
    sf = v14455
    tf = v14456
    if = v14457
    df = v14458
    of = v14459
    iopl0 = v14460
    iopl1 = v14461
    nt = v14462
    ?15 = v14463
    memory = {}
    ip = 0x80485ae [from 0x80485ad:pop    ebx]
0x80485ae:pop    ebp
    ax = v14474 [from 0x80485ac:pop    eax]
    cx = v14435
    dx = v14436
    bx = v14516 [from 0x80485ad:pop    ebx]
    sp = v14555 [from 0x80485ae:pop    ebp]
    bp = v14558 [from 0x80485ae:pop    ebp]
    si = v14440
    di = v14441
    es = v14442
    cs = v14443
    ss = v14444
    ds = v14445
    fs = v14446
    gs = v14447
    cf = v14448
    ?1 = v14449
    pf = v14450
    ?3 = v14451
    af = v14452
    ?5 = v14453
    zf = v14454
    sf = v14455
    tf = v14456
    if = v14457
    df = v14458
    of = v14459
    iopl0 = v14460
    iopl1 = v14461
    nt = v14462
    ?15 = v14463
    memory = {}
    ip = 0x80485af [from 0x80485ae:pop    ebp]
0x80485af:ret    
    ax = v14474 [from 0x80485ac:pop    eax]
    cx = v14435
    dx = v14436
    bx = v14516 [from 0x80485ad:pop    ebx]
    sp = v14602 [from 0x80485af:ret    ]
    bp = v14558 [from 0x80485ae:pop    ebp]
    si = v14440
    di = v14441
    es = v14442
    cs = v14443
    ss = v14444
    ds = v14445
    fs = v14446
    gs = v14447
    cf = v14448
    ?1 = v14449
    pf = v14450
    ?3 = v14451
    af = v14452
    ?5 = v14453
    zf = v14454
    sf = v14455
    tf = v14456
    if = v14457
    df = v14458
    of = v14459
    iopl0 = v14460
    iopl1 = v14461
    nt = v14462
    ?15 = v14463
    memory = {}
    ip = v14600 [from 0x80485af:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485b0:push   ebp
    ax = v14666
    cx = v14667
    dx = v14668
    bx = v14669
    sp = v14706 [from 0x80485b0:push   ebp]
    bp = v14671
    si = v14672
    di = v14673
    es = v14674
    cs = v14675
    ss = v14676
    ds = v14677
    fs = v14678
    gs = v14679
    cf = v14680
    ?1 = v14681
    pf = v14682
    ?3 = v14683
    af = v14684
    ?5 = v14685
    zf = v14686
    sf = v14687
    tf = v14688
    if = v14689
    df = v14690
    of = v14691
    iopl0 = v14692
    iopl1 = v14693
    nt = v14694
    ?15 = v14695
    memory = {
        size=4; addr=v14670-0x4 [from 0x80485b0:push   ebp]; value=v14671
    }
    ip = 0x80485b1 [from 0x80485b0:push   ebp]
0x80485b1:mov    ebp, esp
    ax = v14666
    cx = v14667
    dx = v14668
    bx = v14669
    sp = v14706 [from 0x80485b0:push   ebp]
    bp = v14743 [from 0x80485b1:mov    ebp, esp]
    si = v14672
    di = v14673
    es = v14674
    cs = v14675
    ss = v14676
    ds = v14677
    fs = v14678
    gs = v14679
    cf = v14680
    ?1 = v14681
    pf = v14682
    ?3 = v14683
    af = v14684
    ?5 = v14685
    zf = v14686
    sf = v14687
    tf = v14688
    if = v14689
    df = v14690
    of = v14691
    iopl0 = v14692
    iopl1 = v14693
    nt = v14694
    ?15 = v14695
    memory = {
        size=4; addr=v14670-0x4 [from 0x80485b0:push   ebp]; value=v14671
    }
    ip = 0x80485b3 [from 0x80485b1:mov    ebp, esp]
0x80485b3:push   ebx
    ax = v14666
    cx = v14667
    dx = v14668
    bx = v14669
    sp = v14785 [from 0x80485b3:push   ebx]
    bp = v14743 [from 0x80485b1:mov    ebp, esp]
    si = v14672
    di = v14673
    es = v14674
    cs = v14675
    ss = v14676
    ds = v14677
    fs = v14678
    gs = v14679
    cf = v14680
    ?1 = v14681
    pf = v14682
    ?3 = v14683
    af = v14684
    ?5 = v14685
    zf = v14686
    sf = v14687
    tf = v14688
    if = v14689
    df = v14690
    of = v14691
    iopl0 = v14692
    iopl1 = v14693
    nt = v14694
    ?15 = v14695
    memory = {
        size=4; addr=v14706-0x4 [from 0x80485b3:push   ebx]; value=v14669
    }
    ip = 0x80485b4 [from 0x80485b3:push   ebx]
0x80485b4:push   eax
    ax = v14666
    cx = v14667
    dx = v14668
    bx = v14669
    sp = v14827 [from 0x80485b4:push   eax]
    bp = v14743 [from 0x80485b1:mov    ebp, esp]
    si = v14672
    di = v14673
    es = v14674
    cs = v14675
    ss = v14676
    ds = v14677
    fs = v14678
    gs = v14679
    cf = v14680
    ?1 = v14681
    pf = v14682
    ?3 = v14683
    af = v14684
    ?5 = v14685
    zf = v14686
    sf = v14687
    tf = v14688
    if = v14689
    df = v14690
    of = v14691
    iopl0 = v14692
    iopl1 = v14693
    nt = v14694
    ?15 = v14695
    memory = {
        size=4; addr=v14785-0x4 [from 0x80485b4:push   eax]; value=v14666
    }
    ip = 0x80485b5 [from 0x80485b4:push   eax]
0x80485b5:call   0x080485ba<<Insn>>
    ax = v14666
    cx = v14667
    dx = v14668
    bx = v14669
    sp = v14871 [from 0x80485b5:call   0x080485ba<<Insn>>]
    bp = v14743 [from 0x80485b1:mov    ebp, esp]
    si = v14672
    di = v14673
    es = v14674
    cs = v14675
    ss = v14676
    ds = v14677
    fs = v14678
    gs = v14679
    cf = v14680
    ?1 = v14681
    pf = v14682
    ?3 = v14683
    af = v14684
    ?5 = v14685
    zf = v14686
    sf = v14687
    tf = v14688
    if = v14689
    df = v14690
    of = v14691
    iopl0 = v14692
    iopl1 = v14693
    nt = v14694
    ?15 = v14695
    memory = {
        size=4; addr=v14827-0x4 [from 0x80485b5:call   0x080485ba<<Insn>>]; value=0x80485ba [from 0x80485b5:call   0x080485ba<<Insn>>]
    }
    ip = 0x80485ba [from 0x80485b5:call   0x080485ba<<Insn>>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485ba:pop    ebx
    ax = v14965
    cx = v14966
    dx = v14967
    bx = v15005 [from 0x80485ba:pop    ebx]
    sp = v15002 [from 0x80485ba:pop    ebx]
    bp = v14970
    si = v14971
    di = v14972
    es = v14973
    cs = v14974
    ss = v14975
    ds = v14976
    fs = v14977
    gs = v14978
    cf = v14979
    ?1 = v14980
    pf = v14981
    ?3 = v14982
    af = v14983
    ?5 = v14984
    zf = v14985
    sf = v14986
    tf = v14987
    if = v14988
    df = v14989
    of = v14990
    iopl0 = v14991
    iopl1 = v14992
    nt = v14993
    ?15 = v14994
    memory = {}
    ip = 0x80485bb [from 0x80485ba:pop    ebx]
0x80485bb:add    ebx, 0x0000110e
    ax = v14965
    cx = v14966
    dx = v14967
    bx = v15081 [from 0x80485bb:add    ebx, 0x0000110e]
    sp = v15002 [from 0x80485ba:pop    ebx]
    bp = v14970
    si = v14971
    di = v14972
    es = v14973
    cs = v14974
    ss = v14975
    ds = v14976
    fs = v14977
    gs = v14978
    cf = v15075 [from 0x80485bb:add    ebx, 0x0000110e]
    ?1 = v14980
    pf = -v15066-0x1 [from 0x80485bb:add    ebx, 0x0000110e]
    ?3 = v14982
    af = v15073 [from 0x80485bb:add    ebx, 0x0000110e]
    ?5 = v14984
    zf = v15071 [from 0x80485bb:add    ebx, 0x0000110e]
    sf = v15069 [from 0x80485bb:add    ebx, 0x0000110e]
    tf = v14987
    if = v14988
    df = v14989
    of = v15079 [from 0x80485bb:add    ebx, 0x0000110e]
    iopl0 = v14991
    iopl1 = v14992
    nt = v14993
    ?15 = v14994
    memory = {}
    ip = 0x80485c1 [from 0x80485bb:add    ebx, 0x0000110e]
0x80485c1:call   0x08048390<__do_global_dtors_aux>
    ax = v14965
    cx = v14966
    dx = v14967
    bx = v15081 [from 0x80485bb:add    ebx, 0x0000110e]
    sp = v15125 [from 0x80485c1:call   0x08048390<__do_global_dtors_aux>]
    bp = v14970
    si = v14971
    di = v14972
    es = v14973
    cs = v14974
    ss = v14975
    ds = v14976
    fs = v14977
    gs = v14978
    cf = v15075 [from 0x80485bb:add    ebx, 0x0000110e]
    ?1 = v14980
    pf = -v15066-0x1 [from 0x80485bb:add    ebx, 0x0000110e]
    ?3 = v14982
    af = v15073 [from 0x80485bb:add    ebx, 0x0000110e]
    ?5 = v14984
    zf = v15071 [from 0x80485bb:add    ebx, 0x0000110e]
    sf = v15069 [from 0x80485bb:add    ebx, 0x0000110e]
    tf = v14987
    if = v14988
    df = v14989
    of = v15079 [from 0x80485bb:add    ebx, 0x0000110e]
    iopl0 = v14991
    iopl1 = v14992
    nt = v14993
    ?15 = v14994
    memory = {
        size=4; addr=v15002-0x4 [from 0x80485c1:call   0x08048390<__do_global_dtors_aux>]; value=0x80485c6 [from 0x80485c1:call   0x08048390<__do_global_dtors_aux>]
    }
    ip = 0x8048390 [from 0x80485c1:call   0x08048390<__do_global_dtors_aux>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485c6:pop    eax
    ax = v15349 [from 0x80485c6:pop    eax]
    cx = v15310
    dx = v15311
    bx = v15312
    sp = v15346 [from 0x80485c6:pop    eax]
    bp = v15314
    si = v15315
    di = v15316
    es = v15317
    cs = v15318
    ss = v15319
    ds = v15320
    fs = v15321
    gs = v15322
    cf = v15323
    ?1 = v15324
    pf = v15325
    ?3 = v15326
    af = v15327
    ?5 = v15328
    zf = v15329
    sf = v15330
    tf = v15331
    if = v15332
    df = v15333
    of = v15334
    iopl0 = v15335
    iopl1 = v15336
    nt = v15337
    ?15 = v15338
    memory = {}
    ip = 0x80485c7 [from 0x80485c6:pop    eax]
0x80485c7:pop    ebx
    ax = v15349 [from 0x80485c6:pop    eax]
    cx = v15310
    dx = v15311
    bx = v15391 [from 0x80485c7:pop    ebx]
    sp = v15388 [from 0x80485c7:pop    ebx]
    bp = v15314
    si = v15315
    di = v15316
    es = v15317
    cs = v15318
    ss = v15319
    ds = v15320
    fs = v15321
    gs = v15322
    cf = v15323
    ?1 = v15324
    pf = v15325
    ?3 = v15326
    af = v15327
    ?5 = v15328
    zf = v15329
    sf = v15330
    tf = v15331
    if = v15332
    df = v15333
    of = v15334
    iopl0 = v15335
    iopl1 = v15336
    nt = v15337
    ?15 = v15338
    memory = {}
    ip = 0x80485c8 [from 0x80485c7:pop    ebx]
0x80485c8:leave  
    ax = v15349 [from 0x80485c6:pop    eax]
    cx = v15310
    dx = v15311
    bx = v15391 [from 0x80485c7:pop    ebx]
    sp = v15435 [from 0x80485c8:leave  ]
    bp = v15434 [from 0x80485c8:leave  ]
    si = v15315
    di = v15316
    es = v15317
    cs = v15318
    ss = v15319
    ds = v15320
    fs = v15321
    gs = v15322
    cf = v15323
    ?1 = v15324
    pf = v15325
    ?3 = v15326
    af = v15327
    ?5 = v15328
    zf = v15329
    sf = v15330
    tf = v15331
    if = v15332
    df = v15333
    of = v15334
    iopl0 = v15335
    iopl1 = v15336
    nt = v15337
    ?15 = v15338
    memory = {}
    ip = 0x80485c9 [from 0x80485c8:leave  ]
0x80485c9:ret    
    ax = v15349 [from 0x80485c6:pop    eax]
    cx = v15310
    dx = v15311
    bx = v15391 [from 0x80485c7:pop    ebx]
    sp = v15479 [from 0x80485c9:ret    ]
    bp = v15434 [from 0x80485c8:leave  ]
    si = v15315
    di = v15316
    es = v15317
    cs = v15318
    ss = v15319
    ds = v15320
    fs = v15321
    gs = v15322
    cf = v15323
    ?1 = v15324
    pf = v15325
    ?3 = v15326
    af = v15327
    ?5 = v15328
    zf = v15329
    sf = v15330
    tf = v15331
    if = v15332
    df = v15333
    of = v15334
    iopl0 = v15335
    iopl1 = v15336
    nt = v15337
    ?15 = v15338
    memory = {}
    ip = v15477 [from 0x80485c9:ret    ]
analyzed headers: 1
