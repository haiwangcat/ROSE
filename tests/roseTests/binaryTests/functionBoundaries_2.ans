Functions detected from binary executable:
  Num Entry-Addr Begin-Addr  End-Addr  Insns/ Bytes    Reason(*1)      Kind                 Name              
 ---- ---------- ---------- ---------- ------------ ---------------- -------- --------------------------------
    0 0x080482c8 0x080482de 0x080482df     8/23     .C..SP..........  unknown _init                           
    1 0x080482f0 0x080482f0 0x080482f6     1/6      .C.I............  unknown signal@plt                      
    2 0x08048300 0x08048300 0x08048306     1/6      .C.I............  unknown puts@plt                        
    3 0x08048310 0x08048310 0x08048316     1/6      .C.I............  unknown __libc_start_main@plt           
    4 0x08048320 0x08048320 0x08048326     1/6      .C.I............  unknown _exit@plt                       
    5 0x08048330 0x08048330 0x08048336     1/6      .C.I............  unknown __gmon_start__@plt              
    6 0x08048340 0x08048361 0x08048362    14/34     E...S...........  unknown _start                          
    7 0x08048364 0x08048387 0x08048388    15/36     .C..SP..........  unknown call_gmon_start                 
    8 0x08048390 0x080483cd 0x080483ce    20/62     .C..SP..........  unknown __do_global_dtors_aux           
    9 0x080483d0 0x08048403 0x08048404    16/52     .C..SP..........  unknown frame_dummy                     
   10 0x08048410 0x08048433 0x08048434    12/36     ....S...........  unknown main                            
   11 0x08048440 0x08048455 0x08048456     8/22     ....SP..........  unknown bar                             
   12 0x08048460 0x08048479 0x0804847e     7/30     ....SP..........  unknown foo                             
   13 0x08048480 0x0804849f 0x080484a4     8/36     ....SP..........  unknown handler                         
   14 0x080484b0 0x080484e7 0x080484e8    22/56     ....SP..........  unknown __libc_csu_init                 
   15 0x08048520 0x08048577 0x08048578    33/88     ....SP..........  unknown __libc_csu_fini                 
   16 0x08048580 0x080485af 0x080485b0    19/48     .C..SP..........  unknown __do_global_ctors_aux           
   17 0x080485b0 0x080485c9 0x080485ca    12/26     .C..SP..........  unknown _fini                           
 ---- ---------- ---------- ---------- ------------ ---------------- -------- --------------------------------
  == Footnotes ==
  Footnote *1: E = entry address         H = CFG head             C = function call(*)
               X = exception frame       T = thunk                I = imported/dyn-linked
               S = function symbol       P = instruction pattern  G = CFG graph analysis
               U = user-def detection    N = NOP/zero padding     D = discontiguous blocks
               V = intra-function block  L = leftover blocksMxxx are miscellaneous reasons (at most one misc reason per function):
                     M001 = code between function padding bytes
               Note: "c" means this is the target of a call-like instruction or instruction
                     sequence but the call is not present in the global control flow graph, while
                     "C" means the call is in the CFG.
