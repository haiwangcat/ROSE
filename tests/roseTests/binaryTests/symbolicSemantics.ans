=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482c8:push   ebp
    registers:
        ax      = { defs={} expr=v48[32] }
        cx      = { defs={} expr=v49[32] }
        dx      = { defs={} expr=v50[32] }
        bx      = { defs={} expr=v51[32] }
        sp      = { defs={0x080482c8} expr=(add[32] v52[32] -4[32]) }
        bp      = { defs={} expr=v53[32] }
        si      = { defs={} expr=v54[32] }
        di      = { defs={} expr=v55[32] }
        es      = { defs={} expr=v56[16] }
        cs      = { defs={} expr=v57[16] }
        ss      = { defs={} expr=v58[16] }
        ds      = { defs={} expr=v59[16] }
        fs      = { defs={} expr=v60[16] }
        gs      = { defs={} expr=v61[16] }
        cf      = { defs={} expr=v62[1] }
        ?1      = { defs={} expr=v63[1] }
        pf      = { defs={} expr=v64[1] }
        ?3      = { defs={} expr=v65[1] }
        af      = { defs={} expr=v66[1] }
        ?5      = { defs={} expr=v67[1] }
        zf      = { defs={} expr=v68[1] }
        sf      = { defs={} expr=v69[1] }
        tf      = { defs={} expr=v70[1] }
        if      = { defs={} expr=v71[1] }
        df      = { defs={} expr=v72[1] }
        of      = { defs={} expr=v73[1] }
        iopl0   = { defs={} expr=v74[1] }
        iopl1   = { defs={} expr=v75[1] }
        nt      = { defs={} expr=v76[1] }
        ?15     = { defs={} expr=v77[1] }
        rf      = { defs={} expr=v78[1] }
        vm      = { defs={} expr=v79[1] }
        ac      = { defs={} expr=v80[1] }
        vif     = { defs={} expr=v81[1] }
        vip     = { defs={} expr=v82[1] }
        id      = { defs={} expr=v83[1] }
        ?22     = { defs={} expr=v84[1] }
        ?23     = { defs={} expr=v85[1] }
        ?24     = { defs={} expr=v86[1] }
        ?25     = { defs={} expr=v87[1] }
        ?26     = { defs={} expr=v88[1] }
        ?27     = { defs={} expr=v89[1] }
        ?28     = { defs={} expr=v90[1] }
        ?29     = { defs={} expr=v91[1] }
        ?30     = { defs={} expr=v92[1] }
        ?31     = { defs={} expr=v93[1] }
        ip      = { defs={0x080482c8} expr=0x080482c9[32] }
    memory:
        address = { defs={0x080482c8} expr=(add[32] v52[32] -4[32]) }
          value = { defs={0x080482c8} expr=v53[32] }
          flags = { size=4 }
    ip = defs={0x080482c8} expr=0x080482c9[32]
0x80482c9:mov    ebp, esp
    registers:
        ax      = { defs={} expr=v48[32] }
        cx      = { defs={} expr=v49[32] }
        dx      = { defs={} expr=v50[32] }
        bx      = { defs={} expr=v51[32] }
        sp      = { defs={0x080482c8} expr=(add[32] v52[32] -4[32]) }
        bp      = { defs={0x080482c8,0x080482c9} expr=(add[32] v52[32] -4[32]) }
        si      = { defs={} expr=v54[32] }
        di      = { defs={} expr=v55[32] }
        es      = { defs={} expr=v56[16] }
        cs      = { defs={} expr=v57[16] }
        ss      = { defs={} expr=v58[16] }
        ds      = { defs={} expr=v59[16] }
        fs      = { defs={} expr=v60[16] }
        gs      = { defs={} expr=v61[16] }
        cf      = { defs={} expr=v62[1] }
        ?1      = { defs={} expr=v63[1] }
        pf      = { defs={} expr=v64[1] }
        ?3      = { defs={} expr=v65[1] }
        af      = { defs={} expr=v66[1] }
        ?5      = { defs={} expr=v67[1] }
        zf      = { defs={} expr=v68[1] }
        sf      = { defs={} expr=v69[1] }
        tf      = { defs={} expr=v70[1] }
        if      = { defs={} expr=v71[1] }
        df      = { defs={} expr=v72[1] }
        of      = { defs={} expr=v73[1] }
        iopl0   = { defs={} expr=v74[1] }
        iopl1   = { defs={} expr=v75[1] }
        nt      = { defs={} expr=v76[1] }
        ?15     = { defs={} expr=v77[1] }
        rf      = { defs={} expr=v78[1] }
        vm      = { defs={} expr=v79[1] }
        ac      = { defs={} expr=v80[1] }
        vif     = { defs={} expr=v81[1] }
        vip     = { defs={} expr=v82[1] }
        id      = { defs={} expr=v83[1] }
        ?22     = { defs={} expr=v84[1] }
        ?23     = { defs={} expr=v85[1] }
        ?24     = { defs={} expr=v86[1] }
        ?25     = { defs={} expr=v87[1] }
        ?26     = { defs={} expr=v88[1] }
        ?27     = { defs={} expr=v89[1] }
        ?28     = { defs={} expr=v90[1] }
        ?29     = { defs={} expr=v91[1] }
        ?30     = { defs={} expr=v92[1] }
        ?31     = { defs={} expr=v93[1] }
        ip      = { defs={0x080482c8,0x080482c9} expr=0x080482cb[32] }
    memory:
        address = { defs={0x080482c8} expr=(add[32] v52[32] -4[32]) }
          value = { defs={0x080482c8} expr=v53[32] }
          flags = { size=4 }
    ip = defs={0x080482c8,0x080482c9} expr=0x080482cb[32]
0x80482cb:sub    esp, 0x08
    registers:
        ax      = { defs={} expr=v48[32] }
        cx      = { defs={} expr=v49[32] }
        dx      = { defs={} expr=v50[32] }
        bx      = { defs={} expr=v51[32] }
        sp      = { defs={0x080482c8,0x080482cb} expr=(add[32] (add[32] v52[32] -4[32]) -8[32]) }
        bp      = { defs={0x080482c8,0x080482c9} expr=(add[32] v52[32] -4[32]) }
        si      = { defs={} expr=v54[32] }
        di      = { defs={} expr=v55[32] }
        es      = { defs={} expr=v56[16] }
        cs      = { defs={} expr=v57[16] }
        ss      = { defs={} expr=v58[16] }
        ds      = { defs={} expr=v59[16] }
        fs      = { defs={} expr=v60[16] }
        gs      = { defs={} expr=v61[16] }
        cf      = { defs={0x080482c8,0x080482cb} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v63[1] }
        pf      = { defs={0x080482c8,0x080482cb} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32]))))))) }
        ?3      = { defs={} expr=v65[1] }
        af      = { defs={0x080482c8,0x080482cb} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) 4294967288[33])))))) }
        ?5      = { defs={} expr=v67[1] }
        zf      = { defs={0x080482c8,0x080482cb} expr=(zerop[1] (add[32] (add[32] v52[32] -4[32]) -8[32])) }
        sf      = { defs={0x080482c8,0x080482cb} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v52[32] -4[32]) -8[32])) }
        tf      = { defs={} expr=v70[1] }
        if      = { defs={} expr=v71[1] }
        df      = { defs={} expr=v72[1] }
        of      = { defs={0x080482c8,0x080482cb} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) 4294967288[33])))))) }
        iopl0   = { defs={} expr=v74[1] }
        iopl1   = { defs={} expr=v75[1] }
        nt      = { defs={} expr=v76[1] }
        ?15     = { defs={} expr=v77[1] }
        rf      = { defs={} expr=v78[1] }
        vm      = { defs={} expr=v79[1] }
        ac      = { defs={} expr=v80[1] }
        vif     = { defs={} expr=v81[1] }
        vip     = { defs={} expr=v82[1] }
        id      = { defs={} expr=v83[1] }
        ?22     = { defs={} expr=v84[1] }
        ?23     = { defs={} expr=v85[1] }
        ?24     = { defs={} expr=v86[1] }
        ?25     = { defs={} expr=v87[1] }
        ?26     = { defs={} expr=v88[1] }
        ?27     = { defs={} expr=v89[1] }
        ?28     = { defs={} expr=v90[1] }
        ?29     = { defs={} expr=v91[1] }
        ?30     = { defs={} expr=v92[1] }
        ?31     = { defs={} expr=v93[1] }
        ip      = { defs={0x080482c8,0x080482c9,0x080482cb} expr=0x080482ce[32] }
    memory:
        address = { defs={0x080482c8} expr=(add[32] v52[32] -4[32]) }
          value = { defs={0x080482c8} expr=v53[32] }
          flags = { size=4 }
    ip = defs={0x080482c8,0x080482c9,0x080482cb} expr=0x080482ce[32]
0x80482ce:call   0x08048364<call_gmon_start>
    registers:
        ax      = { defs={} expr=v48[32] }
        cx      = { defs={} expr=v49[32] }
        dx      = { defs={} expr=v50[32] }
        bx      = { defs={} expr=v51[32] }
        sp      = { defs={0x080482c8,0x080482cb,0x080482ce} expr=(add[32] (add[32] (add[32] v52[32] -4[32]) -8[32]) -4[32]) }
        bp      = { defs={0x080482c8,0x080482c9} expr=(add[32] v52[32] -4[32]) }
        si      = { defs={} expr=v54[32] }
        di      = { defs={} expr=v55[32] }
        es      = { defs={} expr=v56[16] }
        cs      = { defs={} expr=v57[16] }
        ss      = { defs={} expr=v58[16] }
        ds      = { defs={} expr=v59[16] }
        fs      = { defs={} expr=v60[16] }
        gs      = { defs={} expr=v61[16] }
        cf      = { defs={0x080482c8,0x080482cb} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v63[1] }
        pf      = { defs={0x080482c8,0x080482cb} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32]))))))) }
        ?3      = { defs={} expr=v65[1] }
        af      = { defs={0x080482c8,0x080482cb} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) 4294967288[33])))))) }
        ?5      = { defs={} expr=v67[1] }
        zf      = { defs={0x080482c8,0x080482cb} expr=(zerop[1] (add[32] (add[32] v52[32] -4[32]) -8[32])) }
        sf      = { defs={0x080482c8,0x080482cb} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v52[32] -4[32]) -8[32])) }
        tf      = { defs={} expr=v70[1] }
        if      = { defs={} expr=v71[1] }
        df      = { defs={} expr=v72[1] }
        of      = { defs={0x080482c8,0x080482cb} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) 4294967288[33])))))) }
        iopl0   = { defs={} expr=v74[1] }
        iopl1   = { defs={} expr=v75[1] }
        nt      = { defs={} expr=v76[1] }
        ?15     = { defs={} expr=v77[1] }
        rf      = { defs={} expr=v78[1] }
        vm      = { defs={} expr=v79[1] }
        ac      = { defs={} expr=v80[1] }
        vif     = { defs={} expr=v81[1] }
        vip     = { defs={} expr=v82[1] }
        id      = { defs={} expr=v83[1] }
        ?22     = { defs={} expr=v84[1] }
        ?23     = { defs={} expr=v85[1] }
        ?24     = { defs={} expr=v86[1] }
        ?25     = { defs={} expr=v87[1] }
        ?26     = { defs={} expr=v88[1] }
        ?27     = { defs={} expr=v89[1] }
        ?28     = { defs={} expr=v90[1] }
        ?29     = { defs={} expr=v91[1] }
        ?30     = { defs={} expr=v92[1] }
        ?31     = { defs={} expr=v93[1] }
        ip      = { defs={0x080482ce} expr=0x08048364[32] }
    memory:
        address = { defs={0x080482c8} expr=(add[32] v52[32] -4[32]) }
          value = { defs={0x080482c8} expr=v53[32] }
          flags = { size=4 }
        address = { defs={0x080482c8,0x080482cb,0x080482ce} expr=(add[32] (add[32] (add[32] v52[32] -4[32]) -8[32]) -4[32]) }
          value = { defs={0x080482c8,0x080482c9,0x080482cb,0x080482ce} expr=0x080482d3[32] }
          flags = { size=4 }
    ip = defs={0x080482ce} expr=0x08048364[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482d3:call   0x080483d0<frame_dummy>
    registers:
        ax      = { defs={} expr=v142[32] }
        cx      = { defs={} expr=v143[32] }
        dx      = { defs={} expr=v144[32] }
        bx      = { defs={} expr=v145[32] }
        sp      = { defs={0x080482d3} expr=(add[32] v146[32] -4[32]) }
        bp      = { defs={} expr=v147[32] }
        si      = { defs={} expr=v148[32] }
        di      = { defs={} expr=v149[32] }
        es      = { defs={} expr=v150[16] }
        cs      = { defs={} expr=v151[16] }
        ss      = { defs={} expr=v152[16] }
        ds      = { defs={} expr=v153[16] }
        fs      = { defs={} expr=v154[16] }
        gs      = { defs={} expr=v155[16] }
        cf      = { defs={} expr=v156[1] }
        ?1      = { defs={} expr=v157[1] }
        pf      = { defs={} expr=v158[1] }
        ?3      = { defs={} expr=v159[1] }
        af      = { defs={} expr=v160[1] }
        ?5      = { defs={} expr=v161[1] }
        zf      = { defs={} expr=v162[1] }
        sf      = { defs={} expr=v163[1] }
        tf      = { defs={} expr=v164[1] }
        if      = { defs={} expr=v165[1] }
        df      = { defs={} expr=v166[1] }
        of      = { defs={} expr=v167[1] }
        iopl0   = { defs={} expr=v168[1] }
        iopl1   = { defs={} expr=v169[1] }
        nt      = { defs={} expr=v170[1] }
        ?15     = { defs={} expr=v171[1] }
        rf      = { defs={} expr=v172[1] }
        vm      = { defs={} expr=v173[1] }
        ac      = { defs={} expr=v174[1] }
        vif     = { defs={} expr=v175[1] }
        vip     = { defs={} expr=v176[1] }
        id      = { defs={} expr=v177[1] }
        ?22     = { defs={} expr=v178[1] }
        ?23     = { defs={} expr=v179[1] }
        ?24     = { defs={} expr=v180[1] }
        ?25     = { defs={} expr=v181[1] }
        ?26     = { defs={} expr=v182[1] }
        ?27     = { defs={} expr=v183[1] }
        ?28     = { defs={} expr=v184[1] }
        ?29     = { defs={} expr=v185[1] }
        ?30     = { defs={} expr=v186[1] }
        ?31     = { defs={} expr=v187[1] }
        ip      = { defs={0x080482d3} expr=0x080483d0[32] }
    memory:
        address = { defs={0x080482d3} expr=(add[32] v146[32] -4[32]) }
          value = { defs={0x080482d3} expr=0x080482d8[32] }
          flags = { size=4 }
    ip = defs={0x080482d3} expr=0x080483d0[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482d8:call   0x08048580<__do_global_ctors_aux>
    registers:
        ax      = { defs={} expr=v236[32] }
        cx      = { defs={} expr=v237[32] }
        dx      = { defs={} expr=v238[32] }
        bx      = { defs={} expr=v239[32] }
        sp      = { defs={0x080482d8} expr=(add[32] v240[32] -4[32]) }
        bp      = { defs={} expr=v241[32] }
        si      = { defs={} expr=v242[32] }
        di      = { defs={} expr=v243[32] }
        es      = { defs={} expr=v244[16] }
        cs      = { defs={} expr=v245[16] }
        ss      = { defs={} expr=v246[16] }
        ds      = { defs={} expr=v247[16] }
        fs      = { defs={} expr=v248[16] }
        gs      = { defs={} expr=v249[16] }
        cf      = { defs={} expr=v250[1] }
        ?1      = { defs={} expr=v251[1] }
        pf      = { defs={} expr=v252[1] }
        ?3      = { defs={} expr=v253[1] }
        af      = { defs={} expr=v254[1] }
        ?5      = { defs={} expr=v255[1] }
        zf      = { defs={} expr=v256[1] }
        sf      = { defs={} expr=v257[1] }
        tf      = { defs={} expr=v258[1] }
        if      = { defs={} expr=v259[1] }
        df      = { defs={} expr=v260[1] }
        of      = { defs={} expr=v261[1] }
        iopl0   = { defs={} expr=v262[1] }
        iopl1   = { defs={} expr=v263[1] }
        nt      = { defs={} expr=v264[1] }
        ?15     = { defs={} expr=v265[1] }
        rf      = { defs={} expr=v266[1] }
        vm      = { defs={} expr=v267[1] }
        ac      = { defs={} expr=v268[1] }
        vif     = { defs={} expr=v269[1] }
        vip     = { defs={} expr=v270[1] }
        id      = { defs={} expr=v271[1] }
        ?22     = { defs={} expr=v272[1] }
        ?23     = { defs={} expr=v273[1] }
        ?24     = { defs={} expr=v274[1] }
        ?25     = { defs={} expr=v275[1] }
        ?26     = { defs={} expr=v276[1] }
        ?27     = { defs={} expr=v277[1] }
        ?28     = { defs={} expr=v278[1] }
        ?29     = { defs={} expr=v279[1] }
        ?30     = { defs={} expr=v280[1] }
        ?31     = { defs={} expr=v281[1] }
        ip      = { defs={0x080482d8} expr=0x08048580[32] }
    memory:
        address = { defs={0x080482d8} expr=(add[32] v240[32] -4[32]) }
          value = { defs={0x080482d8} expr=0x080482dd[32] }
          flags = { size=4 }
    ip = defs={0x080482d8} expr=0x08048580[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482dd:leave  
    registers:
        ax      = { defs={} expr=v330[32] }
        cx      = { defs={} expr=v331[32] }
        dx      = { defs={} expr=v332[32] }
        bx      = { defs={} expr=v333[32] }
        sp      = { defs={0x080482dd} expr=(add[32] v335[32] 4[32]) }
        bp      = { defs={0x080482dd} expr=v376[32] }
        si      = { defs={} expr=v336[32] }
        di      = { defs={} expr=v337[32] }
        es      = { defs={} expr=v338[16] }
        cs      = { defs={} expr=v339[16] }
        ss      = { defs={} expr=v340[16] }
        ds      = { defs={} expr=v341[16] }
        fs      = { defs={} expr=v342[16] }
        gs      = { defs={} expr=v343[16] }
        cf      = { defs={} expr=v344[1] }
        ?1      = { defs={} expr=v345[1] }
        pf      = { defs={} expr=v346[1] }
        ?3      = { defs={} expr=v347[1] }
        af      = { defs={} expr=v348[1] }
        ?5      = { defs={} expr=v349[1] }
        zf      = { defs={} expr=v350[1] }
        sf      = { defs={} expr=v351[1] }
        tf      = { defs={} expr=v352[1] }
        if      = { defs={} expr=v353[1] }
        df      = { defs={} expr=v354[1] }
        of      = { defs={} expr=v355[1] }
        iopl0   = { defs={} expr=v356[1] }
        iopl1   = { defs={} expr=v357[1] }
        nt      = { defs={} expr=v358[1] }
        ?15     = { defs={} expr=v359[1] }
        rf      = { defs={} expr=v360[1] }
        vm      = { defs={} expr=v361[1] }
        ac      = { defs={} expr=v362[1] }
        vif     = { defs={} expr=v363[1] }
        vip     = { defs={} expr=v364[1] }
        id      = { defs={} expr=v365[1] }
        ?22     = { defs={} expr=v366[1] }
        ?23     = { defs={} expr=v367[1] }
        ?24     = { defs={} expr=v368[1] }
        ?25     = { defs={} expr=v369[1] }
        ?26     = { defs={} expr=v370[1] }
        ?27     = { defs={} expr=v371[1] }
        ?28     = { defs={} expr=v372[1] }
        ?29     = { defs={} expr=v373[1] }
        ?30     = { defs={} expr=v374[1] }
        ?31     = { defs={} expr=v375[1] }
        ip      = { defs={0x080482dd} expr=0x080482de[32] }
    memory:
        address = { defs={0x080482dd} expr=v335[32] }
          value = { defs={} expr=v376[32] }
          flags = { size=4; read-only }
    ip = defs={0x080482dd} expr=0x080482de[32]
0x80482de:ret    
    registers:
        ax      = { defs={} expr=v330[32] }
        cx      = { defs={} expr=v331[32] }
        dx      = { defs={} expr=v332[32] }
        bx      = { defs={} expr=v333[32] }
        sp      = { defs={0x080482dd,0x080482de} expr=(add[32] (add[32] v335[32] 4[32]) 4[32]) }
        bp      = { defs={0x080482dd} expr=v376[32] }
        si      = { defs={} expr=v336[32] }
        di      = { defs={} expr=v337[32] }
        es      = { defs={} expr=v338[16] }
        cs      = { defs={} expr=v339[16] }
        ss      = { defs={} expr=v340[16] }
        ds      = { defs={} expr=v341[16] }
        fs      = { defs={} expr=v342[16] }
        gs      = { defs={} expr=v343[16] }
        cf      = { defs={} expr=v344[1] }
        ?1      = { defs={} expr=v345[1] }
        pf      = { defs={} expr=v346[1] }
        ?3      = { defs={} expr=v347[1] }
        af      = { defs={} expr=v348[1] }
        ?5      = { defs={} expr=v349[1] }
        zf      = { defs={} expr=v350[1] }
        sf      = { defs={} expr=v351[1] }
        tf      = { defs={} expr=v352[1] }
        if      = { defs={} expr=v353[1] }
        df      = { defs={} expr=v354[1] }
        of      = { defs={} expr=v355[1] }
        iopl0   = { defs={} expr=v356[1] }
        iopl1   = { defs={} expr=v357[1] }
        nt      = { defs={} expr=v358[1] }
        ?15     = { defs={} expr=v359[1] }
        rf      = { defs={} expr=v360[1] }
        vm      = { defs={} expr=v361[1] }
        ac      = { defs={} expr=v362[1] }
        vif     = { defs={} expr=v363[1] }
        vip     = { defs={} expr=v364[1] }
        id      = { defs={} expr=v365[1] }
        ?22     = { defs={} expr=v366[1] }
        ?23     = { defs={} expr=v367[1] }
        ?24     = { defs={} expr=v368[1] }
        ?25     = { defs={} expr=v369[1] }
        ?26     = { defs={} expr=v370[1] }
        ?27     = { defs={} expr=v371[1] }
        ?28     = { defs={} expr=v372[1] }
        ?29     = { defs={} expr=v373[1] }
        ?30     = { defs={} expr=v374[1] }
        ?31     = { defs={} expr=v375[1] }
        ip      = { defs={0x080482de} expr=v377[32] }
    memory:
        address = { defs={0x080482dd} expr=v335[32] }
          value = { defs={} expr=v376[32] }
          flags = { size=4; read-only }
        address = { defs={0x080482dd} expr=(add[32] v335[32] 4[32]) }
          value = { defs={} expr=v377[32] }
          flags = { size=4; read-only }
    ip = defs={0x080482de} expr=v377[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482f0:jmp    DWORD PTR ds:[0x080496d4<.got.plt+0x0c>]
    registers:
        ax      = { defs={} expr=v426[32] }
        cx      = { defs={} expr=v427[32] }
        dx      = { defs={} expr=v428[32] }
        bx      = { defs={} expr=v429[32] }
        sp      = { defs={} expr=v430[32] }
        bp      = { defs={} expr=v431[32] }
        si      = { defs={} expr=v432[32] }
        di      = { defs={} expr=v433[32] }
        es      = { defs={} expr=v434[16] }
        cs      = { defs={} expr=v435[16] }
        ss      = { defs={} expr=v436[16] }
        ds      = { defs={} expr=v437[16] }
        fs      = { defs={} expr=v438[16] }
        gs      = { defs={} expr=v439[16] }
        cf      = { defs={} expr=v440[1] }
        ?1      = { defs={} expr=v441[1] }
        pf      = { defs={} expr=v442[1] }
        ?3      = { defs={} expr=v443[1] }
        af      = { defs={} expr=v444[1] }
        ?5      = { defs={} expr=v445[1] }
        zf      = { defs={} expr=v446[1] }
        sf      = { defs={} expr=v447[1] }
        tf      = { defs={} expr=v448[1] }
        if      = { defs={} expr=v449[1] }
        df      = { defs={} expr=v450[1] }
        of      = { defs={} expr=v451[1] }
        iopl0   = { defs={} expr=v452[1] }
        iopl1   = { defs={} expr=v453[1] }
        nt      = { defs={} expr=v454[1] }
        ?15     = { defs={} expr=v455[1] }
        rf      = { defs={} expr=v456[1] }
        vm      = { defs={} expr=v457[1] }
        ac      = { defs={} expr=v458[1] }
        vif     = { defs={} expr=v459[1] }
        vip     = { defs={} expr=v460[1] }
        id      = { defs={} expr=v461[1] }
        ?22     = { defs={} expr=v462[1] }
        ?23     = { defs={} expr=v463[1] }
        ?24     = { defs={} expr=v464[1] }
        ?25     = { defs={} expr=v465[1] }
        ?26     = { defs={} expr=v466[1] }
        ?27     = { defs={} expr=v467[1] }
        ?28     = { defs={} expr=v468[1] }
        ?29     = { defs={} expr=v469[1] }
        ?30     = { defs={} expr=v470[1] }
        ?31     = { defs={} expr=v471[1] }
        ip      = { defs={0x080482f0} expr=v472[32] }
    memory:
        address = { defs={0x080482f0} expr=0x080496d4[32] }
          value = { defs={} expr=v472[32] }
          flags = { size=4; read-only }
    ip = defs={0x080482f0} expr=v472[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048300:jmp    DWORD PTR ds:[0x080496d8<.got.plt+0x10>]
    registers:
        ax      = { defs={} expr=v521[32] }
        cx      = { defs={} expr=v522[32] }
        dx      = { defs={} expr=v523[32] }
        bx      = { defs={} expr=v524[32] }
        sp      = { defs={} expr=v525[32] }
        bp      = { defs={} expr=v526[32] }
        si      = { defs={} expr=v527[32] }
        di      = { defs={} expr=v528[32] }
        es      = { defs={} expr=v529[16] }
        cs      = { defs={} expr=v530[16] }
        ss      = { defs={} expr=v531[16] }
        ds      = { defs={} expr=v532[16] }
        fs      = { defs={} expr=v533[16] }
        gs      = { defs={} expr=v534[16] }
        cf      = { defs={} expr=v535[1] }
        ?1      = { defs={} expr=v536[1] }
        pf      = { defs={} expr=v537[1] }
        ?3      = { defs={} expr=v538[1] }
        af      = { defs={} expr=v539[1] }
        ?5      = { defs={} expr=v540[1] }
        zf      = { defs={} expr=v541[1] }
        sf      = { defs={} expr=v542[1] }
        tf      = { defs={} expr=v543[1] }
        if      = { defs={} expr=v544[1] }
        df      = { defs={} expr=v545[1] }
        of      = { defs={} expr=v546[1] }
        iopl0   = { defs={} expr=v547[1] }
        iopl1   = { defs={} expr=v548[1] }
        nt      = { defs={} expr=v549[1] }
        ?15     = { defs={} expr=v550[1] }
        rf      = { defs={} expr=v551[1] }
        vm      = { defs={} expr=v552[1] }
        ac      = { defs={} expr=v553[1] }
        vif     = { defs={} expr=v554[1] }
        vip     = { defs={} expr=v555[1] }
        id      = { defs={} expr=v556[1] }
        ?22     = { defs={} expr=v557[1] }
        ?23     = { defs={} expr=v558[1] }
        ?24     = { defs={} expr=v559[1] }
        ?25     = { defs={} expr=v560[1] }
        ?26     = { defs={} expr=v561[1] }
        ?27     = { defs={} expr=v562[1] }
        ?28     = { defs={} expr=v563[1] }
        ?29     = { defs={} expr=v564[1] }
        ?30     = { defs={} expr=v565[1] }
        ?31     = { defs={} expr=v566[1] }
        ip      = { defs={0x08048300} expr=v567[32] }
    memory:
        address = { defs={0x08048300} expr=0x080496d8[32] }
          value = { defs={} expr=v567[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048300} expr=v567[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048310:jmp    DWORD PTR ds:[0x080496dc<.got.plt+0x14>]
    registers:
        ax      = { defs={} expr=v616[32] }
        cx      = { defs={} expr=v617[32] }
        dx      = { defs={} expr=v618[32] }
        bx      = { defs={} expr=v619[32] }
        sp      = { defs={} expr=v620[32] }
        bp      = { defs={} expr=v621[32] }
        si      = { defs={} expr=v622[32] }
        di      = { defs={} expr=v623[32] }
        es      = { defs={} expr=v624[16] }
        cs      = { defs={} expr=v625[16] }
        ss      = { defs={} expr=v626[16] }
        ds      = { defs={} expr=v627[16] }
        fs      = { defs={} expr=v628[16] }
        gs      = { defs={} expr=v629[16] }
        cf      = { defs={} expr=v630[1] }
        ?1      = { defs={} expr=v631[1] }
        pf      = { defs={} expr=v632[1] }
        ?3      = { defs={} expr=v633[1] }
        af      = { defs={} expr=v634[1] }
        ?5      = { defs={} expr=v635[1] }
        zf      = { defs={} expr=v636[1] }
        sf      = { defs={} expr=v637[1] }
        tf      = { defs={} expr=v638[1] }
        if      = { defs={} expr=v639[1] }
        df      = { defs={} expr=v640[1] }
        of      = { defs={} expr=v641[1] }
        iopl0   = { defs={} expr=v642[1] }
        iopl1   = { defs={} expr=v643[1] }
        nt      = { defs={} expr=v644[1] }
        ?15     = { defs={} expr=v645[1] }
        rf      = { defs={} expr=v646[1] }
        vm      = { defs={} expr=v647[1] }
        ac      = { defs={} expr=v648[1] }
        vif     = { defs={} expr=v649[1] }
        vip     = { defs={} expr=v650[1] }
        id      = { defs={} expr=v651[1] }
        ?22     = { defs={} expr=v652[1] }
        ?23     = { defs={} expr=v653[1] }
        ?24     = { defs={} expr=v654[1] }
        ?25     = { defs={} expr=v655[1] }
        ?26     = { defs={} expr=v656[1] }
        ?27     = { defs={} expr=v657[1] }
        ?28     = { defs={} expr=v658[1] }
        ?29     = { defs={} expr=v659[1] }
        ?30     = { defs={} expr=v660[1] }
        ?31     = { defs={} expr=v661[1] }
        ip      = { defs={0x08048310} expr=v662[32] }
    memory:
        address = { defs={0x08048310} expr=0x080496dc[32] }
          value = { defs={} expr=v662[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048310} expr=v662[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048320:jmp    DWORD PTR ds:[0x080496e0<.got.plt+0x18>]
    registers:
        ax      = { defs={} expr=v711[32] }
        cx      = { defs={} expr=v712[32] }
        dx      = { defs={} expr=v713[32] }
        bx      = { defs={} expr=v714[32] }
        sp      = { defs={} expr=v715[32] }
        bp      = { defs={} expr=v716[32] }
        si      = { defs={} expr=v717[32] }
        di      = { defs={} expr=v718[32] }
        es      = { defs={} expr=v719[16] }
        cs      = { defs={} expr=v720[16] }
        ss      = { defs={} expr=v721[16] }
        ds      = { defs={} expr=v722[16] }
        fs      = { defs={} expr=v723[16] }
        gs      = { defs={} expr=v724[16] }
        cf      = { defs={} expr=v725[1] }
        ?1      = { defs={} expr=v726[1] }
        pf      = { defs={} expr=v727[1] }
        ?3      = { defs={} expr=v728[1] }
        af      = { defs={} expr=v729[1] }
        ?5      = { defs={} expr=v730[1] }
        zf      = { defs={} expr=v731[1] }
        sf      = { defs={} expr=v732[1] }
        tf      = { defs={} expr=v733[1] }
        if      = { defs={} expr=v734[1] }
        df      = { defs={} expr=v735[1] }
        of      = { defs={} expr=v736[1] }
        iopl0   = { defs={} expr=v737[1] }
        iopl1   = { defs={} expr=v738[1] }
        nt      = { defs={} expr=v739[1] }
        ?15     = { defs={} expr=v740[1] }
        rf      = { defs={} expr=v741[1] }
        vm      = { defs={} expr=v742[1] }
        ac      = { defs={} expr=v743[1] }
        vif     = { defs={} expr=v744[1] }
        vip     = { defs={} expr=v745[1] }
        id      = { defs={} expr=v746[1] }
        ?22     = { defs={} expr=v747[1] }
        ?23     = { defs={} expr=v748[1] }
        ?24     = { defs={} expr=v749[1] }
        ?25     = { defs={} expr=v750[1] }
        ?26     = { defs={} expr=v751[1] }
        ?27     = { defs={} expr=v752[1] }
        ?28     = { defs={} expr=v753[1] }
        ?29     = { defs={} expr=v754[1] }
        ?30     = { defs={} expr=v755[1] }
        ?31     = { defs={} expr=v756[1] }
        ip      = { defs={0x08048320} expr=v757[32] }
    memory:
        address = { defs={0x08048320} expr=0x080496e0[32] }
          value = { defs={} expr=v757[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048320} expr=v757[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048330:jmp    DWORD PTR ds:[0x080496e4<.got.plt+0x1c>]
    registers:
        ax      = { defs={} expr=v806[32] }
        cx      = { defs={} expr=v807[32] }
        dx      = { defs={} expr=v808[32] }
        bx      = { defs={} expr=v809[32] }
        sp      = { defs={} expr=v810[32] }
        bp      = { defs={} expr=v811[32] }
        si      = { defs={} expr=v812[32] }
        di      = { defs={} expr=v813[32] }
        es      = { defs={} expr=v814[16] }
        cs      = { defs={} expr=v815[16] }
        ss      = { defs={} expr=v816[16] }
        ds      = { defs={} expr=v817[16] }
        fs      = { defs={} expr=v818[16] }
        gs      = { defs={} expr=v819[16] }
        cf      = { defs={} expr=v820[1] }
        ?1      = { defs={} expr=v821[1] }
        pf      = { defs={} expr=v822[1] }
        ?3      = { defs={} expr=v823[1] }
        af      = { defs={} expr=v824[1] }
        ?5      = { defs={} expr=v825[1] }
        zf      = { defs={} expr=v826[1] }
        sf      = { defs={} expr=v827[1] }
        tf      = { defs={} expr=v828[1] }
        if      = { defs={} expr=v829[1] }
        df      = { defs={} expr=v830[1] }
        of      = { defs={} expr=v831[1] }
        iopl0   = { defs={} expr=v832[1] }
        iopl1   = { defs={} expr=v833[1] }
        nt      = { defs={} expr=v834[1] }
        ?15     = { defs={} expr=v835[1] }
        rf      = { defs={} expr=v836[1] }
        vm      = { defs={} expr=v837[1] }
        ac      = { defs={} expr=v838[1] }
        vif     = { defs={} expr=v839[1] }
        vip     = { defs={} expr=v840[1] }
        id      = { defs={} expr=v841[1] }
        ?22     = { defs={} expr=v842[1] }
        ?23     = { defs={} expr=v843[1] }
        ?24     = { defs={} expr=v844[1] }
        ?25     = { defs={} expr=v845[1] }
        ?26     = { defs={} expr=v846[1] }
        ?27     = { defs={} expr=v847[1] }
        ?28     = { defs={} expr=v848[1] }
        ?29     = { defs={} expr=v849[1] }
        ?30     = { defs={} expr=v850[1] }
        ?31     = { defs={} expr=v851[1] }
        ip      = { defs={0x08048330} expr=v852[32] }
    memory:
        address = { defs={0x08048330} expr=0x080496e4[32] }
          value = { defs={} expr=v852[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048330} expr=v852[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048340:xor    ebp, ebp
    registers:
        ax      = { defs={} expr=v901[32] }
        cx      = { defs={} expr=v902[32] }
        dx      = { defs={} expr=v903[32] }
        bx      = { defs={} expr=v904[32] }
        sp      = { defs={} expr=v905[32] }
        bp      = { defs={0x08048340} expr=0[32] }
        si      = { defs={} expr=v907[32] }
        di      = { defs={} expr=v908[32] }
        es      = { defs={} expr=v909[16] }
        cs      = { defs={} expr=v910[16] }
        ss      = { defs={} expr=v911[16] }
        ds      = { defs={} expr=v912[16] }
        fs      = { defs={} expr=v913[16] }
        gs      = { defs={} expr=v914[16] }
        cf      = { defs={0x08048340} expr=0[1] }
        ?1      = { defs={} expr=v916[1] }
        pf      = { defs={0x08048340} expr=1[1] }
        ?3      = { defs={} expr=v918[1] }
        af      = { defs={0x08048340} expr=v947[1] }
        ?5      = { defs={} expr=v920[1] }
        zf      = { defs={0x08048340} expr=1[1] }
        sf      = { defs={0x08048340} expr=0[1] }
        tf      = { defs={} expr=v923[1] }
        if      = { defs={} expr=v924[1] }
        df      = { defs={} expr=v925[1] }
        of      = { defs={0x08048340} expr=0[1] }
        iopl0   = { defs={} expr=v927[1] }
        iopl1   = { defs={} expr=v928[1] }
        nt      = { defs={} expr=v929[1] }
        ?15     = { defs={} expr=v930[1] }
        rf      = { defs={} expr=v931[1] }
        vm      = { defs={} expr=v932[1] }
        ac      = { defs={} expr=v933[1] }
        vif     = { defs={} expr=v934[1] }
        vip     = { defs={} expr=v935[1] }
        id      = { defs={} expr=v936[1] }
        ?22     = { defs={} expr=v937[1] }
        ?23     = { defs={} expr=v938[1] }
        ?24     = { defs={} expr=v939[1] }
        ?25     = { defs={} expr=v940[1] }
        ?26     = { defs={} expr=v941[1] }
        ?27     = { defs={} expr=v942[1] }
        ?28     = { defs={} expr=v943[1] }
        ?29     = { defs={} expr=v944[1] }
        ?30     = { defs={} expr=v945[1] }
        ?31     = { defs={} expr=v946[1] }
        ip      = { defs={0x08048340} expr=0x08048342[32] }
    memory:
        (empty)
    ip = defs={0x08048340} expr=0x08048342[32]
0x8048342:pop    esi
    registers:
        ax      = { defs={} expr=v901[32] }
        cx      = { defs={} expr=v902[32] }
        dx      = { defs={} expr=v903[32] }
        bx      = { defs={} expr=v904[32] }
        sp      = { defs={0x08048342} expr=(add[32] v905[32] 4[32]) }
        bp      = { defs={0x08048340} expr=0[32] }
        si      = { defs={0x08048342} expr=v948[32] }
        di      = { defs={} expr=v908[32] }
        es      = { defs={} expr=v909[16] }
        cs      = { defs={} expr=v910[16] }
        ss      = { defs={} expr=v911[16] }
        ds      = { defs={} expr=v912[16] }
        fs      = { defs={} expr=v913[16] }
        gs      = { defs={} expr=v914[16] }
        cf      = { defs={0x08048340} expr=0[1] }
        ?1      = { defs={} expr=v916[1] }
        pf      = { defs={0x08048340} expr=1[1] }
        ?3      = { defs={} expr=v918[1] }
        af      = { defs={0x08048340} expr=v947[1] }
        ?5      = { defs={} expr=v920[1] }
        zf      = { defs={0x08048340} expr=1[1] }
        sf      = { defs={0x08048340} expr=0[1] }
        tf      = { defs={} expr=v923[1] }
        if      = { defs={} expr=v924[1] }
        df      = { defs={} expr=v925[1] }
        of      = { defs={0x08048340} expr=0[1] }
        iopl0   = { defs={} expr=v927[1] }
        iopl1   = { defs={} expr=v928[1] }
        nt      = { defs={} expr=v929[1] }
        ?15     = { defs={} expr=v930[1] }
        rf      = { defs={} expr=v931[1] }
        vm      = { defs={} expr=v932[1] }
        ac      = { defs={} expr=v933[1] }
        vif     = { defs={} expr=v934[1] }
        vip     = { defs={} expr=v935[1] }
        id      = { defs={} expr=v936[1] }
        ?22     = { defs={} expr=v937[1] }
        ?23     = { defs={} expr=v938[1] }
        ?24     = { defs={} expr=v939[1] }
        ?25     = { defs={} expr=v940[1] }
        ?26     = { defs={} expr=v941[1] }
        ?27     = { defs={} expr=v942[1] }
        ?28     = { defs={} expr=v943[1] }
        ?29     = { defs={} expr=v944[1] }
        ?30     = { defs={} expr=v945[1] }
        ?31     = { defs={} expr=v946[1] }
        ip      = { defs={0x08048340,0x08048342} expr=0x08048343[32] }
    memory:
        address = { defs={} expr=v905[32] }
          value = { defs={} expr=v948[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048340,0x08048342} expr=0x08048343[32]
0x8048343:mov    ecx, esp
    registers:
        ax      = { defs={} expr=v901[32] }
        cx      = { defs={0x08048342,0x08048343} expr=(add[32] v905[32] 4[32]) }
        dx      = { defs={} expr=v903[32] }
        bx      = { defs={} expr=v904[32] }
        sp      = { defs={0x08048342} expr=(add[32] v905[32] 4[32]) }
        bp      = { defs={0x08048340} expr=0[32] }
        si      = { defs={0x08048342} expr=v948[32] }
        di      = { defs={} expr=v908[32] }
        es      = { defs={} expr=v909[16] }
        cs      = { defs={} expr=v910[16] }
        ss      = { defs={} expr=v911[16] }
        ds      = { defs={} expr=v912[16] }
        fs      = { defs={} expr=v913[16] }
        gs      = { defs={} expr=v914[16] }
        cf      = { defs={0x08048340} expr=0[1] }
        ?1      = { defs={} expr=v916[1] }
        pf      = { defs={0x08048340} expr=1[1] }
        ?3      = { defs={} expr=v918[1] }
        af      = { defs={0x08048340} expr=v947[1] }
        ?5      = { defs={} expr=v920[1] }
        zf      = { defs={0x08048340} expr=1[1] }
        sf      = { defs={0x08048340} expr=0[1] }
        tf      = { defs={} expr=v923[1] }
        if      = { defs={} expr=v924[1] }
        df      = { defs={} expr=v925[1] }
        of      = { defs={0x08048340} expr=0[1] }
        iopl0   = { defs={} expr=v927[1] }
        iopl1   = { defs={} expr=v928[1] }
        nt      = { defs={} expr=v929[1] }
        ?15     = { defs={} expr=v930[1] }
        rf      = { defs={} expr=v931[1] }
        vm      = { defs={} expr=v932[1] }
        ac      = { defs={} expr=v933[1] }
        vif     = { defs={} expr=v934[1] }
        vip     = { defs={} expr=v935[1] }
        id      = { defs={} expr=v936[1] }
        ?22     = { defs={} expr=v937[1] }
        ?23     = { defs={} expr=v938[1] }
        ?24     = { defs={} expr=v939[1] }
        ?25     = { defs={} expr=v940[1] }
        ?26     = { defs={} expr=v941[1] }
        ?27     = { defs={} expr=v942[1] }
        ?28     = { defs={} expr=v943[1] }
        ?29     = { defs={} expr=v944[1] }
        ?30     = { defs={} expr=v945[1] }
        ?31     = { defs={} expr=v946[1] }
        ip      = { defs={0x08048340,0x08048342,0x08048343} expr=0x08048345[32] }
    memory:
        address = { defs={} expr=v905[32] }
          value = { defs={} expr=v948[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048340,0x08048342,0x08048343} expr=0x08048345[32]
0x8048345:and    esp, 0xf0<-0x10>
    registers:
        ax      = { defs={} expr=v901[32] }
        cx      = { defs={0x08048342,0x08048343} expr=(add[32] v905[32] 4[32]) }
        dx      = { defs={} expr=v903[32] }
        bx      = { defs={} expr=v904[32] }
        sp      = { defs={0x08048342,0x08048345} expr=(bv-and[32] (add[32] v905[32] 4[32]) -16[32]) }
        bp      = { defs={0x08048340} expr=0[32] }
        si      = { defs={0x08048342} expr=v948[32] }
        di      = { defs={} expr=v908[32] }
        es      = { defs={} expr=v909[16] }
        cs      = { defs={} expr=v910[16] }
        ss      = { defs={} expr=v911[16] }
        ds      = { defs={} expr=v912[16] }
        fs      = { defs={} expr=v913[16] }
        gs      = { defs={} expr=v914[16] }
        cf      = { defs={0x08048345} expr=0[1] }
        ?1      = { defs={} expr=v916[1] }
        pf      = { defs={0x08048342,0x08048345} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))))))) }
        ?3      = { defs={} expr=v918[1] }
        af      = { defs={0x08048345} expr=v949[1] }
        ?5      = { defs={} expr=v920[1] }
        zf      = { defs={0x08048342,0x08048345} expr=(zerop[1] (bv-and[32] (add[32] v905[32] 4[32]) -16[32])) }
        sf      = { defs={0x08048342,0x08048345} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32])) }
        tf      = { defs={} expr=v923[1] }
        if      = { defs={} expr=v924[1] }
        df      = { defs={} expr=v925[1] }
        of      = { defs={0x08048345} expr=0[1] }
        iopl0   = { defs={} expr=v927[1] }
        iopl1   = { defs={} expr=v928[1] }
        nt      = { defs={} expr=v929[1] }
        ?15     = { defs={} expr=v930[1] }
        rf      = { defs={} expr=v931[1] }
        vm      = { defs={} expr=v932[1] }
        ac      = { defs={} expr=v933[1] }
        vif     = { defs={} expr=v934[1] }
        vip     = { defs={} expr=v935[1] }
        id      = { defs={} expr=v936[1] }
        ?22     = { defs={} expr=v937[1] }
        ?23     = { defs={} expr=v938[1] }
        ?24     = { defs={} expr=v939[1] }
        ?25     = { defs={} expr=v940[1] }
        ?26     = { defs={} expr=v941[1] }
        ?27     = { defs={} expr=v942[1] }
        ?28     = { defs={} expr=v943[1] }
        ?29     = { defs={} expr=v944[1] }
        ?30     = { defs={} expr=v945[1] }
        ?31     = { defs={} expr=v946[1] }
        ip      = { defs={0x08048340,0x08048342,0x08048343,0x08048345} expr=0x08048348[32] }
    memory:
        address = { defs={} expr=v905[32] }
          value = { defs={} expr=v948[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048340,0x08048342,0x08048343,0x08048345} expr=0x08048348[32]
0x8048348:push   eax
    registers:
        ax      = { defs={} expr=v901[32] }
        cx      = { defs={0x08048342,0x08048343} expr=(add[32] v905[32] 4[32]) }
        dx      = { defs={} expr=v903[32] }
        bx      = { defs={} expr=v904[32] }
        sp      = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) }
        bp      = { defs={0x08048340} expr=0[32] }
        si      = { defs={0x08048342} expr=v948[32] }
        di      = { defs={} expr=v908[32] }
        es      = { defs={} expr=v909[16] }
        cs      = { defs={} expr=v910[16] }
        ss      = { defs={} expr=v911[16] }
        ds      = { defs={} expr=v912[16] }
        fs      = { defs={} expr=v913[16] }
        gs      = { defs={} expr=v914[16] }
        cf      = { defs={0x08048345} expr=0[1] }
        ?1      = { defs={} expr=v916[1] }
        pf      = { defs={0x08048342,0x08048345} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))))))) }
        ?3      = { defs={} expr=v918[1] }
        af      = { defs={0x08048345} expr=v949[1] }
        ?5      = { defs={} expr=v920[1] }
        zf      = { defs={0x08048342,0x08048345} expr=(zerop[1] (bv-and[32] (add[32] v905[32] 4[32]) -16[32])) }
        sf      = { defs={0x08048342,0x08048345} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32])) }
        tf      = { defs={} expr=v923[1] }
        if      = { defs={} expr=v924[1] }
        df      = { defs={} expr=v925[1] }
        of      = { defs={0x08048345} expr=0[1] }
        iopl0   = { defs={} expr=v927[1] }
        iopl1   = { defs={} expr=v928[1] }
        nt      = { defs={} expr=v929[1] }
        ?15     = { defs={} expr=v930[1] }
        rf      = { defs={} expr=v931[1] }
        vm      = { defs={} expr=v932[1] }
        ac      = { defs={} expr=v933[1] }
        vif     = { defs={} expr=v934[1] }
        vip     = { defs={} expr=v935[1] }
        id      = { defs={} expr=v936[1] }
        ?22     = { defs={} expr=v937[1] }
        ?23     = { defs={} expr=v938[1] }
        ?24     = { defs={} expr=v939[1] }
        ?25     = { defs={} expr=v940[1] }
        ?26     = { defs={} expr=v941[1] }
        ?27     = { defs={} expr=v942[1] }
        ?28     = { defs={} expr=v943[1] }
        ?29     = { defs={} expr=v944[1] }
        ?30     = { defs={} expr=v945[1] }
        ?31     = { defs={} expr=v946[1] }
        ip      = { defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348} expr=0x08048349[32] }
    memory:
        address = { defs={} expr=v905[32] }
          value = { defs={} expr=v948[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) }
          value = { defs={0x08048348} expr=v901[32] }
          flags = { size=4 }
    ip = defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348} expr=0x08048349[32]
0x8048349:push   esp
    registers:
        ax      = { defs={} expr=v901[32] }
        cx      = { defs={0x08048342,0x08048343} expr=(add[32] v905[32] 4[32]) }
        dx      = { defs={} expr=v903[32] }
        bx      = { defs={} expr=v904[32] }
        sp      = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048340} expr=0[32] }
        si      = { defs={0x08048342} expr=v948[32] }
        di      = { defs={} expr=v908[32] }
        es      = { defs={} expr=v909[16] }
        cs      = { defs={} expr=v910[16] }
        ss      = { defs={} expr=v911[16] }
        ds      = { defs={} expr=v912[16] }
        fs      = { defs={} expr=v913[16] }
        gs      = { defs={} expr=v914[16] }
        cf      = { defs={0x08048345} expr=0[1] }
        ?1      = { defs={} expr=v916[1] }
        pf      = { defs={0x08048342,0x08048345} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))))))) }
        ?3      = { defs={} expr=v918[1] }
        af      = { defs={0x08048345} expr=v949[1] }
        ?5      = { defs={} expr=v920[1] }
        zf      = { defs={0x08048342,0x08048345} expr=(zerop[1] (bv-and[32] (add[32] v905[32] 4[32]) -16[32])) }
        sf      = { defs={0x08048342,0x08048345} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32])) }
        tf      = { defs={} expr=v923[1] }
        if      = { defs={} expr=v924[1] }
        df      = { defs={} expr=v925[1] }
        of      = { defs={0x08048345} expr=0[1] }
        iopl0   = { defs={} expr=v927[1] }
        iopl1   = { defs={} expr=v928[1] }
        nt      = { defs={} expr=v929[1] }
        ?15     = { defs={} expr=v930[1] }
        rf      = { defs={} expr=v931[1] }
        vm      = { defs={} expr=v932[1] }
        ac      = { defs={} expr=v933[1] }
        vif     = { defs={} expr=v934[1] }
        vip     = { defs={} expr=v935[1] }
        id      = { defs={} expr=v936[1] }
        ?22     = { defs={} expr=v937[1] }
        ?23     = { defs={} expr=v938[1] }
        ?24     = { defs={} expr=v939[1] }
        ?25     = { defs={} expr=v940[1] }
        ?26     = { defs={} expr=v941[1] }
        ?27     = { defs={} expr=v942[1] }
        ?28     = { defs={} expr=v943[1] }
        ?29     = { defs={} expr=v944[1] }
        ?30     = { defs={} expr=v945[1] }
        ?31     = { defs={} expr=v946[1] }
        ip      = { defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349} expr=0x0804834a[32] }
    memory:
        address = { defs={} expr=v905[32] }
          value = { defs={} expr=v948[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) }
          value = { defs={0x08048348} expr=v901[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) }
          flags = { size=4 }
    ip = defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349} expr=0x0804834a[32]
0x804834a:push   edx
    registers:
        ax      = { defs={} expr=v901[32] }
        cx      = { defs={0x08048342,0x08048343} expr=(add[32] v905[32] 4[32]) }
        dx      = { defs={} expr=v903[32] }
        bx      = { defs={} expr=v904[32] }
        sp      = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048340} expr=0[32] }
        si      = { defs={0x08048342} expr=v948[32] }
        di      = { defs={} expr=v908[32] }
        es      = { defs={} expr=v909[16] }
        cs      = { defs={} expr=v910[16] }
        ss      = { defs={} expr=v911[16] }
        ds      = { defs={} expr=v912[16] }
        fs      = { defs={} expr=v913[16] }
        gs      = { defs={} expr=v914[16] }
        cf      = { defs={0x08048345} expr=0[1] }
        ?1      = { defs={} expr=v916[1] }
        pf      = { defs={0x08048342,0x08048345} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))))))) }
        ?3      = { defs={} expr=v918[1] }
        af      = { defs={0x08048345} expr=v949[1] }
        ?5      = { defs={} expr=v920[1] }
        zf      = { defs={0x08048342,0x08048345} expr=(zerop[1] (bv-and[32] (add[32] v905[32] 4[32]) -16[32])) }
        sf      = { defs={0x08048342,0x08048345} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32])) }
        tf      = { defs={} expr=v923[1] }
        if      = { defs={} expr=v924[1] }
        df      = { defs={} expr=v925[1] }
        of      = { defs={0x08048345} expr=0[1] }
        iopl0   = { defs={} expr=v927[1] }
        iopl1   = { defs={} expr=v928[1] }
        nt      = { defs={} expr=v929[1] }
        ?15     = { defs={} expr=v930[1] }
        rf      = { defs={} expr=v931[1] }
        vm      = { defs={} expr=v932[1] }
        ac      = { defs={} expr=v933[1] }
        vif     = { defs={} expr=v934[1] }
        vip     = { defs={} expr=v935[1] }
        id      = { defs={} expr=v936[1] }
        ?22     = { defs={} expr=v937[1] }
        ?23     = { defs={} expr=v938[1] }
        ?24     = { defs={} expr=v939[1] }
        ?25     = { defs={} expr=v940[1] }
        ?26     = { defs={} expr=v941[1] }
        ?27     = { defs={} expr=v942[1] }
        ?28     = { defs={} expr=v943[1] }
        ?29     = { defs={} expr=v944[1] }
        ?30     = { defs={} expr=v945[1] }
        ?31     = { defs={} expr=v946[1] }
        ip      = { defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a} expr=0x0804834b[32] }
    memory:
        address = { defs={} expr=v905[32] }
          value = { defs={} expr=v948[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) }
          value = { defs={0x08048348} expr=v901[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x0804834a} expr=v903[32] }
          flags = { size=4 }
    ip = defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a} expr=0x0804834b[32]
0x804834b:push   0x08048520<__libc_csu_fini>
    registers:
        ax      = { defs={} expr=v901[32] }
        cx      = { defs={0x08048342,0x08048343} expr=(add[32] v905[32] 4[32]) }
        dx      = { defs={} expr=v903[32] }
        bx      = { defs={} expr=v904[32] }
        sp      = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048340} expr=0[32] }
        si      = { defs={0x08048342} expr=v948[32] }
        di      = { defs={} expr=v908[32] }
        es      = { defs={} expr=v909[16] }
        cs      = { defs={} expr=v910[16] }
        ss      = { defs={} expr=v911[16] }
        ds      = { defs={} expr=v912[16] }
        fs      = { defs={} expr=v913[16] }
        gs      = { defs={} expr=v914[16] }
        cf      = { defs={0x08048345} expr=0[1] }
        ?1      = { defs={} expr=v916[1] }
        pf      = { defs={0x08048342,0x08048345} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))))))) }
        ?3      = { defs={} expr=v918[1] }
        af      = { defs={0x08048345} expr=v949[1] }
        ?5      = { defs={} expr=v920[1] }
        zf      = { defs={0x08048342,0x08048345} expr=(zerop[1] (bv-and[32] (add[32] v905[32] 4[32]) -16[32])) }
        sf      = { defs={0x08048342,0x08048345} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32])) }
        tf      = { defs={} expr=v923[1] }
        if      = { defs={} expr=v924[1] }
        df      = { defs={} expr=v925[1] }
        of      = { defs={0x08048345} expr=0[1] }
        iopl0   = { defs={} expr=v927[1] }
        iopl1   = { defs={} expr=v928[1] }
        nt      = { defs={} expr=v929[1] }
        ?15     = { defs={} expr=v930[1] }
        rf      = { defs={} expr=v931[1] }
        vm      = { defs={} expr=v932[1] }
        ac      = { defs={} expr=v933[1] }
        vif     = { defs={} expr=v934[1] }
        vip     = { defs={} expr=v935[1] }
        id      = { defs={} expr=v936[1] }
        ?22     = { defs={} expr=v937[1] }
        ?23     = { defs={} expr=v938[1] }
        ?24     = { defs={} expr=v939[1] }
        ?25     = { defs={} expr=v940[1] }
        ?26     = { defs={} expr=v941[1] }
        ?27     = { defs={} expr=v942[1] }
        ?28     = { defs={} expr=v943[1] }
        ?29     = { defs={} expr=v944[1] }
        ?30     = { defs={} expr=v945[1] }
        ?31     = { defs={} expr=v946[1] }
        ip      = { defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=0x08048350[32] }
    memory:
        address = { defs={} expr=v905[32] }
          value = { defs={} expr=v948[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) }
          value = { defs={0x08048348} expr=v901[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x0804834a} expr=v903[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x0804834b} expr=0x08048520[32] }
          flags = { size=4 }
    ip = defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=0x08048350[32]
0x8048350:push   0x080484b0<__libc_csu_init>
    registers:
        ax      = { defs={} expr=v901[32] }
        cx      = { defs={0x08048342,0x08048343} expr=(add[32] v905[32] 4[32]) }
        dx      = { defs={} expr=v903[32] }
        bx      = { defs={} expr=v904[32] }
        sp      = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048340} expr=0[32] }
        si      = { defs={0x08048342} expr=v948[32] }
        di      = { defs={} expr=v908[32] }
        es      = { defs={} expr=v909[16] }
        cs      = { defs={} expr=v910[16] }
        ss      = { defs={} expr=v911[16] }
        ds      = { defs={} expr=v912[16] }
        fs      = { defs={} expr=v913[16] }
        gs      = { defs={} expr=v914[16] }
        cf      = { defs={0x08048345} expr=0[1] }
        ?1      = { defs={} expr=v916[1] }
        pf      = { defs={0x08048342,0x08048345} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))))))) }
        ?3      = { defs={} expr=v918[1] }
        af      = { defs={0x08048345} expr=v949[1] }
        ?5      = { defs={} expr=v920[1] }
        zf      = { defs={0x08048342,0x08048345} expr=(zerop[1] (bv-and[32] (add[32] v905[32] 4[32]) -16[32])) }
        sf      = { defs={0x08048342,0x08048345} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32])) }
        tf      = { defs={} expr=v923[1] }
        if      = { defs={} expr=v924[1] }
        df      = { defs={} expr=v925[1] }
        of      = { defs={0x08048345} expr=0[1] }
        iopl0   = { defs={} expr=v927[1] }
        iopl1   = { defs={} expr=v928[1] }
        nt      = { defs={} expr=v929[1] }
        ?15     = { defs={} expr=v930[1] }
        rf      = { defs={} expr=v931[1] }
        vm      = { defs={} expr=v932[1] }
        ac      = { defs={} expr=v933[1] }
        vif     = { defs={} expr=v934[1] }
        vip     = { defs={} expr=v935[1] }
        id      = { defs={} expr=v936[1] }
        ?22     = { defs={} expr=v937[1] }
        ?23     = { defs={} expr=v938[1] }
        ?24     = { defs={} expr=v939[1] }
        ?25     = { defs={} expr=v940[1] }
        ?26     = { defs={} expr=v941[1] }
        ?27     = { defs={} expr=v942[1] }
        ?28     = { defs={} expr=v943[1] }
        ?29     = { defs={} expr=v944[1] }
        ?30     = { defs={} expr=v945[1] }
        ?31     = { defs={} expr=v946[1] }
        ip      = { defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=0x08048355[32] }
    memory:
        address = { defs={} expr=v905[32] }
          value = { defs={} expr=v948[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) }
          value = { defs={0x08048348} expr=v901[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x0804834a} expr=v903[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x0804834b} expr=0x08048520[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048350} expr=0x080484b0[32] }
          flags = { size=4 }
    ip = defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=0x08048355[32]
0x8048355:push   ecx
    registers:
        ax      = { defs={} expr=v901[32] }
        cx      = { defs={0x08048342,0x08048343} expr=(add[32] v905[32] 4[32]) }
        dx      = { defs={} expr=v903[32] }
        bx      = { defs={} expr=v904[32] }
        sp      = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048340} expr=0[32] }
        si      = { defs={0x08048342} expr=v948[32] }
        di      = { defs={} expr=v908[32] }
        es      = { defs={} expr=v909[16] }
        cs      = { defs={} expr=v910[16] }
        ss      = { defs={} expr=v911[16] }
        ds      = { defs={} expr=v912[16] }
        fs      = { defs={} expr=v913[16] }
        gs      = { defs={} expr=v914[16] }
        cf      = { defs={0x08048345} expr=0[1] }
        ?1      = { defs={} expr=v916[1] }
        pf      = { defs={0x08048342,0x08048345} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))))))) }
        ?3      = { defs={} expr=v918[1] }
        af      = { defs={0x08048345} expr=v949[1] }
        ?5      = { defs={} expr=v920[1] }
        zf      = { defs={0x08048342,0x08048345} expr=(zerop[1] (bv-and[32] (add[32] v905[32] 4[32]) -16[32])) }
        sf      = { defs={0x08048342,0x08048345} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32])) }
        tf      = { defs={} expr=v923[1] }
        if      = { defs={} expr=v924[1] }
        df      = { defs={} expr=v925[1] }
        of      = { defs={0x08048345} expr=0[1] }
        iopl0   = { defs={} expr=v927[1] }
        iopl1   = { defs={} expr=v928[1] }
        nt      = { defs={} expr=v929[1] }
        ?15     = { defs={} expr=v930[1] }
        rf      = { defs={} expr=v931[1] }
        vm      = { defs={} expr=v932[1] }
        ac      = { defs={} expr=v933[1] }
        vif     = { defs={} expr=v934[1] }
        vip     = { defs={} expr=v935[1] }
        id      = { defs={} expr=v936[1] }
        ?22     = { defs={} expr=v937[1] }
        ?23     = { defs={} expr=v938[1] }
        ?24     = { defs={} expr=v939[1] }
        ?25     = { defs={} expr=v940[1] }
        ?26     = { defs={} expr=v941[1] }
        ?27     = { defs={} expr=v942[1] }
        ?28     = { defs={} expr=v943[1] }
        ?29     = { defs={} expr=v944[1] }
        ?30     = { defs={} expr=v945[1] }
        ?31     = { defs={} expr=v946[1] }
        ip      = { defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=0x08048356[32] }
    memory:
        address = { defs={} expr=v905[32] }
          value = { defs={} expr=v948[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) }
          value = { defs={0x08048348} expr=v901[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x0804834a} expr=v903[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x0804834b} expr=0x08048520[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048350} expr=0x080484b0[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048343,0x08048355} expr=(add[32] v905[32] 4[32]) }
          flags = { size=4 }
    ip = defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=0x08048356[32]
0x8048356:push   esi
    registers:
        ax      = { defs={} expr=v901[32] }
        cx      = { defs={0x08048342,0x08048343} expr=(add[32] v905[32] 4[32]) }
        dx      = { defs={} expr=v903[32] }
        bx      = { defs={} expr=v904[32] }
        sp      = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048340} expr=0[32] }
        si      = { defs={0x08048342} expr=v948[32] }
        di      = { defs={} expr=v908[32] }
        es      = { defs={} expr=v909[16] }
        cs      = { defs={} expr=v910[16] }
        ss      = { defs={} expr=v911[16] }
        ds      = { defs={} expr=v912[16] }
        fs      = { defs={} expr=v913[16] }
        gs      = { defs={} expr=v914[16] }
        cf      = { defs={0x08048345} expr=0[1] }
        ?1      = { defs={} expr=v916[1] }
        pf      = { defs={0x08048342,0x08048345} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))))))) }
        ?3      = { defs={} expr=v918[1] }
        af      = { defs={0x08048345} expr=v949[1] }
        ?5      = { defs={} expr=v920[1] }
        zf      = { defs={0x08048342,0x08048345} expr=(zerop[1] (bv-and[32] (add[32] v905[32] 4[32]) -16[32])) }
        sf      = { defs={0x08048342,0x08048345} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32])) }
        tf      = { defs={} expr=v923[1] }
        if      = { defs={} expr=v924[1] }
        df      = { defs={} expr=v925[1] }
        of      = { defs={0x08048345} expr=0[1] }
        iopl0   = { defs={} expr=v927[1] }
        iopl1   = { defs={} expr=v928[1] }
        nt      = { defs={} expr=v929[1] }
        ?15     = { defs={} expr=v930[1] }
        rf      = { defs={} expr=v931[1] }
        vm      = { defs={} expr=v932[1] }
        ac      = { defs={} expr=v933[1] }
        vif     = { defs={} expr=v934[1] }
        vip     = { defs={} expr=v935[1] }
        id      = { defs={} expr=v936[1] }
        ?22     = { defs={} expr=v937[1] }
        ?23     = { defs={} expr=v938[1] }
        ?24     = { defs={} expr=v939[1] }
        ?25     = { defs={} expr=v940[1] }
        ?26     = { defs={} expr=v941[1] }
        ?27     = { defs={} expr=v942[1] }
        ?28     = { defs={} expr=v943[1] }
        ?29     = { defs={} expr=v944[1] }
        ?30     = { defs={} expr=v945[1] }
        ?31     = { defs={} expr=v946[1] }
        ip      = { defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356} expr=0x08048357[32] }
    memory:
        address = { defs={} expr=v905[32] }
          value = { defs={} expr=v948[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) }
          value = { defs={0x08048348} expr=v901[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x0804834a} expr=v903[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x0804834b} expr=0x08048520[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048350} expr=0x080484b0[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048343,0x08048355} expr=(add[32] v905[32] 4[32]) }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048356} expr=v948[32] }
          flags = { size=4 }
    ip = defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356} expr=0x08048357[32]
0x8048357:push   0x08048410<main>
    registers:
        ax      = { defs={} expr=v901[32] }
        cx      = { defs={0x08048342,0x08048343} expr=(add[32] v905[32] 4[32]) }
        dx      = { defs={} expr=v903[32] }
        bx      = { defs={} expr=v904[32] }
        sp      = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048340} expr=0[32] }
        si      = { defs={0x08048342} expr=v948[32] }
        di      = { defs={} expr=v908[32] }
        es      = { defs={} expr=v909[16] }
        cs      = { defs={} expr=v910[16] }
        ss      = { defs={} expr=v911[16] }
        ds      = { defs={} expr=v912[16] }
        fs      = { defs={} expr=v913[16] }
        gs      = { defs={} expr=v914[16] }
        cf      = { defs={0x08048345} expr=0[1] }
        ?1      = { defs={} expr=v916[1] }
        pf      = { defs={0x08048342,0x08048345} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))))))) }
        ?3      = { defs={} expr=v918[1] }
        af      = { defs={0x08048345} expr=v949[1] }
        ?5      = { defs={} expr=v920[1] }
        zf      = { defs={0x08048342,0x08048345} expr=(zerop[1] (bv-and[32] (add[32] v905[32] 4[32]) -16[32])) }
        sf      = { defs={0x08048342,0x08048345} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32])) }
        tf      = { defs={} expr=v923[1] }
        if      = { defs={} expr=v924[1] }
        df      = { defs={} expr=v925[1] }
        of      = { defs={0x08048345} expr=0[1] }
        iopl0   = { defs={} expr=v927[1] }
        iopl1   = { defs={} expr=v928[1] }
        nt      = { defs={} expr=v929[1] }
        ?15     = { defs={} expr=v930[1] }
        rf      = { defs={} expr=v931[1] }
        vm      = { defs={} expr=v932[1] }
        ac      = { defs={} expr=v933[1] }
        vif     = { defs={} expr=v934[1] }
        vip     = { defs={} expr=v935[1] }
        id      = { defs={} expr=v936[1] }
        ?22     = { defs={} expr=v937[1] }
        ?23     = { defs={} expr=v938[1] }
        ?24     = { defs={} expr=v939[1] }
        ?25     = { defs={} expr=v940[1] }
        ?26     = { defs={} expr=v941[1] }
        ?27     = { defs={} expr=v942[1] }
        ?28     = { defs={} expr=v943[1] }
        ?29     = { defs={} expr=v944[1] }
        ?30     = { defs={} expr=v945[1] }
        ?31     = { defs={} expr=v946[1] }
        ip      = { defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357} expr=0x0804835c[32] }
    memory:
        address = { defs={} expr=v905[32] }
          value = { defs={} expr=v948[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) }
          value = { defs={0x08048348} expr=v901[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x0804834a} expr=v903[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x0804834b} expr=0x08048520[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048350} expr=0x080484b0[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048343,0x08048355} expr=(add[32] v905[32] 4[32]) }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048356} expr=v948[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048357} expr=0x08048410[32] }
          flags = { size=4 }
    ip = defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357} expr=0x0804835c[32]
0x804835c:call   0x08048310<__libc_start_main@plt>
    registers:
        ax      = { defs={} expr=v901[32] }
        cx      = { defs={0x08048342,0x08048343} expr=(add[32] v905[32] 4[32]) }
        dx      = { defs={} expr=v903[32] }
        bx      = { defs={} expr=v904[32] }
        sp      = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048340} expr=0[32] }
        si      = { defs={0x08048342} expr=v948[32] }
        di      = { defs={} expr=v908[32] }
        es      = { defs={} expr=v909[16] }
        cs      = { defs={} expr=v910[16] }
        ss      = { defs={} expr=v911[16] }
        ds      = { defs={} expr=v912[16] }
        fs      = { defs={} expr=v913[16] }
        gs      = { defs={} expr=v914[16] }
        cf      = { defs={0x08048345} expr=0[1] }
        ?1      = { defs={} expr=v916[1] }
        pf      = { defs={0x08048342,0x08048345} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]))))))) }
        ?3      = { defs={} expr=v918[1] }
        af      = { defs={0x08048345} expr=v949[1] }
        ?5      = { defs={} expr=v920[1] }
        zf      = { defs={0x08048342,0x08048345} expr=(zerop[1] (bv-and[32] (add[32] v905[32] 4[32]) -16[32])) }
        sf      = { defs={0x08048342,0x08048345} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32])) }
        tf      = { defs={} expr=v923[1] }
        if      = { defs={} expr=v924[1] }
        df      = { defs={} expr=v925[1] }
        of      = { defs={0x08048345} expr=0[1] }
        iopl0   = { defs={} expr=v927[1] }
        iopl1   = { defs={} expr=v928[1] }
        nt      = { defs={} expr=v929[1] }
        ?15     = { defs={} expr=v930[1] }
        rf      = { defs={} expr=v931[1] }
        vm      = { defs={} expr=v932[1] }
        ac      = { defs={} expr=v933[1] }
        vif     = { defs={} expr=v934[1] }
        vip     = { defs={} expr=v935[1] }
        id      = { defs={} expr=v936[1] }
        ?22     = { defs={} expr=v937[1] }
        ?23     = { defs={} expr=v938[1] }
        ?24     = { defs={} expr=v939[1] }
        ?25     = { defs={} expr=v940[1] }
        ?26     = { defs={} expr=v941[1] }
        ?27     = { defs={} expr=v942[1] }
        ?28     = { defs={} expr=v943[1] }
        ?29     = { defs={} expr=v944[1] }
        ?30     = { defs={} expr=v945[1] }
        ?31     = { defs={} expr=v946[1] }
        ip      = { defs={0x0804835c} expr=0x08048310[32] }
    memory:
        address = { defs={} expr=v905[32] }
          value = { defs={} expr=v948[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) }
          value = { defs={0x08048348} expr=v901[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x0804834a} expr=v903[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x0804834b} expr=0x08048520[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048350} expr=0x080484b0[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048343,0x08048355} expr=(add[32] v905[32] 4[32]) }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048356} expr=v948[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048357} expr=0x08048410[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v905[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c} expr=0x08048361[32] }
          flags = { size=4 }
    ip = defs={0x0804835c} expr=0x08048310[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048361:hlt    
    registers:
        ax      = { defs={} expr=v998[32] }
        cx      = { defs={} expr=v999[32] }
        dx      = { defs={} expr=v1000[32] }
        bx      = { defs={} expr=v1001[32] }
        sp      = { defs={} expr=v1002[32] }
        bp      = { defs={} expr=v1003[32] }
        si      = { defs={} expr=v1004[32] }
        di      = { defs={} expr=v1005[32] }
        es      = { defs={} expr=v1006[16] }
        cs      = { defs={} expr=v1007[16] }
        ss      = { defs={} expr=v1008[16] }
        ds      = { defs={} expr=v1009[16] }
        fs      = { defs={} expr=v1010[16] }
        gs      = { defs={} expr=v1011[16] }
        cf      = { defs={} expr=v1012[1] }
        ?1      = { defs={} expr=v1013[1] }
        pf      = { defs={} expr=v1014[1] }
        ?3      = { defs={} expr=v1015[1] }
        af      = { defs={} expr=v1016[1] }
        ?5      = { defs={} expr=v1017[1] }
        zf      = { defs={} expr=v1018[1] }
        sf      = { defs={} expr=v1019[1] }
        tf      = { defs={} expr=v1020[1] }
        if      = { defs={} expr=v1021[1] }
        df      = { defs={} expr=v1022[1] }
        of      = { defs={} expr=v1023[1] }
        iopl0   = { defs={} expr=v1024[1] }
        iopl1   = { defs={} expr=v1025[1] }
        nt      = { defs={} expr=v1026[1] }
        ?15     = { defs={} expr=v1027[1] }
        rf      = { defs={} expr=v1028[1] }
        vm      = { defs={} expr=v1029[1] }
        ac      = { defs={} expr=v1030[1] }
        vif     = { defs={} expr=v1031[1] }
        vip     = { defs={} expr=v1032[1] }
        id      = { defs={} expr=v1033[1] }
        ?22     = { defs={} expr=v1034[1] }
        ?23     = { defs={} expr=v1035[1] }
        ?24     = { defs={} expr=v1036[1] }
        ?25     = { defs={} expr=v1037[1] }
        ?26     = { defs={} expr=v1038[1] }
        ?27     = { defs={} expr=v1039[1] }
        ?28     = { defs={} expr=v1040[1] }
        ?29     = { defs={} expr=v1041[1] }
        ?30     = { defs={} expr=v1042[1] }
        ?31     = { defs={} expr=v1043[1] }
        ip      = { defs={0x08048361} expr=0x08048361[32] }
    memory:
        (empty)
    ip = defs={0x08048361} expr=0x08048361[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048364:push   ebp
    registers:
        ax      = { defs={} expr=v1092[32] }
        cx      = { defs={} expr=v1093[32] }
        dx      = { defs={} expr=v1094[32] }
        bx      = { defs={} expr=v1095[32] }
        sp      = { defs={0x08048364} expr=(add[32] v1096[32] -4[32]) }
        bp      = { defs={} expr=v1097[32] }
        si      = { defs={} expr=v1098[32] }
        di      = { defs={} expr=v1099[32] }
        es      = { defs={} expr=v1100[16] }
        cs      = { defs={} expr=v1101[16] }
        ss      = { defs={} expr=v1102[16] }
        ds      = { defs={} expr=v1103[16] }
        fs      = { defs={} expr=v1104[16] }
        gs      = { defs={} expr=v1105[16] }
        cf      = { defs={} expr=v1106[1] }
        ?1      = { defs={} expr=v1107[1] }
        pf      = { defs={} expr=v1108[1] }
        ?3      = { defs={} expr=v1109[1] }
        af      = { defs={} expr=v1110[1] }
        ?5      = { defs={} expr=v1111[1] }
        zf      = { defs={} expr=v1112[1] }
        sf      = { defs={} expr=v1113[1] }
        tf      = { defs={} expr=v1114[1] }
        if      = { defs={} expr=v1115[1] }
        df      = { defs={} expr=v1116[1] }
        of      = { defs={} expr=v1117[1] }
        iopl0   = { defs={} expr=v1118[1] }
        iopl1   = { defs={} expr=v1119[1] }
        nt      = { defs={} expr=v1120[1] }
        ?15     = { defs={} expr=v1121[1] }
        rf      = { defs={} expr=v1122[1] }
        vm      = { defs={} expr=v1123[1] }
        ac      = { defs={} expr=v1124[1] }
        vif     = { defs={} expr=v1125[1] }
        vip     = { defs={} expr=v1126[1] }
        id      = { defs={} expr=v1127[1] }
        ?22     = { defs={} expr=v1128[1] }
        ?23     = { defs={} expr=v1129[1] }
        ?24     = { defs={} expr=v1130[1] }
        ?25     = { defs={} expr=v1131[1] }
        ?26     = { defs={} expr=v1132[1] }
        ?27     = { defs={} expr=v1133[1] }
        ?28     = { defs={} expr=v1134[1] }
        ?29     = { defs={} expr=v1135[1] }
        ?30     = { defs={} expr=v1136[1] }
        ?31     = { defs={} expr=v1137[1] }
        ip      = { defs={0x08048364} expr=0x08048365[32] }
    memory:
        address = { defs={0x08048364} expr=(add[32] v1096[32] -4[32]) }
          value = { defs={0x08048364} expr=v1097[32] }
          flags = { size=4 }
    ip = defs={0x08048364} expr=0x08048365[32]
0x8048365:mov    ebp, esp
    registers:
        ax      = { defs={} expr=v1092[32] }
        cx      = { defs={} expr=v1093[32] }
        dx      = { defs={} expr=v1094[32] }
        bx      = { defs={} expr=v1095[32] }
        sp      = { defs={0x08048364} expr=(add[32] v1096[32] -4[32]) }
        bp      = { defs={0x08048364,0x08048365} expr=(add[32] v1096[32] -4[32]) }
        si      = { defs={} expr=v1098[32] }
        di      = { defs={} expr=v1099[32] }
        es      = { defs={} expr=v1100[16] }
        cs      = { defs={} expr=v1101[16] }
        ss      = { defs={} expr=v1102[16] }
        ds      = { defs={} expr=v1103[16] }
        fs      = { defs={} expr=v1104[16] }
        gs      = { defs={} expr=v1105[16] }
        cf      = { defs={} expr=v1106[1] }
        ?1      = { defs={} expr=v1107[1] }
        pf      = { defs={} expr=v1108[1] }
        ?3      = { defs={} expr=v1109[1] }
        af      = { defs={} expr=v1110[1] }
        ?5      = { defs={} expr=v1111[1] }
        zf      = { defs={} expr=v1112[1] }
        sf      = { defs={} expr=v1113[1] }
        tf      = { defs={} expr=v1114[1] }
        if      = { defs={} expr=v1115[1] }
        df      = { defs={} expr=v1116[1] }
        of      = { defs={} expr=v1117[1] }
        iopl0   = { defs={} expr=v1118[1] }
        iopl1   = { defs={} expr=v1119[1] }
        nt      = { defs={} expr=v1120[1] }
        ?15     = { defs={} expr=v1121[1] }
        rf      = { defs={} expr=v1122[1] }
        vm      = { defs={} expr=v1123[1] }
        ac      = { defs={} expr=v1124[1] }
        vif     = { defs={} expr=v1125[1] }
        vip     = { defs={} expr=v1126[1] }
        id      = { defs={} expr=v1127[1] }
        ?22     = { defs={} expr=v1128[1] }
        ?23     = { defs={} expr=v1129[1] }
        ?24     = { defs={} expr=v1130[1] }
        ?25     = { defs={} expr=v1131[1] }
        ?26     = { defs={} expr=v1132[1] }
        ?27     = { defs={} expr=v1133[1] }
        ?28     = { defs={} expr=v1134[1] }
        ?29     = { defs={} expr=v1135[1] }
        ?30     = { defs={} expr=v1136[1] }
        ?31     = { defs={} expr=v1137[1] }
        ip      = { defs={0x08048364,0x08048365} expr=0x08048367[32] }
    memory:
        address = { defs={0x08048364} expr=(add[32] v1096[32] -4[32]) }
          value = { defs={0x08048364} expr=v1097[32] }
          flags = { size=4 }
    ip = defs={0x08048364,0x08048365} expr=0x08048367[32]
0x8048367:push   ebx
    registers:
        ax      = { defs={} expr=v1092[32] }
        cx      = { defs={} expr=v1093[32] }
        dx      = { defs={} expr=v1094[32] }
        bx      = { defs={} expr=v1095[32] }
        sp      = { defs={0x08048364,0x08048367} expr=(add[32] (add[32] v1096[32] -4[32]) -4[32]) }
        bp      = { defs={0x08048364,0x08048365} expr=(add[32] v1096[32] -4[32]) }
        si      = { defs={} expr=v1098[32] }
        di      = { defs={} expr=v1099[32] }
        es      = { defs={} expr=v1100[16] }
        cs      = { defs={} expr=v1101[16] }
        ss      = { defs={} expr=v1102[16] }
        ds      = { defs={} expr=v1103[16] }
        fs      = { defs={} expr=v1104[16] }
        gs      = { defs={} expr=v1105[16] }
        cf      = { defs={} expr=v1106[1] }
        ?1      = { defs={} expr=v1107[1] }
        pf      = { defs={} expr=v1108[1] }
        ?3      = { defs={} expr=v1109[1] }
        af      = { defs={} expr=v1110[1] }
        ?5      = { defs={} expr=v1111[1] }
        zf      = { defs={} expr=v1112[1] }
        sf      = { defs={} expr=v1113[1] }
        tf      = { defs={} expr=v1114[1] }
        if      = { defs={} expr=v1115[1] }
        df      = { defs={} expr=v1116[1] }
        of      = { defs={} expr=v1117[1] }
        iopl0   = { defs={} expr=v1118[1] }
        iopl1   = { defs={} expr=v1119[1] }
        nt      = { defs={} expr=v1120[1] }
        ?15     = { defs={} expr=v1121[1] }
        rf      = { defs={} expr=v1122[1] }
        vm      = { defs={} expr=v1123[1] }
        ac      = { defs={} expr=v1124[1] }
        vif     = { defs={} expr=v1125[1] }
        vip     = { defs={} expr=v1126[1] }
        id      = { defs={} expr=v1127[1] }
        ?22     = { defs={} expr=v1128[1] }
        ?23     = { defs={} expr=v1129[1] }
        ?24     = { defs={} expr=v1130[1] }
        ?25     = { defs={} expr=v1131[1] }
        ?26     = { defs={} expr=v1132[1] }
        ?27     = { defs={} expr=v1133[1] }
        ?28     = { defs={} expr=v1134[1] }
        ?29     = { defs={} expr=v1135[1] }
        ?30     = { defs={} expr=v1136[1] }
        ?31     = { defs={} expr=v1137[1] }
        ip      = { defs={0x08048364,0x08048365,0x08048367} expr=0x08048368[32] }
    memory:
        address = { defs={0x08048364} expr=(add[32] v1096[32] -4[32]) }
          value = { defs={0x08048364} expr=v1097[32] }
          flags = { size=4 }
        address = { defs={0x08048364,0x08048367} expr=(add[32] (add[32] v1096[32] -4[32]) -4[32]) }
          value = { defs={0x08048367} expr=v1095[32] }
          flags = { size=4 }
    ip = defs={0x08048364,0x08048365,0x08048367} expr=0x08048368[32]
0x8048368:push   ecx
    registers:
        ax      = { defs={} expr=v1092[32] }
        cx      = { defs={} expr=v1093[32] }
        dx      = { defs={} expr=v1094[32] }
        bx      = { defs={} expr=v1095[32] }
        sp      = { defs={0x08048364,0x08048367,0x08048368} expr=(add[32] (add[32] (add[32] v1096[32] -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048364,0x08048365} expr=(add[32] v1096[32] -4[32]) }
        si      = { defs={} expr=v1098[32] }
        di      = { defs={} expr=v1099[32] }
        es      = { defs={} expr=v1100[16] }
        cs      = { defs={} expr=v1101[16] }
        ss      = { defs={} expr=v1102[16] }
        ds      = { defs={} expr=v1103[16] }
        fs      = { defs={} expr=v1104[16] }
        gs      = { defs={} expr=v1105[16] }
        cf      = { defs={} expr=v1106[1] }
        ?1      = { defs={} expr=v1107[1] }
        pf      = { defs={} expr=v1108[1] }
        ?3      = { defs={} expr=v1109[1] }
        af      = { defs={} expr=v1110[1] }
        ?5      = { defs={} expr=v1111[1] }
        zf      = { defs={} expr=v1112[1] }
        sf      = { defs={} expr=v1113[1] }
        tf      = { defs={} expr=v1114[1] }
        if      = { defs={} expr=v1115[1] }
        df      = { defs={} expr=v1116[1] }
        of      = { defs={} expr=v1117[1] }
        iopl0   = { defs={} expr=v1118[1] }
        iopl1   = { defs={} expr=v1119[1] }
        nt      = { defs={} expr=v1120[1] }
        ?15     = { defs={} expr=v1121[1] }
        rf      = { defs={} expr=v1122[1] }
        vm      = { defs={} expr=v1123[1] }
        ac      = { defs={} expr=v1124[1] }
        vif     = { defs={} expr=v1125[1] }
        vip     = { defs={} expr=v1126[1] }
        id      = { defs={} expr=v1127[1] }
        ?22     = { defs={} expr=v1128[1] }
        ?23     = { defs={} expr=v1129[1] }
        ?24     = { defs={} expr=v1130[1] }
        ?25     = { defs={} expr=v1131[1] }
        ?26     = { defs={} expr=v1132[1] }
        ?27     = { defs={} expr=v1133[1] }
        ?28     = { defs={} expr=v1134[1] }
        ?29     = { defs={} expr=v1135[1] }
        ?30     = { defs={} expr=v1136[1] }
        ?31     = { defs={} expr=v1137[1] }
        ip      = { defs={0x08048364,0x08048365,0x08048367,0x08048368} expr=0x08048369[32] }
    memory:
        address = { defs={0x08048364} expr=(add[32] v1096[32] -4[32]) }
          value = { defs={0x08048364} expr=v1097[32] }
          flags = { size=4 }
        address = { defs={0x08048364,0x08048367} expr=(add[32] (add[32] v1096[32] -4[32]) -4[32]) }
          value = { defs={0x08048367} expr=v1095[32] }
          flags = { size=4 }
        address = { defs={0x08048364,0x08048367,0x08048368} expr=(add[32] (add[32] (add[32] v1096[32] -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048368} expr=v1093[32] }
          flags = { size=4 }
    ip = defs={0x08048364,0x08048365,0x08048367,0x08048368} expr=0x08048369[32]
0x8048369:call   0x0804836e<<Insn>>
    registers:
        ax      = { defs={} expr=v1092[32] }
        cx      = { defs={} expr=v1093[32] }
        dx      = { defs={} expr=v1094[32] }
        bx      = { defs={} expr=v1095[32] }
        sp      = { defs={0x08048364,0x08048367,0x08048368,0x08048369} expr=(add[32] (add[32] (add[32] (add[32] v1096[32] -4[32]) -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048364,0x08048365} expr=(add[32] v1096[32] -4[32]) }
        si      = { defs={} expr=v1098[32] }
        di      = { defs={} expr=v1099[32] }
        es      = { defs={} expr=v1100[16] }
        cs      = { defs={} expr=v1101[16] }
        ss      = { defs={} expr=v1102[16] }
        ds      = { defs={} expr=v1103[16] }
        fs      = { defs={} expr=v1104[16] }
        gs      = { defs={} expr=v1105[16] }
        cf      = { defs={} expr=v1106[1] }
        ?1      = { defs={} expr=v1107[1] }
        pf      = { defs={} expr=v1108[1] }
        ?3      = { defs={} expr=v1109[1] }
        af      = { defs={} expr=v1110[1] }
        ?5      = { defs={} expr=v1111[1] }
        zf      = { defs={} expr=v1112[1] }
        sf      = { defs={} expr=v1113[1] }
        tf      = { defs={} expr=v1114[1] }
        if      = { defs={} expr=v1115[1] }
        df      = { defs={} expr=v1116[1] }
        of      = { defs={} expr=v1117[1] }
        iopl0   = { defs={} expr=v1118[1] }
        iopl1   = { defs={} expr=v1119[1] }
        nt      = { defs={} expr=v1120[1] }
        ?15     = { defs={} expr=v1121[1] }
        rf      = { defs={} expr=v1122[1] }
        vm      = { defs={} expr=v1123[1] }
        ac      = { defs={} expr=v1124[1] }
        vif     = { defs={} expr=v1125[1] }
        vip     = { defs={} expr=v1126[1] }
        id      = { defs={} expr=v1127[1] }
        ?22     = { defs={} expr=v1128[1] }
        ?23     = { defs={} expr=v1129[1] }
        ?24     = { defs={} expr=v1130[1] }
        ?25     = { defs={} expr=v1131[1] }
        ?26     = { defs={} expr=v1132[1] }
        ?27     = { defs={} expr=v1133[1] }
        ?28     = { defs={} expr=v1134[1] }
        ?29     = { defs={} expr=v1135[1] }
        ?30     = { defs={} expr=v1136[1] }
        ?31     = { defs={} expr=v1137[1] }
        ip      = { defs={0x08048369} expr=0x0804836e[32] }
    memory:
        address = { defs={0x08048364} expr=(add[32] v1096[32] -4[32]) }
          value = { defs={0x08048364} expr=v1097[32] }
          flags = { size=4 }
        address = { defs={0x08048364,0x08048367} expr=(add[32] (add[32] v1096[32] -4[32]) -4[32]) }
          value = { defs={0x08048367} expr=v1095[32] }
          flags = { size=4 }
        address = { defs={0x08048364,0x08048367,0x08048368} expr=(add[32] (add[32] (add[32] v1096[32] -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048368} expr=v1093[32] }
          flags = { size=4 }
        address = { defs={0x08048364,0x08048367,0x08048368,0x08048369} expr=(add[32] (add[32] (add[32] (add[32] v1096[32] -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048364,0x08048365,0x08048367,0x08048368,0x08048369} expr=0x0804836e[32] }
          flags = { size=4 }
    ip = defs={0x08048369} expr=0x0804836e[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804836e:pop    ebx
    registers:
        ax      = { defs={} expr=v1186[32] }
        cx      = { defs={} expr=v1187[32] }
        dx      = { defs={} expr=v1188[32] }
        bx      = { defs={0x0804836e} expr=v1232[32] }
        sp      = { defs={0x0804836e} expr=(add[32] v1190[32] 4[32]) }
        bp      = { defs={} expr=v1191[32] }
        si      = { defs={} expr=v1192[32] }
        di      = { defs={} expr=v1193[32] }
        es      = { defs={} expr=v1194[16] }
        cs      = { defs={} expr=v1195[16] }
        ss      = { defs={} expr=v1196[16] }
        ds      = { defs={} expr=v1197[16] }
        fs      = { defs={} expr=v1198[16] }
        gs      = { defs={} expr=v1199[16] }
        cf      = { defs={} expr=v1200[1] }
        ?1      = { defs={} expr=v1201[1] }
        pf      = { defs={} expr=v1202[1] }
        ?3      = { defs={} expr=v1203[1] }
        af      = { defs={} expr=v1204[1] }
        ?5      = { defs={} expr=v1205[1] }
        zf      = { defs={} expr=v1206[1] }
        sf      = { defs={} expr=v1207[1] }
        tf      = { defs={} expr=v1208[1] }
        if      = { defs={} expr=v1209[1] }
        df      = { defs={} expr=v1210[1] }
        of      = { defs={} expr=v1211[1] }
        iopl0   = { defs={} expr=v1212[1] }
        iopl1   = { defs={} expr=v1213[1] }
        nt      = { defs={} expr=v1214[1] }
        ?15     = { defs={} expr=v1215[1] }
        rf      = { defs={} expr=v1216[1] }
        vm      = { defs={} expr=v1217[1] }
        ac      = { defs={} expr=v1218[1] }
        vif     = { defs={} expr=v1219[1] }
        vip     = { defs={} expr=v1220[1] }
        id      = { defs={} expr=v1221[1] }
        ?22     = { defs={} expr=v1222[1] }
        ?23     = { defs={} expr=v1223[1] }
        ?24     = { defs={} expr=v1224[1] }
        ?25     = { defs={} expr=v1225[1] }
        ?26     = { defs={} expr=v1226[1] }
        ?27     = { defs={} expr=v1227[1] }
        ?28     = { defs={} expr=v1228[1] }
        ?29     = { defs={} expr=v1229[1] }
        ?30     = { defs={} expr=v1230[1] }
        ?31     = { defs={} expr=v1231[1] }
        ip      = { defs={0x0804836e} expr=0x0804836f[32] }
    memory:
        address = { defs={} expr=v1190[32] }
          value = { defs={} expr=v1232[32] }
          flags = { size=4; read-only }
    ip = defs={0x0804836e} expr=0x0804836f[32]
0x804836f:add    ebx, 0x0000135a
    registers:
        ax      = { defs={} expr=v1186[32] }
        cx      = { defs={} expr=v1187[32] }
        dx      = { defs={} expr=v1188[32] }
        bx      = { defs={0x0804836e,0x0804836f} expr=(add[32] v1232[32] 4954[32]) }
        sp      = { defs={0x0804836e} expr=(add[32] v1190[32] 4[32]) }
        bp      = { defs={} expr=v1191[32] }
        si      = { defs={} expr=v1192[32] }
        di      = { defs={} expr=v1193[32] }
        es      = { defs={} expr=v1194[16] }
        cs      = { defs={} expr=v1195[16] }
        ss      = { defs={} expr=v1196[16] }
        ds      = { defs={} expr=v1197[16] }
        fs      = { defs={} expr=v1198[16] }
        gs      = { defs={} expr=v1199[16] }
        cf      = { defs={0x0804836e,0x0804836f} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1232[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v1232[32]) 4954[33]))))) }
        ?1      = { defs={} expr=v1201[1] }
        pf      = { defs={0x0804836e,0x0804836f} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v1232[32] 4954[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v1232[32] 4954[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v1232[32] 4954[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v1232[32] 4954[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v1232[32] 4954[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v1232[32] 4954[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v1232[32] 4954[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v1232[32] 4954[32]))))))) }
        ?3      = { defs={} expr=v1203[1] }
        af      = { defs={0x0804836e,0x0804836f} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1232[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v1232[32]) 4954[33]))))) }
        ?5      = { defs={} expr=v1205[1] }
        zf      = { defs={0x0804836e,0x0804836f} expr=(zerop[1] (add[32] v1232[32] 4954[32])) }
        sf      = { defs={0x0804836e,0x0804836f} expr=(extract[1] 31[32] 32[32] (add[32] v1232[32] 4954[32])) }
        tf      = { defs={} expr=v1208[1] }
        if      = { defs={} expr=v1209[1] }
        df      = { defs={} expr=v1210[1] }
        of      = { defs={0x0804836e,0x0804836f} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1232[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v1232[32]) 4954[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1232[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v1232[32]) 4954[33])))))) }
        iopl0   = { defs={} expr=v1212[1] }
        iopl1   = { defs={} expr=v1213[1] }
        nt      = { defs={} expr=v1214[1] }
        ?15     = { defs={} expr=v1215[1] }
        rf      = { defs={} expr=v1216[1] }
        vm      = { defs={} expr=v1217[1] }
        ac      = { defs={} expr=v1218[1] }
        vif     = { defs={} expr=v1219[1] }
        vip     = { defs={} expr=v1220[1] }
        id      = { defs={} expr=v1221[1] }
        ?22     = { defs={} expr=v1222[1] }
        ?23     = { defs={} expr=v1223[1] }
        ?24     = { defs={} expr=v1224[1] }
        ?25     = { defs={} expr=v1225[1] }
        ?26     = { defs={} expr=v1226[1] }
        ?27     = { defs={} expr=v1227[1] }
        ?28     = { defs={} expr=v1228[1] }
        ?29     = { defs={} expr=v1229[1] }
        ?30     = { defs={} expr=v1230[1] }
        ?31     = { defs={} expr=v1231[1] }
        ip      = { defs={0x0804836e,0x0804836f} expr=0x08048375[32] }
    memory:
        address = { defs={} expr=v1190[32] }
          value = { defs={} expr=v1232[32] }
          flags = { size=4; read-only }
    ip = defs={0x0804836e,0x0804836f} expr=0x08048375[32]
0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]
    registers:
        ax      = { defs={} expr=v1186[32] }
        cx      = { defs={} expr=v1187[32] }
        dx      = { defs={0x08048375} expr=v1233[32] }
        bx      = { defs={0x0804836e,0x0804836f} expr=(add[32] v1232[32] 4954[32]) }
        sp      = { defs={0x0804836e} expr=(add[32] v1190[32] 4[32]) }
        bp      = { defs={} expr=v1191[32] }
        si      = { defs={} expr=v1192[32] }
        di      = { defs={} expr=v1193[32] }
        es      = { defs={} expr=v1194[16] }
        cs      = { defs={} expr=v1195[16] }
        ss      = { defs={} expr=v1196[16] }
        ds      = { defs={} expr=v1197[16] }
        fs      = { defs={} expr=v1198[16] }
        gs      = { defs={} expr=v1199[16] }
        cf      = { defs={0x0804836e,0x0804836f} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1232[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v1232[32]) 4954[33]))))) }
        ?1      = { defs={} expr=v1201[1] }
        pf      = { defs={0x0804836e,0x0804836f} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v1232[32] 4954[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v1232[32] 4954[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v1232[32] 4954[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v1232[32] 4954[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v1232[32] 4954[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v1232[32] 4954[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v1232[32] 4954[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v1232[32] 4954[32]))))))) }
        ?3      = { defs={} expr=v1203[1] }
        af      = { defs={0x0804836e,0x0804836f} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1232[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v1232[32]) 4954[33]))))) }
        ?5      = { defs={} expr=v1205[1] }
        zf      = { defs={0x0804836e,0x0804836f} expr=(zerop[1] (add[32] v1232[32] 4954[32])) }
        sf      = { defs={0x0804836e,0x0804836f} expr=(extract[1] 31[32] 32[32] (add[32] v1232[32] 4954[32])) }
        tf      = { defs={} expr=v1208[1] }
        if      = { defs={} expr=v1209[1] }
        df      = { defs={} expr=v1210[1] }
        of      = { defs={0x0804836e,0x0804836f} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1232[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v1232[32]) 4954[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1232[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v1232[32]) 4954[33])))))) }
        iopl0   = { defs={} expr=v1212[1] }
        iopl1   = { defs={} expr=v1213[1] }
        nt      = { defs={} expr=v1214[1] }
        ?15     = { defs={} expr=v1215[1] }
        rf      = { defs={} expr=v1216[1] }
        vm      = { defs={} expr=v1217[1] }
        ac      = { defs={} expr=v1218[1] }
        vif     = { defs={} expr=v1219[1] }
        vip     = { defs={} expr=v1220[1] }
        id      = { defs={} expr=v1221[1] }
        ?22     = { defs={} expr=v1222[1] }
        ?23     = { defs={} expr=v1223[1] }
        ?24     = { defs={} expr=v1224[1] }
        ?25     = { defs={} expr=v1225[1] }
        ?26     = { defs={} expr=v1226[1] }
        ?27     = { defs={} expr=v1227[1] }
        ?28     = { defs={} expr=v1228[1] }
        ?29     = { defs={} expr=v1229[1] }
        ?30     = { defs={} expr=v1230[1] }
        ?31     = { defs={} expr=v1231[1] }
        ip      = { defs={0x0804836e,0x0804836f,0x08048375} expr=0x0804837b[32] }
    memory:
        address = { defs={} expr=v1190[32] }
          value = { defs={} expr=v1232[32] }
          flags = { size=4; read-only }
        address = { defs={0x0804836e,0x0804836f,0x08048375} expr=(add[32] (add[32] v1232[32] 4954[32]) -4[32]) }
          value = { defs={} expr=v1233[32] }
          flags = { size=4; read-only }
    ip = defs={0x0804836e,0x0804836f,0x08048375} expr=0x0804837b[32]
0x804837b:test   edx, edx
    registers:
        ax      = { defs={} expr=v1186[32] }
        cx      = { defs={} expr=v1187[32] }
        dx      = { defs={0x08048375} expr=v1233[32] }
        bx      = { defs={0x0804836e,0x0804836f} expr=(add[32] v1232[32] 4954[32]) }
        sp      = { defs={0x0804836e} expr=(add[32] v1190[32] 4[32]) }
        bp      = { defs={} expr=v1191[32] }
        si      = { defs={} expr=v1192[32] }
        di      = { defs={} expr=v1193[32] }
        es      = { defs={} expr=v1194[16] }
        cs      = { defs={} expr=v1195[16] }
        ss      = { defs={} expr=v1196[16] }
        ds      = { defs={} expr=v1197[16] }
        fs      = { defs={} expr=v1198[16] }
        gs      = { defs={} expr=v1199[16] }
        cf      = { defs={0x0804837b} expr=0[1] }
        ?1      = { defs={} expr=v1201[1] }
        pf      = { defs={0x08048375,0x0804837b} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v1233[32] v1233[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v1233[32] v1233[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v1233[32] v1233[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v1233[32] v1233[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v1233[32] v1233[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v1233[32] v1233[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v1233[32] v1233[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v1233[32] v1233[32]))))))) }
        ?3      = { defs={} expr=v1203[1] }
        af      = { defs={0x0804837b} expr=v1234[1] }
        ?5      = { defs={} expr=v1205[1] }
        zf      = { defs={0x08048375,0x0804837b} expr=(zerop[1] (bv-and[32] v1233[32] v1233[32])) }
        sf      = { defs={0x08048375,0x0804837b} expr=(extract[1] 31[32] 32[32] (bv-and[32] v1233[32] v1233[32])) }
        tf      = { defs={} expr=v1208[1] }
        if      = { defs={} expr=v1209[1] }
        df      = { defs={} expr=v1210[1] }
        of      = { defs={0x0804837b} expr=0[1] }
        iopl0   = { defs={} expr=v1212[1] }
        iopl1   = { defs={} expr=v1213[1] }
        nt      = { defs={} expr=v1214[1] }
        ?15     = { defs={} expr=v1215[1] }
        rf      = { defs={} expr=v1216[1] }
        vm      = { defs={} expr=v1217[1] }
        ac      = { defs={} expr=v1218[1] }
        vif     = { defs={} expr=v1219[1] }
        vip     = { defs={} expr=v1220[1] }
        id      = { defs={} expr=v1221[1] }
        ?22     = { defs={} expr=v1222[1] }
        ?23     = { defs={} expr=v1223[1] }
        ?24     = { defs={} expr=v1224[1] }
        ?25     = { defs={} expr=v1225[1] }
        ?26     = { defs={} expr=v1226[1] }
        ?27     = { defs={} expr=v1227[1] }
        ?28     = { defs={} expr=v1228[1] }
        ?29     = { defs={} expr=v1229[1] }
        ?30     = { defs={} expr=v1230[1] }
        ?31     = { defs={} expr=v1231[1] }
        ip      = { defs={0x0804836e,0x0804836f,0x08048375,0x0804837b} expr=0x0804837d[32] }
    memory:
        address = { defs={} expr=v1190[32] }
          value = { defs={} expr=v1232[32] }
          flags = { size=4; read-only }
        address = { defs={0x0804836e,0x0804836f,0x08048375} expr=(add[32] (add[32] v1232[32] 4954[32]) -4[32]) }
          value = { defs={} expr=v1233[32] }
          flags = { size=4; read-only }
    ip = defs={0x0804836e,0x0804836f,0x08048375,0x0804837b} expr=0x0804837d[32]
0x804837d:je     0x08048384<<Insn>>
    registers:
        ax      = { defs={} expr=v1186[32] }
        cx      = { defs={} expr=v1187[32] }
        dx      = { defs={0x08048375} expr=v1233[32] }
        bx      = { defs={0x0804836e,0x0804836f} expr=(add[32] v1232[32] 4954[32]) }
        sp      = { defs={0x0804836e} expr=(add[32] v1190[32] 4[32]) }
        bp      = { defs={} expr=v1191[32] }
        si      = { defs={} expr=v1192[32] }
        di      = { defs={} expr=v1193[32] }
        es      = { defs={} expr=v1194[16] }
        cs      = { defs={} expr=v1195[16] }
        ss      = { defs={} expr=v1196[16] }
        ds      = { defs={} expr=v1197[16] }
        fs      = { defs={} expr=v1198[16] }
        gs      = { defs={} expr=v1199[16] }
        cf      = { defs={0x0804837b} expr=0[1] }
        ?1      = { defs={} expr=v1201[1] }
        pf      = { defs={0x08048375,0x0804837b} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v1233[32] v1233[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v1233[32] v1233[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v1233[32] v1233[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v1233[32] v1233[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v1233[32] v1233[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v1233[32] v1233[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v1233[32] v1233[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v1233[32] v1233[32]))))))) }
        ?3      = { defs={} expr=v1203[1] }
        af      = { defs={0x0804837b} expr=v1234[1] }
        ?5      = { defs={} expr=v1205[1] }
        zf      = { defs={0x08048375,0x0804837b} expr=(zerop[1] (bv-and[32] v1233[32] v1233[32])) }
        sf      = { defs={0x08048375,0x0804837b} expr=(extract[1] 31[32] 32[32] (bv-and[32] v1233[32] v1233[32])) }
        tf      = { defs={} expr=v1208[1] }
        if      = { defs={} expr=v1209[1] }
        df      = { defs={} expr=v1210[1] }
        of      = { defs={0x0804837b} expr=0[1] }
        iopl0   = { defs={} expr=v1212[1] }
        iopl1   = { defs={} expr=v1213[1] }
        nt      = { defs={} expr=v1214[1] }
        ?15     = { defs={} expr=v1215[1] }
        rf      = { defs={} expr=v1216[1] }
        vm      = { defs={} expr=v1217[1] }
        ac      = { defs={} expr=v1218[1] }
        vif     = { defs={} expr=v1219[1] }
        vip     = { defs={} expr=v1220[1] }
        id      = { defs={} expr=v1221[1] }
        ?22     = { defs={} expr=v1222[1] }
        ?23     = { defs={} expr=v1223[1] }
        ?24     = { defs={} expr=v1224[1] }
        ?25     = { defs={} expr=v1225[1] }
        ?26     = { defs={} expr=v1226[1] }
        ?27     = { defs={} expr=v1227[1] }
        ?28     = { defs={} expr=v1228[1] }
        ?29     = { defs={} expr=v1229[1] }
        ?30     = { defs={} expr=v1230[1] }
        ?31     = { defs={} expr=v1231[1] }
        ip      = { defs={0x0804836e,0x0804836f,0x08048375,0x0804837b,0x0804837d} expr=(ite[32] (zerop[1] (bv-and[32] v1233[32] v1233[32])) 0x08048384[32] 0x0804837f[32]) }
    memory:
        address = { defs={} expr=v1190[32] }
          value = { defs={} expr=v1232[32] }
          flags = { size=4; read-only }
        address = { defs={0x0804836e,0x0804836f,0x08048375} expr=(add[32] (add[32] v1232[32] 4954[32]) -4[32]) }
          value = { defs={} expr=v1233[32] }
          flags = { size=4; read-only }
    ip = defs={0x0804836e,0x0804836f,0x08048375,0x0804837b,0x0804837d} expr=(ite[32] (zerop[1] (bv-and[32] v1233[32] v1233[32])) 0x08048384[32] 0x0804837f[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804837f:call   0x08048330<__gmon_start__@plt>
    registers:
        ax      = { defs={} expr=v1283[32] }
        cx      = { defs={} expr=v1284[32] }
        dx      = { defs={} expr=v1285[32] }
        bx      = { defs={} expr=v1286[32] }
        sp      = { defs={0x0804837f} expr=(add[32] v1287[32] -4[32]) }
        bp      = { defs={} expr=v1288[32] }
        si      = { defs={} expr=v1289[32] }
        di      = { defs={} expr=v1290[32] }
        es      = { defs={} expr=v1291[16] }
        cs      = { defs={} expr=v1292[16] }
        ss      = { defs={} expr=v1293[16] }
        ds      = { defs={} expr=v1294[16] }
        fs      = { defs={} expr=v1295[16] }
        gs      = { defs={} expr=v1296[16] }
        cf      = { defs={} expr=v1297[1] }
        ?1      = { defs={} expr=v1298[1] }
        pf      = { defs={} expr=v1299[1] }
        ?3      = { defs={} expr=v1300[1] }
        af      = { defs={} expr=v1301[1] }
        ?5      = { defs={} expr=v1302[1] }
        zf      = { defs={} expr=v1303[1] }
        sf      = { defs={} expr=v1304[1] }
        tf      = { defs={} expr=v1305[1] }
        if      = { defs={} expr=v1306[1] }
        df      = { defs={} expr=v1307[1] }
        of      = { defs={} expr=v1308[1] }
        iopl0   = { defs={} expr=v1309[1] }
        iopl1   = { defs={} expr=v1310[1] }
        nt      = { defs={} expr=v1311[1] }
        ?15     = { defs={} expr=v1312[1] }
        rf      = { defs={} expr=v1313[1] }
        vm      = { defs={} expr=v1314[1] }
        ac      = { defs={} expr=v1315[1] }
        vif     = { defs={} expr=v1316[1] }
        vip     = { defs={} expr=v1317[1] }
        id      = { defs={} expr=v1318[1] }
        ?22     = { defs={} expr=v1319[1] }
        ?23     = { defs={} expr=v1320[1] }
        ?24     = { defs={} expr=v1321[1] }
        ?25     = { defs={} expr=v1322[1] }
        ?26     = { defs={} expr=v1323[1] }
        ?27     = { defs={} expr=v1324[1] }
        ?28     = { defs={} expr=v1325[1] }
        ?29     = { defs={} expr=v1326[1] }
        ?30     = { defs={} expr=v1327[1] }
        ?31     = { defs={} expr=v1328[1] }
        ip      = { defs={0x0804837f} expr=0x08048330[32] }
    memory:
        address = { defs={0x0804837f} expr=(add[32] v1287[32] -4[32]) }
          value = { defs={0x0804837f} expr=0x08048384[32] }
          flags = { size=4 }
    ip = defs={0x0804837f} expr=0x08048330[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048384:pop    eax
    registers:
        ax      = { defs={0x08048384} expr=v1423[32] }
        cx      = { defs={} expr=v1378[32] }
        dx      = { defs={} expr=v1379[32] }
        bx      = { defs={} expr=v1380[32] }
        sp      = { defs={0x08048384} expr=(add[32] v1381[32] 4[32]) }
        bp      = { defs={} expr=v1382[32] }
        si      = { defs={} expr=v1383[32] }
        di      = { defs={} expr=v1384[32] }
        es      = { defs={} expr=v1385[16] }
        cs      = { defs={} expr=v1386[16] }
        ss      = { defs={} expr=v1387[16] }
        ds      = { defs={} expr=v1388[16] }
        fs      = { defs={} expr=v1389[16] }
        gs      = { defs={} expr=v1390[16] }
        cf      = { defs={} expr=v1391[1] }
        ?1      = { defs={} expr=v1392[1] }
        pf      = { defs={} expr=v1393[1] }
        ?3      = { defs={} expr=v1394[1] }
        af      = { defs={} expr=v1395[1] }
        ?5      = { defs={} expr=v1396[1] }
        zf      = { defs={} expr=v1397[1] }
        sf      = { defs={} expr=v1398[1] }
        tf      = { defs={} expr=v1399[1] }
        if      = { defs={} expr=v1400[1] }
        df      = { defs={} expr=v1401[1] }
        of      = { defs={} expr=v1402[1] }
        iopl0   = { defs={} expr=v1403[1] }
        iopl1   = { defs={} expr=v1404[1] }
        nt      = { defs={} expr=v1405[1] }
        ?15     = { defs={} expr=v1406[1] }
        rf      = { defs={} expr=v1407[1] }
        vm      = { defs={} expr=v1408[1] }
        ac      = { defs={} expr=v1409[1] }
        vif     = { defs={} expr=v1410[1] }
        vip     = { defs={} expr=v1411[1] }
        id      = { defs={} expr=v1412[1] }
        ?22     = { defs={} expr=v1413[1] }
        ?23     = { defs={} expr=v1414[1] }
        ?24     = { defs={} expr=v1415[1] }
        ?25     = { defs={} expr=v1416[1] }
        ?26     = { defs={} expr=v1417[1] }
        ?27     = { defs={} expr=v1418[1] }
        ?28     = { defs={} expr=v1419[1] }
        ?29     = { defs={} expr=v1420[1] }
        ?30     = { defs={} expr=v1421[1] }
        ?31     = { defs={} expr=v1422[1] }
        ip      = { defs={0x08048384} expr=0x08048385[32] }
    memory:
        address = { defs={} expr=v1381[32] }
          value = { defs={} expr=v1423[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048384} expr=0x08048385[32]
0x8048385:pop    ebx
    registers:
        ax      = { defs={0x08048384} expr=v1423[32] }
        cx      = { defs={} expr=v1378[32] }
        dx      = { defs={} expr=v1379[32] }
        bx      = { defs={0x08048385} expr=v1424[32] }
        sp      = { defs={0x08048384,0x08048385} expr=(add[32] (add[32] v1381[32] 4[32]) 4[32]) }
        bp      = { defs={} expr=v1382[32] }
        si      = { defs={} expr=v1383[32] }
        di      = { defs={} expr=v1384[32] }
        es      = { defs={} expr=v1385[16] }
        cs      = { defs={} expr=v1386[16] }
        ss      = { defs={} expr=v1387[16] }
        ds      = { defs={} expr=v1388[16] }
        fs      = { defs={} expr=v1389[16] }
        gs      = { defs={} expr=v1390[16] }
        cf      = { defs={} expr=v1391[1] }
        ?1      = { defs={} expr=v1392[1] }
        pf      = { defs={} expr=v1393[1] }
        ?3      = { defs={} expr=v1394[1] }
        af      = { defs={} expr=v1395[1] }
        ?5      = { defs={} expr=v1396[1] }
        zf      = { defs={} expr=v1397[1] }
        sf      = { defs={} expr=v1398[1] }
        tf      = { defs={} expr=v1399[1] }
        if      = { defs={} expr=v1400[1] }
        df      = { defs={} expr=v1401[1] }
        of      = { defs={} expr=v1402[1] }
        iopl0   = { defs={} expr=v1403[1] }
        iopl1   = { defs={} expr=v1404[1] }
        nt      = { defs={} expr=v1405[1] }
        ?15     = { defs={} expr=v1406[1] }
        rf      = { defs={} expr=v1407[1] }
        vm      = { defs={} expr=v1408[1] }
        ac      = { defs={} expr=v1409[1] }
        vif     = { defs={} expr=v1410[1] }
        vip     = { defs={} expr=v1411[1] }
        id      = { defs={} expr=v1412[1] }
        ?22     = { defs={} expr=v1413[1] }
        ?23     = { defs={} expr=v1414[1] }
        ?24     = { defs={} expr=v1415[1] }
        ?25     = { defs={} expr=v1416[1] }
        ?26     = { defs={} expr=v1417[1] }
        ?27     = { defs={} expr=v1418[1] }
        ?28     = { defs={} expr=v1419[1] }
        ?29     = { defs={} expr=v1420[1] }
        ?30     = { defs={} expr=v1421[1] }
        ?31     = { defs={} expr=v1422[1] }
        ip      = { defs={0x08048384,0x08048385} expr=0x08048386[32] }
    memory:
        address = { defs={} expr=v1381[32] }
          value = { defs={} expr=v1423[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048384} expr=(add[32] v1381[32] 4[32]) }
          value = { defs={} expr=v1424[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048384,0x08048385} expr=0x08048386[32]
0x8048386:leave  
    registers:
        ax      = { defs={0x08048384} expr=v1423[32] }
        cx      = { defs={} expr=v1378[32] }
        dx      = { defs={} expr=v1379[32] }
        bx      = { defs={0x08048385} expr=v1424[32] }
        sp      = { defs={0x08048386} expr=(add[32] v1382[32] 4[32]) }
        bp      = { defs={0x08048386} expr=v1425[32] }
        si      = { defs={} expr=v1383[32] }
        di      = { defs={} expr=v1384[32] }
        es      = { defs={} expr=v1385[16] }
        cs      = { defs={} expr=v1386[16] }
        ss      = { defs={} expr=v1387[16] }
        ds      = { defs={} expr=v1388[16] }
        fs      = { defs={} expr=v1389[16] }
        gs      = { defs={} expr=v1390[16] }
        cf      = { defs={} expr=v1391[1] }
        ?1      = { defs={} expr=v1392[1] }
        pf      = { defs={} expr=v1393[1] }
        ?3      = { defs={} expr=v1394[1] }
        af      = { defs={} expr=v1395[1] }
        ?5      = { defs={} expr=v1396[1] }
        zf      = { defs={} expr=v1397[1] }
        sf      = { defs={} expr=v1398[1] }
        tf      = { defs={} expr=v1399[1] }
        if      = { defs={} expr=v1400[1] }
        df      = { defs={} expr=v1401[1] }
        of      = { defs={} expr=v1402[1] }
        iopl0   = { defs={} expr=v1403[1] }
        iopl1   = { defs={} expr=v1404[1] }
        nt      = { defs={} expr=v1405[1] }
        ?15     = { defs={} expr=v1406[1] }
        rf      = { defs={} expr=v1407[1] }
        vm      = { defs={} expr=v1408[1] }
        ac      = { defs={} expr=v1409[1] }
        vif     = { defs={} expr=v1410[1] }
        vip     = { defs={} expr=v1411[1] }
        id      = { defs={} expr=v1412[1] }
        ?22     = { defs={} expr=v1413[1] }
        ?23     = { defs={} expr=v1414[1] }
        ?24     = { defs={} expr=v1415[1] }
        ?25     = { defs={} expr=v1416[1] }
        ?26     = { defs={} expr=v1417[1] }
        ?27     = { defs={} expr=v1418[1] }
        ?28     = { defs={} expr=v1419[1] }
        ?29     = { defs={} expr=v1420[1] }
        ?30     = { defs={} expr=v1421[1] }
        ?31     = { defs={} expr=v1422[1] }
        ip      = { defs={0x08048384,0x08048385,0x08048386} expr=0x08048387[32] }
    memory:
        address = { defs={} expr=v1381[32] }
          value = { defs={} expr=v1423[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048384} expr=(add[32] v1381[32] 4[32]) }
          value = { defs={} expr=v1424[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048386} expr=v1382[32] }
          value = { defs={} expr=v1425[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048384,0x08048385,0x08048386} expr=0x08048387[32]
0x8048387:ret    
    registers:
        ax      = { defs={0x08048384} expr=v1423[32] }
        cx      = { defs={} expr=v1378[32] }
        dx      = { defs={} expr=v1379[32] }
        bx      = { defs={0x08048385} expr=v1424[32] }
        sp      = { defs={0x08048386,0x08048387} expr=(add[32] (add[32] v1382[32] 4[32]) 4[32]) }
        bp      = { defs={0x08048386} expr=v1425[32] }
        si      = { defs={} expr=v1383[32] }
        di      = { defs={} expr=v1384[32] }
        es      = { defs={} expr=v1385[16] }
        cs      = { defs={} expr=v1386[16] }
        ss      = { defs={} expr=v1387[16] }
        ds      = { defs={} expr=v1388[16] }
        fs      = { defs={} expr=v1389[16] }
        gs      = { defs={} expr=v1390[16] }
        cf      = { defs={} expr=v1391[1] }
        ?1      = { defs={} expr=v1392[1] }
        pf      = { defs={} expr=v1393[1] }
        ?3      = { defs={} expr=v1394[1] }
        af      = { defs={} expr=v1395[1] }
        ?5      = { defs={} expr=v1396[1] }
        zf      = { defs={} expr=v1397[1] }
        sf      = { defs={} expr=v1398[1] }
        tf      = { defs={} expr=v1399[1] }
        if      = { defs={} expr=v1400[1] }
        df      = { defs={} expr=v1401[1] }
        of      = { defs={} expr=v1402[1] }
        iopl0   = { defs={} expr=v1403[1] }
        iopl1   = { defs={} expr=v1404[1] }
        nt      = { defs={} expr=v1405[1] }
        ?15     = { defs={} expr=v1406[1] }
        rf      = { defs={} expr=v1407[1] }
        vm      = { defs={} expr=v1408[1] }
        ac      = { defs={} expr=v1409[1] }
        vif     = { defs={} expr=v1410[1] }
        vip     = { defs={} expr=v1411[1] }
        id      = { defs={} expr=v1412[1] }
        ?22     = { defs={} expr=v1413[1] }
        ?23     = { defs={} expr=v1414[1] }
        ?24     = { defs={} expr=v1415[1] }
        ?25     = { defs={} expr=v1416[1] }
        ?26     = { defs={} expr=v1417[1] }
        ?27     = { defs={} expr=v1418[1] }
        ?28     = { defs={} expr=v1419[1] }
        ?29     = { defs={} expr=v1420[1] }
        ?30     = { defs={} expr=v1421[1] }
        ?31     = { defs={} expr=v1422[1] }
        ip      = { defs={0x08048387} expr=v1426[32] }
    memory:
        address = { defs={} expr=v1381[32] }
          value = { defs={} expr=v1423[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048384} expr=(add[32] v1381[32] 4[32]) }
          value = { defs={} expr=v1424[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048386} expr=v1382[32] }
          value = { defs={} expr=v1425[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048386} expr=(add[32] v1382[32] 4[32]) }
          value = { defs={} expr=v1426[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048387} expr=v1426[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048390:push   ebp
    registers:
        ax      = { defs={} expr=v1475[32] }
        cx      = { defs={} expr=v1476[32] }
        dx      = { defs={} expr=v1477[32] }
        bx      = { defs={} expr=v1478[32] }
        sp      = { defs={0x08048390} expr=(add[32] v1479[32] -4[32]) }
        bp      = { defs={} expr=v1480[32] }
        si      = { defs={} expr=v1481[32] }
        di      = { defs={} expr=v1482[32] }
        es      = { defs={} expr=v1483[16] }
        cs      = { defs={} expr=v1484[16] }
        ss      = { defs={} expr=v1485[16] }
        ds      = { defs={} expr=v1486[16] }
        fs      = { defs={} expr=v1487[16] }
        gs      = { defs={} expr=v1488[16] }
        cf      = { defs={} expr=v1489[1] }
        ?1      = { defs={} expr=v1490[1] }
        pf      = { defs={} expr=v1491[1] }
        ?3      = { defs={} expr=v1492[1] }
        af      = { defs={} expr=v1493[1] }
        ?5      = { defs={} expr=v1494[1] }
        zf      = { defs={} expr=v1495[1] }
        sf      = { defs={} expr=v1496[1] }
        tf      = { defs={} expr=v1497[1] }
        if      = { defs={} expr=v1498[1] }
        df      = { defs={} expr=v1499[1] }
        of      = { defs={} expr=v1500[1] }
        iopl0   = { defs={} expr=v1501[1] }
        iopl1   = { defs={} expr=v1502[1] }
        nt      = { defs={} expr=v1503[1] }
        ?15     = { defs={} expr=v1504[1] }
        rf      = { defs={} expr=v1505[1] }
        vm      = { defs={} expr=v1506[1] }
        ac      = { defs={} expr=v1507[1] }
        vif     = { defs={} expr=v1508[1] }
        vip     = { defs={} expr=v1509[1] }
        id      = { defs={} expr=v1510[1] }
        ?22     = { defs={} expr=v1511[1] }
        ?23     = { defs={} expr=v1512[1] }
        ?24     = { defs={} expr=v1513[1] }
        ?25     = { defs={} expr=v1514[1] }
        ?26     = { defs={} expr=v1515[1] }
        ?27     = { defs={} expr=v1516[1] }
        ?28     = { defs={} expr=v1517[1] }
        ?29     = { defs={} expr=v1518[1] }
        ?30     = { defs={} expr=v1519[1] }
        ?31     = { defs={} expr=v1520[1] }
        ip      = { defs={0x08048390} expr=0x08048391[32] }
    memory:
        address = { defs={0x08048390} expr=(add[32] v1479[32] -4[32]) }
          value = { defs={0x08048390} expr=v1480[32] }
          flags = { size=4 }
    ip = defs={0x08048390} expr=0x08048391[32]
0x8048391:mov    ebp, esp
    registers:
        ax      = { defs={} expr=v1475[32] }
        cx      = { defs={} expr=v1476[32] }
        dx      = { defs={} expr=v1477[32] }
        bx      = { defs={} expr=v1478[32] }
        sp      = { defs={0x08048390} expr=(add[32] v1479[32] -4[32]) }
        bp      = { defs={0x08048390,0x08048391} expr=(add[32] v1479[32] -4[32]) }
        si      = { defs={} expr=v1481[32] }
        di      = { defs={} expr=v1482[32] }
        es      = { defs={} expr=v1483[16] }
        cs      = { defs={} expr=v1484[16] }
        ss      = { defs={} expr=v1485[16] }
        ds      = { defs={} expr=v1486[16] }
        fs      = { defs={} expr=v1487[16] }
        gs      = { defs={} expr=v1488[16] }
        cf      = { defs={} expr=v1489[1] }
        ?1      = { defs={} expr=v1490[1] }
        pf      = { defs={} expr=v1491[1] }
        ?3      = { defs={} expr=v1492[1] }
        af      = { defs={} expr=v1493[1] }
        ?5      = { defs={} expr=v1494[1] }
        zf      = { defs={} expr=v1495[1] }
        sf      = { defs={} expr=v1496[1] }
        tf      = { defs={} expr=v1497[1] }
        if      = { defs={} expr=v1498[1] }
        df      = { defs={} expr=v1499[1] }
        of      = { defs={} expr=v1500[1] }
        iopl0   = { defs={} expr=v1501[1] }
        iopl1   = { defs={} expr=v1502[1] }
        nt      = { defs={} expr=v1503[1] }
        ?15     = { defs={} expr=v1504[1] }
        rf      = { defs={} expr=v1505[1] }
        vm      = { defs={} expr=v1506[1] }
        ac      = { defs={} expr=v1507[1] }
        vif     = { defs={} expr=v1508[1] }
        vip     = { defs={} expr=v1509[1] }
        id      = { defs={} expr=v1510[1] }
        ?22     = { defs={} expr=v1511[1] }
        ?23     = { defs={} expr=v1512[1] }
        ?24     = { defs={} expr=v1513[1] }
        ?25     = { defs={} expr=v1514[1] }
        ?26     = { defs={} expr=v1515[1] }
        ?27     = { defs={} expr=v1516[1] }
        ?28     = { defs={} expr=v1517[1] }
        ?29     = { defs={} expr=v1518[1] }
        ?30     = { defs={} expr=v1519[1] }
        ?31     = { defs={} expr=v1520[1] }
        ip      = { defs={0x08048390,0x08048391} expr=0x08048393[32] }
    memory:
        address = { defs={0x08048390} expr=(add[32] v1479[32] -4[32]) }
          value = { defs={0x08048390} expr=v1480[32] }
          flags = { size=4 }
    ip = defs={0x08048390,0x08048391} expr=0x08048393[32]
0x8048393:sub    esp, 0x08
    registers:
        ax      = { defs={} expr=v1475[32] }
        cx      = { defs={} expr=v1476[32] }
        dx      = { defs={} expr=v1477[32] }
        bx      = { defs={} expr=v1478[32] }
        sp      = { defs={0x08048390,0x08048393} expr=(add[32] (add[32] v1479[32] -4[32]) -8[32]) }
        bp      = { defs={0x08048390,0x08048391} expr=(add[32] v1479[32] -4[32]) }
        si      = { defs={} expr=v1481[32] }
        di      = { defs={} expr=v1482[32] }
        es      = { defs={} expr=v1483[16] }
        cs      = { defs={} expr=v1484[16] }
        ss      = { defs={} expr=v1485[16] }
        ds      = { defs={} expr=v1486[16] }
        fs      = { defs={} expr=v1487[16] }
        gs      = { defs={} expr=v1488[16] }
        cf      = { defs={0x08048390,0x08048393} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1479[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1479[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v1490[1] }
        pf      = { defs={0x08048390,0x08048393} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1479[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1479[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1479[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1479[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1479[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1479[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1479[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1479[32] -4[32]) -8[32]))))))) }
        ?3      = { defs={} expr=v1492[1] }
        af      = { defs={0x08048390,0x08048393} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1479[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1479[32] -4[32])) 4294967288[33])))))) }
        ?5      = { defs={} expr=v1494[1] }
        zf      = { defs={0x08048390,0x08048393} expr=(zerop[1] (add[32] (add[32] v1479[32] -4[32]) -8[32])) }
        sf      = { defs={0x08048390,0x08048393} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v1479[32] -4[32]) -8[32])) }
        tf      = { defs={} expr=v1497[1] }
        if      = { defs={} expr=v1498[1] }
        df      = { defs={} expr=v1499[1] }
        of      = { defs={0x08048390,0x08048393} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1479[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1479[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1479[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1479[32] -4[32])) 4294967288[33])))))) }
        iopl0   = { defs={} expr=v1501[1] }
        iopl1   = { defs={} expr=v1502[1] }
        nt      = { defs={} expr=v1503[1] }
        ?15     = { defs={} expr=v1504[1] }
        rf      = { defs={} expr=v1505[1] }
        vm      = { defs={} expr=v1506[1] }
        ac      = { defs={} expr=v1507[1] }
        vif     = { defs={} expr=v1508[1] }
        vip     = { defs={} expr=v1509[1] }
        id      = { defs={} expr=v1510[1] }
        ?22     = { defs={} expr=v1511[1] }
        ?23     = { defs={} expr=v1512[1] }
        ?24     = { defs={} expr=v1513[1] }
        ?25     = { defs={} expr=v1514[1] }
        ?26     = { defs={} expr=v1515[1] }
        ?27     = { defs={} expr=v1516[1] }
        ?28     = { defs={} expr=v1517[1] }
        ?29     = { defs={} expr=v1518[1] }
        ?30     = { defs={} expr=v1519[1] }
        ?31     = { defs={} expr=v1520[1] }
        ip      = { defs={0x08048390,0x08048391,0x08048393} expr=0x08048396[32] }
    memory:
        address = { defs={0x08048390} expr=(add[32] v1479[32] -4[32]) }
          value = { defs={0x08048390} expr=v1480[32] }
          flags = { size=4 }
    ip = defs={0x08048390,0x08048391,0x08048393} expr=0x08048396[32]
0x8048396:cmp    BYTE PTR ds:[0x080496f4<.bss>], 0x00
    registers:
        ax      = { defs={} expr=v1475[32] }
        cx      = { defs={} expr=v1476[32] }
        dx      = { defs={} expr=v1477[32] }
        bx      = { defs={} expr=v1478[32] }
        sp      = { defs={0x08048390,0x08048393} expr=(add[32] (add[32] v1479[32] -4[32]) -8[32]) }
        bp      = { defs={0x08048390,0x08048391} expr=(add[32] v1479[32] -4[32]) }
        si      = { defs={} expr=v1481[32] }
        di      = { defs={} expr=v1482[32] }
        es      = { defs={} expr=v1483[16] }
        cs      = { defs={} expr=v1484[16] }
        ss      = { defs={} expr=v1485[16] }
        ds      = { defs={} expr=v1486[16] }
        fs      = { defs={} expr=v1487[16] }
        gs      = { defs={} expr=v1488[16] }
        cf      = { defs={0x08048396} expr=(invert[1] (extract[1] 7[32] 8[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] v1521[8]))) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] v1521[8]))) -256[9])))))) }
        ?1      = { defs={} expr=v1490[1] }
        pf      = { defs={0x08048396} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] v1521[8]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] v1521[8])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] v1521[8]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] v1521[8]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] v1521[8]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] v1521[8])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] v1521[8]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] v1521[8]))))))) }
        ?3      = { defs={} expr=v1492[1] }
        af      = { defs={0x08048396} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] v1521[8]))) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] v1521[8]))) -256[9])))))) }
        ?5      = { defs={} expr=v1494[1] }
        zf      = { defs={0x08048396} expr=(zerop[1] (extract[8] 0[32] 8[32] (uextend[32] 32[32] v1521[8]))) }
        sf      = { defs={0x08048396} expr=(extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] v1521[8]))) }
        tf      = { defs={} expr=v1497[1] }
        if      = { defs={} expr=v1498[1] }
        df      = { defs={} expr=v1499[1] }
        of      = { defs={0x08048396} expr=(bv-xor[1] (extract[1] 7[32] 8[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] v1521[8]))) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] v1521[8]))) -256[9]))))) (extract[1] 6[32] 7[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] v1521[8]))) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] v1521[8]))) -256[9])))))) }
        iopl0   = { defs={} expr=v1501[1] }
        iopl1   = { defs={} expr=v1502[1] }
        nt      = { defs={} expr=v1503[1] }
        ?15     = { defs={} expr=v1504[1] }
        rf      = { defs={} expr=v1505[1] }
        vm      = { defs={} expr=v1506[1] }
        ac      = { defs={} expr=v1507[1] }
        vif     = { defs={} expr=v1508[1] }
        vip     = { defs={} expr=v1509[1] }
        id      = { defs={} expr=v1510[1] }
        ?22     = { defs={} expr=v1511[1] }
        ?23     = { defs={} expr=v1512[1] }
        ?24     = { defs={} expr=v1513[1] }
        ?25     = { defs={} expr=v1514[1] }
        ?26     = { defs={} expr=v1515[1] }
        ?27     = { defs={} expr=v1516[1] }
        ?28     = { defs={} expr=v1517[1] }
        ?29     = { defs={} expr=v1518[1] }
        ?30     = { defs={} expr=v1519[1] }
        ?31     = { defs={} expr=v1520[1] }
        ip      = { defs={0x08048390,0x08048391,0x08048393,0x08048396} expr=0x0804839d[32] }
    memory:
        address = { defs={0x08048390} expr=(add[32] v1479[32] -4[32]) }
          value = { defs={0x08048390} expr=v1480[32] }
          flags = { size=4 }
        address = { defs={0x08048396} expr=0x080496f4[32] }
          value = { defs={0x08048396} expr=(uextend[32] 32[32] v1521[8]) }
          flags = { size=1; read-only }
    ip = defs={0x08048390,0x08048391,0x08048393,0x08048396} expr=0x0804839d[32]
0x804839d:jne    0x080483cc<<Insn>>
    registers:
        ax      = { defs={} expr=v1475[32] }
        cx      = { defs={} expr=v1476[32] }
        dx      = { defs={} expr=v1477[32] }
        bx      = { defs={} expr=v1478[32] }
        sp      = { defs={0x08048390,0x08048393} expr=(add[32] (add[32] v1479[32] -4[32]) -8[32]) }
        bp      = { defs={0x08048390,0x08048391} expr=(add[32] v1479[32] -4[32]) }
        si      = { defs={} expr=v1481[32] }
        di      = { defs={} expr=v1482[32] }
        es      = { defs={} expr=v1483[16] }
        cs      = { defs={} expr=v1484[16] }
        ss      = { defs={} expr=v1485[16] }
        ds      = { defs={} expr=v1486[16] }
        fs      = { defs={} expr=v1487[16] }
        gs      = { defs={} expr=v1488[16] }
        cf      = { defs={0x08048396} expr=(invert[1] (extract[1] 7[32] 8[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] v1521[8]))) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] v1521[8]))) -256[9])))))) }
        ?1      = { defs={} expr=v1490[1] }
        pf      = { defs={0x08048396} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] v1521[8]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] v1521[8])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] v1521[8]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] v1521[8]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] v1521[8]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] v1521[8])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] v1521[8]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] v1521[8]))))))) }
        ?3      = { defs={} expr=v1492[1] }
        af      = { defs={0x08048396} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] v1521[8]))) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] v1521[8]))) -256[9])))))) }
        ?5      = { defs={} expr=v1494[1] }
        zf      = { defs={0x08048396} expr=(zerop[1] (extract[8] 0[32] 8[32] (uextend[32] 32[32] v1521[8]))) }
        sf      = { defs={0x08048396} expr=(extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] v1521[8]))) }
        tf      = { defs={} expr=v1497[1] }
        if      = { defs={} expr=v1498[1] }
        df      = { defs={} expr=v1499[1] }
        of      = { defs={0x08048396} expr=(bv-xor[1] (extract[1] 7[32] 8[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] v1521[8]))) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] v1521[8]))) -256[9]))))) (extract[1] 6[32] 7[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] v1521[8]))) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] v1521[8]))) -256[9])))))) }
        iopl0   = { defs={} expr=v1501[1] }
        iopl1   = { defs={} expr=v1502[1] }
        nt      = { defs={} expr=v1503[1] }
        ?15     = { defs={} expr=v1504[1] }
        rf      = { defs={} expr=v1505[1] }
        vm      = { defs={} expr=v1506[1] }
        ac      = { defs={} expr=v1507[1] }
        vif     = { defs={} expr=v1508[1] }
        vip     = { defs={} expr=v1509[1] }
        id      = { defs={} expr=v1510[1] }
        ?22     = { defs={} expr=v1511[1] }
        ?23     = { defs={} expr=v1512[1] }
        ?24     = { defs={} expr=v1513[1] }
        ?25     = { defs={} expr=v1514[1] }
        ?26     = { defs={} expr=v1515[1] }
        ?27     = { defs={} expr=v1516[1] }
        ?28     = { defs={} expr=v1517[1] }
        ?29     = { defs={} expr=v1518[1] }
        ?30     = { defs={} expr=v1519[1] }
        ?31     = { defs={} expr=v1520[1] }
        ip      = { defs={0x08048390,0x08048391,0x08048393,0x08048396,0x0804839d} expr=(ite[32] (invert[1] (zerop[1] (extract[8] 0[32] 8[32] (uextend[32] 32[32] v1521[8])))) 0x080483cc[32] 0x0804839f[32]) }
    memory:
        address = { defs={0x08048390} expr=(add[32] v1479[32] -4[32]) }
          value = { defs={0x08048390} expr=v1480[32] }
          flags = { size=4 }
        address = { defs={0x08048396} expr=0x080496f4[32] }
          value = { defs={0x08048396} expr=(uextend[32] 32[32] v1521[8]) }
          flags = { size=1; read-only }
    ip = defs={0x08048390,0x08048391,0x08048393,0x08048396,0x0804839d} expr=(ite[32] (invert[1] (zerop[1] (extract[8] 0[32] 8[32] (uextend[32] 32[32] v1521[8])))) 0x080483cc[32] 0x0804839f[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804839f:mov    eax, DWORD PTR ds:[0x080496f0<.data+8>]
    registers:
        ax      = { defs={0x0804839f} expr=v1616[32] }
        cx      = { defs={} expr=v1571[32] }
        dx      = { defs={} expr=v1572[32] }
        bx      = { defs={} expr=v1573[32] }
        sp      = { defs={} expr=v1574[32] }
        bp      = { defs={} expr=v1575[32] }
        si      = { defs={} expr=v1576[32] }
        di      = { defs={} expr=v1577[32] }
        es      = { defs={} expr=v1578[16] }
        cs      = { defs={} expr=v1579[16] }
        ss      = { defs={} expr=v1580[16] }
        ds      = { defs={} expr=v1581[16] }
        fs      = { defs={} expr=v1582[16] }
        gs      = { defs={} expr=v1583[16] }
        cf      = { defs={} expr=v1584[1] }
        ?1      = { defs={} expr=v1585[1] }
        pf      = { defs={} expr=v1586[1] }
        ?3      = { defs={} expr=v1587[1] }
        af      = { defs={} expr=v1588[1] }
        ?5      = { defs={} expr=v1589[1] }
        zf      = { defs={} expr=v1590[1] }
        sf      = { defs={} expr=v1591[1] }
        tf      = { defs={} expr=v1592[1] }
        if      = { defs={} expr=v1593[1] }
        df      = { defs={} expr=v1594[1] }
        of      = { defs={} expr=v1595[1] }
        iopl0   = { defs={} expr=v1596[1] }
        iopl1   = { defs={} expr=v1597[1] }
        nt      = { defs={} expr=v1598[1] }
        ?15     = { defs={} expr=v1599[1] }
        rf      = { defs={} expr=v1600[1] }
        vm      = { defs={} expr=v1601[1] }
        ac      = { defs={} expr=v1602[1] }
        vif     = { defs={} expr=v1603[1] }
        vip     = { defs={} expr=v1604[1] }
        id      = { defs={} expr=v1605[1] }
        ?22     = { defs={} expr=v1606[1] }
        ?23     = { defs={} expr=v1607[1] }
        ?24     = { defs={} expr=v1608[1] }
        ?25     = { defs={} expr=v1609[1] }
        ?26     = { defs={} expr=v1610[1] }
        ?27     = { defs={} expr=v1611[1] }
        ?28     = { defs={} expr=v1612[1] }
        ?29     = { defs={} expr=v1613[1] }
        ?30     = { defs={} expr=v1614[1] }
        ?31     = { defs={} expr=v1615[1] }
        ip      = { defs={0x0804839f} expr=0x080483a4[32] }
    memory:
        address = { defs={0x0804839f} expr=0x080496f0[32] }
          value = { defs={} expr=v1616[32] }
          flags = { size=4; read-only }
    ip = defs={0x0804839f} expr=0x080483a4[32]
0x80483a4:mov    edx, DWORD PTR ds:[eax]
    registers:
        ax      = { defs={0x0804839f} expr=v1616[32] }
        cx      = { defs={} expr=v1571[32] }
        dx      = { defs={0x080483a4} expr=v1617[32] }
        bx      = { defs={} expr=v1573[32] }
        sp      = { defs={} expr=v1574[32] }
        bp      = { defs={} expr=v1575[32] }
        si      = { defs={} expr=v1576[32] }
        di      = { defs={} expr=v1577[32] }
        es      = { defs={} expr=v1578[16] }
        cs      = { defs={} expr=v1579[16] }
        ss      = { defs={} expr=v1580[16] }
        ds      = { defs={} expr=v1581[16] }
        fs      = { defs={} expr=v1582[16] }
        gs      = { defs={} expr=v1583[16] }
        cf      = { defs={} expr=v1584[1] }
        ?1      = { defs={} expr=v1585[1] }
        pf      = { defs={} expr=v1586[1] }
        ?3      = { defs={} expr=v1587[1] }
        af      = { defs={} expr=v1588[1] }
        ?5      = { defs={} expr=v1589[1] }
        zf      = { defs={} expr=v1590[1] }
        sf      = { defs={} expr=v1591[1] }
        tf      = { defs={} expr=v1592[1] }
        if      = { defs={} expr=v1593[1] }
        df      = { defs={} expr=v1594[1] }
        of      = { defs={} expr=v1595[1] }
        iopl0   = { defs={} expr=v1596[1] }
        iopl1   = { defs={} expr=v1597[1] }
        nt      = { defs={} expr=v1598[1] }
        ?15     = { defs={} expr=v1599[1] }
        rf      = { defs={} expr=v1600[1] }
        vm      = { defs={} expr=v1601[1] }
        ac      = { defs={} expr=v1602[1] }
        vif     = { defs={} expr=v1603[1] }
        vip     = { defs={} expr=v1604[1] }
        id      = { defs={} expr=v1605[1] }
        ?22     = { defs={} expr=v1606[1] }
        ?23     = { defs={} expr=v1607[1] }
        ?24     = { defs={} expr=v1608[1] }
        ?25     = { defs={} expr=v1609[1] }
        ?26     = { defs={} expr=v1610[1] }
        ?27     = { defs={} expr=v1611[1] }
        ?28     = { defs={} expr=v1612[1] }
        ?29     = { defs={} expr=v1613[1] }
        ?30     = { defs={} expr=v1614[1] }
        ?31     = { defs={} expr=v1615[1] }
        ip      = { defs={0x0804839f,0x080483a4} expr=0x080483a6[32] }
    memory:
        address = { defs={0x0804839f} expr=0x080496f0[32] }
          value = { defs={} expr=v1616[32] }
          flags = { size=4; read-only }
        address = { defs={0x0804839f} expr=v1616[32] }
          value = { defs={} expr=v1617[32] }
          flags = { size=4; read-only }
    ip = defs={0x0804839f,0x080483a4} expr=0x080483a6[32]
0x80483a6:test   edx, edx
    registers:
        ax      = { defs={0x0804839f} expr=v1616[32] }
        cx      = { defs={} expr=v1571[32] }
        dx      = { defs={0x080483a4} expr=v1617[32] }
        bx      = { defs={} expr=v1573[32] }
        sp      = { defs={} expr=v1574[32] }
        bp      = { defs={} expr=v1575[32] }
        si      = { defs={} expr=v1576[32] }
        di      = { defs={} expr=v1577[32] }
        es      = { defs={} expr=v1578[16] }
        cs      = { defs={} expr=v1579[16] }
        ss      = { defs={} expr=v1580[16] }
        ds      = { defs={} expr=v1581[16] }
        fs      = { defs={} expr=v1582[16] }
        gs      = { defs={} expr=v1583[16] }
        cf      = { defs={0x080483a6} expr=0[1] }
        ?1      = { defs={} expr=v1585[1] }
        pf      = { defs={0x080483a4,0x080483a6} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v1617[32] v1617[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v1617[32] v1617[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v1617[32] v1617[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v1617[32] v1617[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v1617[32] v1617[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v1617[32] v1617[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v1617[32] v1617[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v1617[32] v1617[32]))))))) }
        ?3      = { defs={} expr=v1587[1] }
        af      = { defs={0x080483a6} expr=v1618[1] }
        ?5      = { defs={} expr=v1589[1] }
        zf      = { defs={0x080483a4,0x080483a6} expr=(zerop[1] (bv-and[32] v1617[32] v1617[32])) }
        sf      = { defs={0x080483a4,0x080483a6} expr=(extract[1] 31[32] 32[32] (bv-and[32] v1617[32] v1617[32])) }
        tf      = { defs={} expr=v1592[1] }
        if      = { defs={} expr=v1593[1] }
        df      = { defs={} expr=v1594[1] }
        of      = { defs={0x080483a6} expr=0[1] }
        iopl0   = { defs={} expr=v1596[1] }
        iopl1   = { defs={} expr=v1597[1] }
        nt      = { defs={} expr=v1598[1] }
        ?15     = { defs={} expr=v1599[1] }
        rf      = { defs={} expr=v1600[1] }
        vm      = { defs={} expr=v1601[1] }
        ac      = { defs={} expr=v1602[1] }
        vif     = { defs={} expr=v1603[1] }
        vip     = { defs={} expr=v1604[1] }
        id      = { defs={} expr=v1605[1] }
        ?22     = { defs={} expr=v1606[1] }
        ?23     = { defs={} expr=v1607[1] }
        ?24     = { defs={} expr=v1608[1] }
        ?25     = { defs={} expr=v1609[1] }
        ?26     = { defs={} expr=v1610[1] }
        ?27     = { defs={} expr=v1611[1] }
        ?28     = { defs={} expr=v1612[1] }
        ?29     = { defs={} expr=v1613[1] }
        ?30     = { defs={} expr=v1614[1] }
        ?31     = { defs={} expr=v1615[1] }
        ip      = { defs={0x0804839f,0x080483a4,0x080483a6} expr=0x080483a8[32] }
    memory:
        address = { defs={0x0804839f} expr=0x080496f0[32] }
          value = { defs={} expr=v1616[32] }
          flags = { size=4; read-only }
        address = { defs={0x0804839f} expr=v1616[32] }
          value = { defs={} expr=v1617[32] }
          flags = { size=4; read-only }
    ip = defs={0x0804839f,0x080483a4,0x080483a6} expr=0x080483a8[32]
0x80483a8:je     0x080483c5<<Insn>>
    registers:
        ax      = { defs={0x0804839f} expr=v1616[32] }
        cx      = { defs={} expr=v1571[32] }
        dx      = { defs={0x080483a4} expr=v1617[32] }
        bx      = { defs={} expr=v1573[32] }
        sp      = { defs={} expr=v1574[32] }
        bp      = { defs={} expr=v1575[32] }
        si      = { defs={} expr=v1576[32] }
        di      = { defs={} expr=v1577[32] }
        es      = { defs={} expr=v1578[16] }
        cs      = { defs={} expr=v1579[16] }
        ss      = { defs={} expr=v1580[16] }
        ds      = { defs={} expr=v1581[16] }
        fs      = { defs={} expr=v1582[16] }
        gs      = { defs={} expr=v1583[16] }
        cf      = { defs={0x080483a6} expr=0[1] }
        ?1      = { defs={} expr=v1585[1] }
        pf      = { defs={0x080483a4,0x080483a6} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v1617[32] v1617[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v1617[32] v1617[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v1617[32] v1617[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v1617[32] v1617[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v1617[32] v1617[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v1617[32] v1617[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v1617[32] v1617[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v1617[32] v1617[32]))))))) }
        ?3      = { defs={} expr=v1587[1] }
        af      = { defs={0x080483a6} expr=v1618[1] }
        ?5      = { defs={} expr=v1589[1] }
        zf      = { defs={0x080483a4,0x080483a6} expr=(zerop[1] (bv-and[32] v1617[32] v1617[32])) }
        sf      = { defs={0x080483a4,0x080483a6} expr=(extract[1] 31[32] 32[32] (bv-and[32] v1617[32] v1617[32])) }
        tf      = { defs={} expr=v1592[1] }
        if      = { defs={} expr=v1593[1] }
        df      = { defs={} expr=v1594[1] }
        of      = { defs={0x080483a6} expr=0[1] }
        iopl0   = { defs={} expr=v1596[1] }
        iopl1   = { defs={} expr=v1597[1] }
        nt      = { defs={} expr=v1598[1] }
        ?15     = { defs={} expr=v1599[1] }
        rf      = { defs={} expr=v1600[1] }
        vm      = { defs={} expr=v1601[1] }
        ac      = { defs={} expr=v1602[1] }
        vif     = { defs={} expr=v1603[1] }
        vip     = { defs={} expr=v1604[1] }
        id      = { defs={} expr=v1605[1] }
        ?22     = { defs={} expr=v1606[1] }
        ?23     = { defs={} expr=v1607[1] }
        ?24     = { defs={} expr=v1608[1] }
        ?25     = { defs={} expr=v1609[1] }
        ?26     = { defs={} expr=v1610[1] }
        ?27     = { defs={} expr=v1611[1] }
        ?28     = { defs={} expr=v1612[1] }
        ?29     = { defs={} expr=v1613[1] }
        ?30     = { defs={} expr=v1614[1] }
        ?31     = { defs={} expr=v1615[1] }
        ip      = { defs={0x0804839f,0x080483a4,0x080483a6,0x080483a8} expr=(ite[32] (zerop[1] (bv-and[32] v1617[32] v1617[32])) 0x080483c5[32] 0x080483aa[32]) }
    memory:
        address = { defs={0x0804839f} expr=0x080496f0[32] }
          value = { defs={} expr=v1616[32] }
          flags = { size=4; read-only }
        address = { defs={0x0804839f} expr=v1616[32] }
          value = { defs={} expr=v1617[32] }
          flags = { size=4; read-only }
    ip = defs={0x0804839f,0x080483a4,0x080483a6,0x080483a8} expr=(ite[32] (zerop[1] (bv-and[32] v1617[32] v1617[32])) 0x080483c5[32] 0x080483aa[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483aa:lea    esi, [esi + 0x00000000]
    registers:
        ax      = { defs={} expr=v1667[32] }
        cx      = { defs={} expr=v1668[32] }
        dx      = { defs={} expr=v1669[32] }
        bx      = { defs={} expr=v1670[32] }
        sp      = { defs={} expr=v1671[32] }
        bp      = { defs={} expr=v1672[32] }
        si      = { defs={0x080483aa} expr=v1673[32] }
        di      = { defs={} expr=v1674[32] }
        es      = { defs={} expr=v1675[16] }
        cs      = { defs={} expr=v1676[16] }
        ss      = { defs={} expr=v1677[16] }
        ds      = { defs={} expr=v1678[16] }
        fs      = { defs={} expr=v1679[16] }
        gs      = { defs={} expr=v1680[16] }
        cf      = { defs={} expr=v1681[1] }
        ?1      = { defs={} expr=v1682[1] }
        pf      = { defs={} expr=v1683[1] }
        ?3      = { defs={} expr=v1684[1] }
        af      = { defs={} expr=v1685[1] }
        ?5      = { defs={} expr=v1686[1] }
        zf      = { defs={} expr=v1687[1] }
        sf      = { defs={} expr=v1688[1] }
        tf      = { defs={} expr=v1689[1] }
        if      = { defs={} expr=v1690[1] }
        df      = { defs={} expr=v1691[1] }
        of      = { defs={} expr=v1692[1] }
        iopl0   = { defs={} expr=v1693[1] }
        iopl1   = { defs={} expr=v1694[1] }
        nt      = { defs={} expr=v1695[1] }
        ?15     = { defs={} expr=v1696[1] }
        rf      = { defs={} expr=v1697[1] }
        vm      = { defs={} expr=v1698[1] }
        ac      = { defs={} expr=v1699[1] }
        vif     = { defs={} expr=v1700[1] }
        vip     = { defs={} expr=v1701[1] }
        id      = { defs={} expr=v1702[1] }
        ?22     = { defs={} expr=v1703[1] }
        ?23     = { defs={} expr=v1704[1] }
        ?24     = { defs={} expr=v1705[1] }
        ?25     = { defs={} expr=v1706[1] }
        ?26     = { defs={} expr=v1707[1] }
        ?27     = { defs={} expr=v1708[1] }
        ?28     = { defs={} expr=v1709[1] }
        ?29     = { defs={} expr=v1710[1] }
        ?30     = { defs={} expr=v1711[1] }
        ?31     = { defs={} expr=v1712[1] }
        ip      = { defs={0x080483aa} expr=0x080483b0[32] }
    memory:
        (empty)
    ip = defs={0x080483aa} expr=0x080483b0[32]
0x80483b0:add    eax, 0x04
    registers:
        ax      = { defs={0x080483b0} expr=(add[32] v1667[32] 4[32]) }
        cx      = { defs={} expr=v1668[32] }
        dx      = { defs={} expr=v1669[32] }
        bx      = { defs={} expr=v1670[32] }
        sp      = { defs={} expr=v1671[32] }
        bp      = { defs={} expr=v1672[32] }
        si      = { defs={0x080483aa} expr=v1673[32] }
        di      = { defs={} expr=v1674[32] }
        es      = { defs={} expr=v1675[16] }
        cs      = { defs={} expr=v1676[16] }
        ss      = { defs={} expr=v1677[16] }
        ds      = { defs={} expr=v1678[16] }
        fs      = { defs={} expr=v1679[16] }
        gs      = { defs={} expr=v1680[16] }
        cf      = { defs={0x080483b0} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1667[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v1667[32]) 4[33]))))) }
        ?1      = { defs={} expr=v1682[1] }
        pf      = { defs={0x080483b0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v1667[32] 4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v1667[32] 4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v1667[32] 4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v1667[32] 4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v1667[32] 4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v1667[32] 4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v1667[32] 4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v1667[32] 4[32]))))))) }
        ?3      = { defs={} expr=v1684[1] }
        af      = { defs={0x080483b0} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1667[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v1667[32]) 4[33]))))) }
        ?5      = { defs={} expr=v1686[1] }
        zf      = { defs={0x080483b0} expr=(zerop[1] (add[32] v1667[32] 4[32])) }
        sf      = { defs={0x080483b0} expr=(extract[1] 31[32] 32[32] (add[32] v1667[32] 4[32])) }
        tf      = { defs={} expr=v1689[1] }
        if      = { defs={} expr=v1690[1] }
        df      = { defs={} expr=v1691[1] }
        of      = { defs={0x080483b0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1667[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v1667[32]) 4[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1667[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v1667[32]) 4[33])))))) }
        iopl0   = { defs={} expr=v1693[1] }
        iopl1   = { defs={} expr=v1694[1] }
        nt      = { defs={} expr=v1695[1] }
        ?15     = { defs={} expr=v1696[1] }
        rf      = { defs={} expr=v1697[1] }
        vm      = { defs={} expr=v1698[1] }
        ac      = { defs={} expr=v1699[1] }
        vif     = { defs={} expr=v1700[1] }
        vip     = { defs={} expr=v1701[1] }
        id      = { defs={} expr=v1702[1] }
        ?22     = { defs={} expr=v1703[1] }
        ?23     = { defs={} expr=v1704[1] }
        ?24     = { defs={} expr=v1705[1] }
        ?25     = { defs={} expr=v1706[1] }
        ?26     = { defs={} expr=v1707[1] }
        ?27     = { defs={} expr=v1708[1] }
        ?28     = { defs={} expr=v1709[1] }
        ?29     = { defs={} expr=v1710[1] }
        ?30     = { defs={} expr=v1711[1] }
        ?31     = { defs={} expr=v1712[1] }
        ip      = { defs={0x080483aa,0x080483b0} expr=0x080483b3[32] }
    memory:
        (empty)
    ip = defs={0x080483aa,0x080483b0} expr=0x080483b3[32]
0x80483b3:mov    DWORD PTR ds:[0x080496f0<.data+8>], eax
    registers:
        ax      = { defs={0x080483b0} expr=(add[32] v1667[32] 4[32]) }
        cx      = { defs={} expr=v1668[32] }
        dx      = { defs={} expr=v1669[32] }
        bx      = { defs={} expr=v1670[32] }
        sp      = { defs={} expr=v1671[32] }
        bp      = { defs={} expr=v1672[32] }
        si      = { defs={0x080483aa} expr=v1673[32] }
        di      = { defs={} expr=v1674[32] }
        es      = { defs={} expr=v1675[16] }
        cs      = { defs={} expr=v1676[16] }
        ss      = { defs={} expr=v1677[16] }
        ds      = { defs={} expr=v1678[16] }
        fs      = { defs={} expr=v1679[16] }
        gs      = { defs={} expr=v1680[16] }
        cf      = { defs={0x080483b0} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1667[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v1667[32]) 4[33]))))) }
        ?1      = { defs={} expr=v1682[1] }
        pf      = { defs={0x080483b0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v1667[32] 4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v1667[32] 4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v1667[32] 4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v1667[32] 4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v1667[32] 4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v1667[32] 4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v1667[32] 4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v1667[32] 4[32]))))))) }
        ?3      = { defs={} expr=v1684[1] }
        af      = { defs={0x080483b0} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1667[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v1667[32]) 4[33]))))) }
        ?5      = { defs={} expr=v1686[1] }
        zf      = { defs={0x080483b0} expr=(zerop[1] (add[32] v1667[32] 4[32])) }
        sf      = { defs={0x080483b0} expr=(extract[1] 31[32] 32[32] (add[32] v1667[32] 4[32])) }
        tf      = { defs={} expr=v1689[1] }
        if      = { defs={} expr=v1690[1] }
        df      = { defs={} expr=v1691[1] }
        of      = { defs={0x080483b0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1667[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v1667[32]) 4[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1667[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v1667[32]) 4[33])))))) }
        iopl0   = { defs={} expr=v1693[1] }
        iopl1   = { defs={} expr=v1694[1] }
        nt      = { defs={} expr=v1695[1] }
        ?15     = { defs={} expr=v1696[1] }
        rf      = { defs={} expr=v1697[1] }
        vm      = { defs={} expr=v1698[1] }
        ac      = { defs={} expr=v1699[1] }
        vif     = { defs={} expr=v1700[1] }
        vip     = { defs={} expr=v1701[1] }
        id      = { defs={} expr=v1702[1] }
        ?22     = { defs={} expr=v1703[1] }
        ?23     = { defs={} expr=v1704[1] }
        ?24     = { defs={} expr=v1705[1] }
        ?25     = { defs={} expr=v1706[1] }
        ?26     = { defs={} expr=v1707[1] }
        ?27     = { defs={} expr=v1708[1] }
        ?28     = { defs={} expr=v1709[1] }
        ?29     = { defs={} expr=v1710[1] }
        ?30     = { defs={} expr=v1711[1] }
        ?31     = { defs={} expr=v1712[1] }
        ip      = { defs={0x080483aa,0x080483b0,0x080483b3} expr=0x080483b8[32] }
    memory:
        address = { defs={0x080483b3} expr=0x080496f0[32] }
          value = { defs={0x080483b0,0x080483b3} expr=(add[32] v1667[32] 4[32]) }
          flags = { size=4 }
    ip = defs={0x080483aa,0x080483b0,0x080483b3} expr=0x080483b8[32]
0x80483b8:call   edx
    registers:
        ax      = { defs={0x080483b0} expr=(add[32] v1667[32] 4[32]) }
        cx      = { defs={} expr=v1668[32] }
        dx      = { defs={} expr=v1669[32] }
        bx      = { defs={} expr=v1670[32] }
        sp      = { defs={0x080483b8} expr=(add[32] v1671[32] -4[32]) }
        bp      = { defs={} expr=v1672[32] }
        si      = { defs={0x080483aa} expr=v1673[32] }
        di      = { defs={} expr=v1674[32] }
        es      = { defs={} expr=v1675[16] }
        cs      = { defs={} expr=v1676[16] }
        ss      = { defs={} expr=v1677[16] }
        ds      = { defs={} expr=v1678[16] }
        fs      = { defs={} expr=v1679[16] }
        gs      = { defs={} expr=v1680[16] }
        cf      = { defs={0x080483b0} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1667[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v1667[32]) 4[33]))))) }
        ?1      = { defs={} expr=v1682[1] }
        pf      = { defs={0x080483b0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v1667[32] 4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v1667[32] 4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v1667[32] 4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v1667[32] 4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v1667[32] 4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v1667[32] 4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v1667[32] 4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v1667[32] 4[32]))))))) }
        ?3      = { defs={} expr=v1684[1] }
        af      = { defs={0x080483b0} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1667[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v1667[32]) 4[33]))))) }
        ?5      = { defs={} expr=v1686[1] }
        zf      = { defs={0x080483b0} expr=(zerop[1] (add[32] v1667[32] 4[32])) }
        sf      = { defs={0x080483b0} expr=(extract[1] 31[32] 32[32] (add[32] v1667[32] 4[32])) }
        tf      = { defs={} expr=v1689[1] }
        if      = { defs={} expr=v1690[1] }
        df      = { defs={} expr=v1691[1] }
        of      = { defs={0x080483b0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1667[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v1667[32]) 4[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1667[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v1667[32]) 4[33])))))) }
        iopl0   = { defs={} expr=v1693[1] }
        iopl1   = { defs={} expr=v1694[1] }
        nt      = { defs={} expr=v1695[1] }
        ?15     = { defs={} expr=v1696[1] }
        rf      = { defs={} expr=v1697[1] }
        vm      = { defs={} expr=v1698[1] }
        ac      = { defs={} expr=v1699[1] }
        vif     = { defs={} expr=v1700[1] }
        vip     = { defs={} expr=v1701[1] }
        id      = { defs={} expr=v1702[1] }
        ?22     = { defs={} expr=v1703[1] }
        ?23     = { defs={} expr=v1704[1] }
        ?24     = { defs={} expr=v1705[1] }
        ?25     = { defs={} expr=v1706[1] }
        ?26     = { defs={} expr=v1707[1] }
        ?27     = { defs={} expr=v1708[1] }
        ?28     = { defs={} expr=v1709[1] }
        ?29     = { defs={} expr=v1710[1] }
        ?30     = { defs={} expr=v1711[1] }
        ?31     = { defs={} expr=v1712[1] }
        ip      = { defs={0x080483b8} expr=v1669[32] }
    memory:
        address = { defs={0x080483b3} expr=0x080496f0[32] }
          value = { defs={0x080483b0,0x080483b3} expr=(add[32] v1667[32] 4[32]) }
          flags = { size=4 }
        address = { defs={0x080483b8} expr=(add[32] v1671[32] -4[32]) }
          value = { defs={0x080483aa,0x080483b0,0x080483b3,0x080483b8} expr=0x080483ba[32] }
          flags = { size=4 }
    ip = defs={0x080483b8} expr=v1669[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0<.data+8>]
    registers:
        ax      = { defs={0x080483ba} expr=v1807[32] }
        cx      = { defs={} expr=v1762[32] }
        dx      = { defs={} expr=v1763[32] }
        bx      = { defs={} expr=v1764[32] }
        sp      = { defs={} expr=v1765[32] }
        bp      = { defs={} expr=v1766[32] }
        si      = { defs={} expr=v1767[32] }
        di      = { defs={} expr=v1768[32] }
        es      = { defs={} expr=v1769[16] }
        cs      = { defs={} expr=v1770[16] }
        ss      = { defs={} expr=v1771[16] }
        ds      = { defs={} expr=v1772[16] }
        fs      = { defs={} expr=v1773[16] }
        gs      = { defs={} expr=v1774[16] }
        cf      = { defs={} expr=v1775[1] }
        ?1      = { defs={} expr=v1776[1] }
        pf      = { defs={} expr=v1777[1] }
        ?3      = { defs={} expr=v1778[1] }
        af      = { defs={} expr=v1779[1] }
        ?5      = { defs={} expr=v1780[1] }
        zf      = { defs={} expr=v1781[1] }
        sf      = { defs={} expr=v1782[1] }
        tf      = { defs={} expr=v1783[1] }
        if      = { defs={} expr=v1784[1] }
        df      = { defs={} expr=v1785[1] }
        of      = { defs={} expr=v1786[1] }
        iopl0   = { defs={} expr=v1787[1] }
        iopl1   = { defs={} expr=v1788[1] }
        nt      = { defs={} expr=v1789[1] }
        ?15     = { defs={} expr=v1790[1] }
        rf      = { defs={} expr=v1791[1] }
        vm      = { defs={} expr=v1792[1] }
        ac      = { defs={} expr=v1793[1] }
        vif     = { defs={} expr=v1794[1] }
        vip     = { defs={} expr=v1795[1] }
        id      = { defs={} expr=v1796[1] }
        ?22     = { defs={} expr=v1797[1] }
        ?23     = { defs={} expr=v1798[1] }
        ?24     = { defs={} expr=v1799[1] }
        ?25     = { defs={} expr=v1800[1] }
        ?26     = { defs={} expr=v1801[1] }
        ?27     = { defs={} expr=v1802[1] }
        ?28     = { defs={} expr=v1803[1] }
        ?29     = { defs={} expr=v1804[1] }
        ?30     = { defs={} expr=v1805[1] }
        ?31     = { defs={} expr=v1806[1] }
        ip      = { defs={0x080483ba} expr=0x080483bf[32] }
    memory:
        address = { defs={0x080483ba} expr=0x080496f0[32] }
          value = { defs={} expr=v1807[32] }
          flags = { size=4; read-only }
    ip = defs={0x080483ba} expr=0x080483bf[32]
0x80483bf:mov    edx, DWORD PTR ds:[eax]
    registers:
        ax      = { defs={0x080483ba} expr=v1807[32] }
        cx      = { defs={} expr=v1762[32] }
        dx      = { defs={0x080483bf} expr=v1808[32] }
        bx      = { defs={} expr=v1764[32] }
        sp      = { defs={} expr=v1765[32] }
        bp      = { defs={} expr=v1766[32] }
        si      = { defs={} expr=v1767[32] }
        di      = { defs={} expr=v1768[32] }
        es      = { defs={} expr=v1769[16] }
        cs      = { defs={} expr=v1770[16] }
        ss      = { defs={} expr=v1771[16] }
        ds      = { defs={} expr=v1772[16] }
        fs      = { defs={} expr=v1773[16] }
        gs      = { defs={} expr=v1774[16] }
        cf      = { defs={} expr=v1775[1] }
        ?1      = { defs={} expr=v1776[1] }
        pf      = { defs={} expr=v1777[1] }
        ?3      = { defs={} expr=v1778[1] }
        af      = { defs={} expr=v1779[1] }
        ?5      = { defs={} expr=v1780[1] }
        zf      = { defs={} expr=v1781[1] }
        sf      = { defs={} expr=v1782[1] }
        tf      = { defs={} expr=v1783[1] }
        if      = { defs={} expr=v1784[1] }
        df      = { defs={} expr=v1785[1] }
        of      = { defs={} expr=v1786[1] }
        iopl0   = { defs={} expr=v1787[1] }
        iopl1   = { defs={} expr=v1788[1] }
        nt      = { defs={} expr=v1789[1] }
        ?15     = { defs={} expr=v1790[1] }
        rf      = { defs={} expr=v1791[1] }
        vm      = { defs={} expr=v1792[1] }
        ac      = { defs={} expr=v1793[1] }
        vif     = { defs={} expr=v1794[1] }
        vip     = { defs={} expr=v1795[1] }
        id      = { defs={} expr=v1796[1] }
        ?22     = { defs={} expr=v1797[1] }
        ?23     = { defs={} expr=v1798[1] }
        ?24     = { defs={} expr=v1799[1] }
        ?25     = { defs={} expr=v1800[1] }
        ?26     = { defs={} expr=v1801[1] }
        ?27     = { defs={} expr=v1802[1] }
        ?28     = { defs={} expr=v1803[1] }
        ?29     = { defs={} expr=v1804[1] }
        ?30     = { defs={} expr=v1805[1] }
        ?31     = { defs={} expr=v1806[1] }
        ip      = { defs={0x080483ba,0x080483bf} expr=0x080483c1[32] }
    memory:
        address = { defs={0x080483ba} expr=0x080496f0[32] }
          value = { defs={} expr=v1807[32] }
          flags = { size=4; read-only }
        address = { defs={0x080483ba} expr=v1807[32] }
          value = { defs={} expr=v1808[32] }
          flags = { size=4; read-only }
    ip = defs={0x080483ba,0x080483bf} expr=0x080483c1[32]
0x80483c1:test   edx, edx
    registers:
        ax      = { defs={0x080483ba} expr=v1807[32] }
        cx      = { defs={} expr=v1762[32] }
        dx      = { defs={0x080483bf} expr=v1808[32] }
        bx      = { defs={} expr=v1764[32] }
        sp      = { defs={} expr=v1765[32] }
        bp      = { defs={} expr=v1766[32] }
        si      = { defs={} expr=v1767[32] }
        di      = { defs={} expr=v1768[32] }
        es      = { defs={} expr=v1769[16] }
        cs      = { defs={} expr=v1770[16] }
        ss      = { defs={} expr=v1771[16] }
        ds      = { defs={} expr=v1772[16] }
        fs      = { defs={} expr=v1773[16] }
        gs      = { defs={} expr=v1774[16] }
        cf      = { defs={0x080483c1} expr=0[1] }
        ?1      = { defs={} expr=v1776[1] }
        pf      = { defs={0x080483bf,0x080483c1} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v1808[32] v1808[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v1808[32] v1808[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v1808[32] v1808[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v1808[32] v1808[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v1808[32] v1808[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v1808[32] v1808[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v1808[32] v1808[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v1808[32] v1808[32]))))))) }
        ?3      = { defs={} expr=v1778[1] }
        af      = { defs={0x080483c1} expr=v1809[1] }
        ?5      = { defs={} expr=v1780[1] }
        zf      = { defs={0x080483bf,0x080483c1} expr=(zerop[1] (bv-and[32] v1808[32] v1808[32])) }
        sf      = { defs={0x080483bf,0x080483c1} expr=(extract[1] 31[32] 32[32] (bv-and[32] v1808[32] v1808[32])) }
        tf      = { defs={} expr=v1783[1] }
        if      = { defs={} expr=v1784[1] }
        df      = { defs={} expr=v1785[1] }
        of      = { defs={0x080483c1} expr=0[1] }
        iopl0   = { defs={} expr=v1787[1] }
        iopl1   = { defs={} expr=v1788[1] }
        nt      = { defs={} expr=v1789[1] }
        ?15     = { defs={} expr=v1790[1] }
        rf      = { defs={} expr=v1791[1] }
        vm      = { defs={} expr=v1792[1] }
        ac      = { defs={} expr=v1793[1] }
        vif     = { defs={} expr=v1794[1] }
        vip     = { defs={} expr=v1795[1] }
        id      = { defs={} expr=v1796[1] }
        ?22     = { defs={} expr=v1797[1] }
        ?23     = { defs={} expr=v1798[1] }
        ?24     = { defs={} expr=v1799[1] }
        ?25     = { defs={} expr=v1800[1] }
        ?26     = { defs={} expr=v1801[1] }
        ?27     = { defs={} expr=v1802[1] }
        ?28     = { defs={} expr=v1803[1] }
        ?29     = { defs={} expr=v1804[1] }
        ?30     = { defs={} expr=v1805[1] }
        ?31     = { defs={} expr=v1806[1] }
        ip      = { defs={0x080483ba,0x080483bf,0x080483c1} expr=0x080483c3[32] }
    memory:
        address = { defs={0x080483ba} expr=0x080496f0[32] }
          value = { defs={} expr=v1807[32] }
          flags = { size=4; read-only }
        address = { defs={0x080483ba} expr=v1807[32] }
          value = { defs={} expr=v1808[32] }
          flags = { size=4; read-only }
    ip = defs={0x080483ba,0x080483bf,0x080483c1} expr=0x080483c3[32]
0x80483c3:jne    0x080483b0<<Insn>>
    registers:
        ax      = { defs={0x080483ba} expr=v1807[32] }
        cx      = { defs={} expr=v1762[32] }
        dx      = { defs={0x080483bf} expr=v1808[32] }
        bx      = { defs={} expr=v1764[32] }
        sp      = { defs={} expr=v1765[32] }
        bp      = { defs={} expr=v1766[32] }
        si      = { defs={} expr=v1767[32] }
        di      = { defs={} expr=v1768[32] }
        es      = { defs={} expr=v1769[16] }
        cs      = { defs={} expr=v1770[16] }
        ss      = { defs={} expr=v1771[16] }
        ds      = { defs={} expr=v1772[16] }
        fs      = { defs={} expr=v1773[16] }
        gs      = { defs={} expr=v1774[16] }
        cf      = { defs={0x080483c1} expr=0[1] }
        ?1      = { defs={} expr=v1776[1] }
        pf      = { defs={0x080483bf,0x080483c1} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v1808[32] v1808[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v1808[32] v1808[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v1808[32] v1808[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v1808[32] v1808[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v1808[32] v1808[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v1808[32] v1808[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v1808[32] v1808[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v1808[32] v1808[32]))))))) }
        ?3      = { defs={} expr=v1778[1] }
        af      = { defs={0x080483c1} expr=v1809[1] }
        ?5      = { defs={} expr=v1780[1] }
        zf      = { defs={0x080483bf,0x080483c1} expr=(zerop[1] (bv-and[32] v1808[32] v1808[32])) }
        sf      = { defs={0x080483bf,0x080483c1} expr=(extract[1] 31[32] 32[32] (bv-and[32] v1808[32] v1808[32])) }
        tf      = { defs={} expr=v1783[1] }
        if      = { defs={} expr=v1784[1] }
        df      = { defs={} expr=v1785[1] }
        of      = { defs={0x080483c1} expr=0[1] }
        iopl0   = { defs={} expr=v1787[1] }
        iopl1   = { defs={} expr=v1788[1] }
        nt      = { defs={} expr=v1789[1] }
        ?15     = { defs={} expr=v1790[1] }
        rf      = { defs={} expr=v1791[1] }
        vm      = { defs={} expr=v1792[1] }
        ac      = { defs={} expr=v1793[1] }
        vif     = { defs={} expr=v1794[1] }
        vip     = { defs={} expr=v1795[1] }
        id      = { defs={} expr=v1796[1] }
        ?22     = { defs={} expr=v1797[1] }
        ?23     = { defs={} expr=v1798[1] }
        ?24     = { defs={} expr=v1799[1] }
        ?25     = { defs={} expr=v1800[1] }
        ?26     = { defs={} expr=v1801[1] }
        ?27     = { defs={} expr=v1802[1] }
        ?28     = { defs={} expr=v1803[1] }
        ?29     = { defs={} expr=v1804[1] }
        ?30     = { defs={} expr=v1805[1] }
        ?31     = { defs={} expr=v1806[1] }
        ip      = { defs={0x080483ba,0x080483bf,0x080483c1,0x080483c3} expr=(ite[32] (invert[1] (zerop[1] (bv-and[32] v1808[32] v1808[32]))) 0x080483b0[32] 0x080483c5[32]) }
    memory:
        address = { defs={0x080483ba} expr=0x080496f0[32] }
          value = { defs={} expr=v1807[32] }
          flags = { size=4; read-only }
        address = { defs={0x080483ba} expr=v1807[32] }
          value = { defs={} expr=v1808[32] }
          flags = { size=4; read-only }
    ip = defs={0x080483ba,0x080483bf,0x080483c1,0x080483c3} expr=(ite[32] (invert[1] (zerop[1] (bv-and[32] v1808[32] v1808[32]))) 0x080483b0[32] 0x080483c5[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483c5:mov    BYTE PTR ds:[0x080496f4<.bss>], 0x01
    registers:
        ax      = { defs={} expr=v1858[32] }
        cx      = { defs={} expr=v1859[32] }
        dx      = { defs={} expr=v1860[32] }
        bx      = { defs={} expr=v1861[32] }
        sp      = { defs={} expr=v1862[32] }
        bp      = { defs={} expr=v1863[32] }
        si      = { defs={} expr=v1864[32] }
        di      = { defs={} expr=v1865[32] }
        es      = { defs={} expr=v1866[16] }
        cs      = { defs={} expr=v1867[16] }
        ss      = { defs={} expr=v1868[16] }
        ds      = { defs={} expr=v1869[16] }
        fs      = { defs={} expr=v1870[16] }
        gs      = { defs={} expr=v1871[16] }
        cf      = { defs={} expr=v1872[1] }
        ?1      = { defs={} expr=v1873[1] }
        pf      = { defs={} expr=v1874[1] }
        ?3      = { defs={} expr=v1875[1] }
        af      = { defs={} expr=v1876[1] }
        ?5      = { defs={} expr=v1877[1] }
        zf      = { defs={} expr=v1878[1] }
        sf      = { defs={} expr=v1879[1] }
        tf      = { defs={} expr=v1880[1] }
        if      = { defs={} expr=v1881[1] }
        df      = { defs={} expr=v1882[1] }
        of      = { defs={} expr=v1883[1] }
        iopl0   = { defs={} expr=v1884[1] }
        iopl1   = { defs={} expr=v1885[1] }
        nt      = { defs={} expr=v1886[1] }
        ?15     = { defs={} expr=v1887[1] }
        rf      = { defs={} expr=v1888[1] }
        vm      = { defs={} expr=v1889[1] }
        ac      = { defs={} expr=v1890[1] }
        vif     = { defs={} expr=v1891[1] }
        vip     = { defs={} expr=v1892[1] }
        id      = { defs={} expr=v1893[1] }
        ?22     = { defs={} expr=v1894[1] }
        ?23     = { defs={} expr=v1895[1] }
        ?24     = { defs={} expr=v1896[1] }
        ?25     = { defs={} expr=v1897[1] }
        ?26     = { defs={} expr=v1898[1] }
        ?27     = { defs={} expr=v1899[1] }
        ?28     = { defs={} expr=v1900[1] }
        ?29     = { defs={} expr=v1901[1] }
        ?30     = { defs={} expr=v1902[1] }
        ?31     = { defs={} expr=v1903[1] }
        ip      = { defs={0x080483c5} expr=0x080483cc[32] }
    memory:
        address = { defs={0x080483c5} expr=0x080496f4[32] }
          value = { defs={0x080483c5} expr=1[32] }
          flags = { size=1 }
    ip = defs={0x080483c5} expr=0x080483cc[32]
0x80483cc:leave  
    registers:
        ax      = { defs={} expr=v1858[32] }
        cx      = { defs={} expr=v1859[32] }
        dx      = { defs={} expr=v1860[32] }
        bx      = { defs={} expr=v1861[32] }
        sp      = { defs={0x080483cc} expr=(add[32] v1863[32] 4[32]) }
        bp      = { defs={0x080483cc} expr=v1904[32] }
        si      = { defs={} expr=v1864[32] }
        di      = { defs={} expr=v1865[32] }
        es      = { defs={} expr=v1866[16] }
        cs      = { defs={} expr=v1867[16] }
        ss      = { defs={} expr=v1868[16] }
        ds      = { defs={} expr=v1869[16] }
        fs      = { defs={} expr=v1870[16] }
        gs      = { defs={} expr=v1871[16] }
        cf      = { defs={} expr=v1872[1] }
        ?1      = { defs={} expr=v1873[1] }
        pf      = { defs={} expr=v1874[1] }
        ?3      = { defs={} expr=v1875[1] }
        af      = { defs={} expr=v1876[1] }
        ?5      = { defs={} expr=v1877[1] }
        zf      = { defs={} expr=v1878[1] }
        sf      = { defs={} expr=v1879[1] }
        tf      = { defs={} expr=v1880[1] }
        if      = { defs={} expr=v1881[1] }
        df      = { defs={} expr=v1882[1] }
        of      = { defs={} expr=v1883[1] }
        iopl0   = { defs={} expr=v1884[1] }
        iopl1   = { defs={} expr=v1885[1] }
        nt      = { defs={} expr=v1886[1] }
        ?15     = { defs={} expr=v1887[1] }
        rf      = { defs={} expr=v1888[1] }
        vm      = { defs={} expr=v1889[1] }
        ac      = { defs={} expr=v1890[1] }
        vif     = { defs={} expr=v1891[1] }
        vip     = { defs={} expr=v1892[1] }
        id      = { defs={} expr=v1893[1] }
        ?22     = { defs={} expr=v1894[1] }
        ?23     = { defs={} expr=v1895[1] }
        ?24     = { defs={} expr=v1896[1] }
        ?25     = { defs={} expr=v1897[1] }
        ?26     = { defs={} expr=v1898[1] }
        ?27     = { defs={} expr=v1899[1] }
        ?28     = { defs={} expr=v1900[1] }
        ?29     = { defs={} expr=v1901[1] }
        ?30     = { defs={} expr=v1902[1] }
        ?31     = { defs={} expr=v1903[1] }
        ip      = { defs={0x080483c5,0x080483cc} expr=0x080483cd[32] }
    memory:
        address = { defs={0x080483c5} expr=0x080496f4[32] }
          value = { defs={0x080483c5} expr=1[32] }
          flags = { size=1 }
        address = { defs={0x080483cc} expr=v1863[32] }
          value = { defs={} expr=v1904[32] }
          flags = { size=4; read-only }
    ip = defs={0x080483c5,0x080483cc} expr=0x080483cd[32]
0x80483cd:ret    
    registers:
        ax      = { defs={} expr=v1858[32] }
        cx      = { defs={} expr=v1859[32] }
        dx      = { defs={} expr=v1860[32] }
        bx      = { defs={} expr=v1861[32] }
        sp      = { defs={0x080483cc,0x080483cd} expr=(add[32] (add[32] v1863[32] 4[32]) 4[32]) }
        bp      = { defs={0x080483cc} expr=v1904[32] }
        si      = { defs={} expr=v1864[32] }
        di      = { defs={} expr=v1865[32] }
        es      = { defs={} expr=v1866[16] }
        cs      = { defs={} expr=v1867[16] }
        ss      = { defs={} expr=v1868[16] }
        ds      = { defs={} expr=v1869[16] }
        fs      = { defs={} expr=v1870[16] }
        gs      = { defs={} expr=v1871[16] }
        cf      = { defs={} expr=v1872[1] }
        ?1      = { defs={} expr=v1873[1] }
        pf      = { defs={} expr=v1874[1] }
        ?3      = { defs={} expr=v1875[1] }
        af      = { defs={} expr=v1876[1] }
        ?5      = { defs={} expr=v1877[1] }
        zf      = { defs={} expr=v1878[1] }
        sf      = { defs={} expr=v1879[1] }
        tf      = { defs={} expr=v1880[1] }
        if      = { defs={} expr=v1881[1] }
        df      = { defs={} expr=v1882[1] }
        of      = { defs={} expr=v1883[1] }
        iopl0   = { defs={} expr=v1884[1] }
        iopl1   = { defs={} expr=v1885[1] }
        nt      = { defs={} expr=v1886[1] }
        ?15     = { defs={} expr=v1887[1] }
        rf      = { defs={} expr=v1888[1] }
        vm      = { defs={} expr=v1889[1] }
        ac      = { defs={} expr=v1890[1] }
        vif     = { defs={} expr=v1891[1] }
        vip     = { defs={} expr=v1892[1] }
        id      = { defs={} expr=v1893[1] }
        ?22     = { defs={} expr=v1894[1] }
        ?23     = { defs={} expr=v1895[1] }
        ?24     = { defs={} expr=v1896[1] }
        ?25     = { defs={} expr=v1897[1] }
        ?26     = { defs={} expr=v1898[1] }
        ?27     = { defs={} expr=v1899[1] }
        ?28     = { defs={} expr=v1900[1] }
        ?29     = { defs={} expr=v1901[1] }
        ?30     = { defs={} expr=v1902[1] }
        ?31     = { defs={} expr=v1903[1] }
        ip      = { defs={0x080483cd} expr=v1905[32] }
    memory:
        address = { defs={0x080483c5} expr=0x080496f4[32] }
          value = { defs={0x080483c5} expr=1[32] }
          flags = { size=1 }
        address = { defs={0x080483cc} expr=v1863[32] }
          value = { defs={} expr=v1904[32] }
          flags = { size=4; read-only }
        address = { defs={0x080483cc} expr=(add[32] v1863[32] 4[32]) }
          value = { defs={} expr=v1905[32] }
          flags = { size=4; read-only }
    ip = defs={0x080483cd} expr=v1905[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483d0:push   ebp
    registers:
        ax      = { defs={} expr=v1954[32] }
        cx      = { defs={} expr=v1955[32] }
        dx      = { defs={} expr=v1956[32] }
        bx      = { defs={} expr=v1957[32] }
        sp      = { defs={0x080483d0} expr=(add[32] v1958[32] -4[32]) }
        bp      = { defs={} expr=v1959[32] }
        si      = { defs={} expr=v1960[32] }
        di      = { defs={} expr=v1961[32] }
        es      = { defs={} expr=v1962[16] }
        cs      = { defs={} expr=v1963[16] }
        ss      = { defs={} expr=v1964[16] }
        ds      = { defs={} expr=v1965[16] }
        fs      = { defs={} expr=v1966[16] }
        gs      = { defs={} expr=v1967[16] }
        cf      = { defs={} expr=v1968[1] }
        ?1      = { defs={} expr=v1969[1] }
        pf      = { defs={} expr=v1970[1] }
        ?3      = { defs={} expr=v1971[1] }
        af      = { defs={} expr=v1972[1] }
        ?5      = { defs={} expr=v1973[1] }
        zf      = { defs={} expr=v1974[1] }
        sf      = { defs={} expr=v1975[1] }
        tf      = { defs={} expr=v1976[1] }
        if      = { defs={} expr=v1977[1] }
        df      = { defs={} expr=v1978[1] }
        of      = { defs={} expr=v1979[1] }
        iopl0   = { defs={} expr=v1980[1] }
        iopl1   = { defs={} expr=v1981[1] }
        nt      = { defs={} expr=v1982[1] }
        ?15     = { defs={} expr=v1983[1] }
        rf      = { defs={} expr=v1984[1] }
        vm      = { defs={} expr=v1985[1] }
        ac      = { defs={} expr=v1986[1] }
        vif     = { defs={} expr=v1987[1] }
        vip     = { defs={} expr=v1988[1] }
        id      = { defs={} expr=v1989[1] }
        ?22     = { defs={} expr=v1990[1] }
        ?23     = { defs={} expr=v1991[1] }
        ?24     = { defs={} expr=v1992[1] }
        ?25     = { defs={} expr=v1993[1] }
        ?26     = { defs={} expr=v1994[1] }
        ?27     = { defs={} expr=v1995[1] }
        ?28     = { defs={} expr=v1996[1] }
        ?29     = { defs={} expr=v1997[1] }
        ?30     = { defs={} expr=v1998[1] }
        ?31     = { defs={} expr=v1999[1] }
        ip      = { defs={0x080483d0} expr=0x080483d1[32] }
    memory:
        address = { defs={0x080483d0} expr=(add[32] v1958[32] -4[32]) }
          value = { defs={0x080483d0} expr=v1959[32] }
          flags = { size=4 }
    ip = defs={0x080483d0} expr=0x080483d1[32]
0x80483d1:mov    ebp, esp
    registers:
        ax      = { defs={} expr=v1954[32] }
        cx      = { defs={} expr=v1955[32] }
        dx      = { defs={} expr=v1956[32] }
        bx      = { defs={} expr=v1957[32] }
        sp      = { defs={0x080483d0} expr=(add[32] v1958[32] -4[32]) }
        bp      = { defs={0x080483d0,0x080483d1} expr=(add[32] v1958[32] -4[32]) }
        si      = { defs={} expr=v1960[32] }
        di      = { defs={} expr=v1961[32] }
        es      = { defs={} expr=v1962[16] }
        cs      = { defs={} expr=v1963[16] }
        ss      = { defs={} expr=v1964[16] }
        ds      = { defs={} expr=v1965[16] }
        fs      = { defs={} expr=v1966[16] }
        gs      = { defs={} expr=v1967[16] }
        cf      = { defs={} expr=v1968[1] }
        ?1      = { defs={} expr=v1969[1] }
        pf      = { defs={} expr=v1970[1] }
        ?3      = { defs={} expr=v1971[1] }
        af      = { defs={} expr=v1972[1] }
        ?5      = { defs={} expr=v1973[1] }
        zf      = { defs={} expr=v1974[1] }
        sf      = { defs={} expr=v1975[1] }
        tf      = { defs={} expr=v1976[1] }
        if      = { defs={} expr=v1977[1] }
        df      = { defs={} expr=v1978[1] }
        of      = { defs={} expr=v1979[1] }
        iopl0   = { defs={} expr=v1980[1] }
        iopl1   = { defs={} expr=v1981[1] }
        nt      = { defs={} expr=v1982[1] }
        ?15     = { defs={} expr=v1983[1] }
        rf      = { defs={} expr=v1984[1] }
        vm      = { defs={} expr=v1985[1] }
        ac      = { defs={} expr=v1986[1] }
        vif     = { defs={} expr=v1987[1] }
        vip     = { defs={} expr=v1988[1] }
        id      = { defs={} expr=v1989[1] }
        ?22     = { defs={} expr=v1990[1] }
        ?23     = { defs={} expr=v1991[1] }
        ?24     = { defs={} expr=v1992[1] }
        ?25     = { defs={} expr=v1993[1] }
        ?26     = { defs={} expr=v1994[1] }
        ?27     = { defs={} expr=v1995[1] }
        ?28     = { defs={} expr=v1996[1] }
        ?29     = { defs={} expr=v1997[1] }
        ?30     = { defs={} expr=v1998[1] }
        ?31     = { defs={} expr=v1999[1] }
        ip      = { defs={0x080483d0,0x080483d1} expr=0x080483d3[32] }
    memory:
        address = { defs={0x080483d0} expr=(add[32] v1958[32] -4[32]) }
          value = { defs={0x080483d0} expr=v1959[32] }
          flags = { size=4 }
    ip = defs={0x080483d0,0x080483d1} expr=0x080483d3[32]
0x80483d3:sub    esp, 0x08
    registers:
        ax      = { defs={} expr=v1954[32] }
        cx      = { defs={} expr=v1955[32] }
        dx      = { defs={} expr=v1956[32] }
        bx      = { defs={} expr=v1957[32] }
        sp      = { defs={0x080483d0,0x080483d3} expr=(add[32] (add[32] v1958[32] -4[32]) -8[32]) }
        bp      = { defs={0x080483d0,0x080483d1} expr=(add[32] v1958[32] -4[32]) }
        si      = { defs={} expr=v1960[32] }
        di      = { defs={} expr=v1961[32] }
        es      = { defs={} expr=v1962[16] }
        cs      = { defs={} expr=v1963[16] }
        ss      = { defs={} expr=v1964[16] }
        ds      = { defs={} expr=v1965[16] }
        fs      = { defs={} expr=v1966[16] }
        gs      = { defs={} expr=v1967[16] }
        cf      = { defs={0x080483d0,0x080483d3} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1958[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1958[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v1969[1] }
        pf      = { defs={0x080483d0,0x080483d3} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1958[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1958[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1958[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1958[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1958[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1958[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1958[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1958[32] -4[32]) -8[32]))))))) }
        ?3      = { defs={} expr=v1971[1] }
        af      = { defs={0x080483d0,0x080483d3} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1958[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1958[32] -4[32])) 4294967288[33])))))) }
        ?5      = { defs={} expr=v1973[1] }
        zf      = { defs={0x080483d0,0x080483d3} expr=(zerop[1] (add[32] (add[32] v1958[32] -4[32]) -8[32])) }
        sf      = { defs={0x080483d0,0x080483d3} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v1958[32] -4[32]) -8[32])) }
        tf      = { defs={} expr=v1976[1] }
        if      = { defs={} expr=v1977[1] }
        df      = { defs={} expr=v1978[1] }
        of      = { defs={0x080483d0,0x080483d3} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1958[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1958[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1958[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1958[32] -4[32])) 4294967288[33])))))) }
        iopl0   = { defs={} expr=v1980[1] }
        iopl1   = { defs={} expr=v1981[1] }
        nt      = { defs={} expr=v1982[1] }
        ?15     = { defs={} expr=v1983[1] }
        rf      = { defs={} expr=v1984[1] }
        vm      = { defs={} expr=v1985[1] }
        ac      = { defs={} expr=v1986[1] }
        vif     = { defs={} expr=v1987[1] }
        vip     = { defs={} expr=v1988[1] }
        id      = { defs={} expr=v1989[1] }
        ?22     = { defs={} expr=v1990[1] }
        ?23     = { defs={} expr=v1991[1] }
        ?24     = { defs={} expr=v1992[1] }
        ?25     = { defs={} expr=v1993[1] }
        ?26     = { defs={} expr=v1994[1] }
        ?27     = { defs={} expr=v1995[1] }
        ?28     = { defs={} expr=v1996[1] }
        ?29     = { defs={} expr=v1997[1] }
        ?30     = { defs={} expr=v1998[1] }
        ?31     = { defs={} expr=v1999[1] }
        ip      = { defs={0x080483d0,0x080483d1,0x080483d3} expr=0x080483d6[32] }
    memory:
        address = { defs={0x080483d0} expr=(add[32] v1958[32] -4[32]) }
          value = { defs={0x080483d0} expr=v1959[32] }
          flags = { size=4 }
    ip = defs={0x080483d0,0x080483d1,0x080483d3} expr=0x080483d6[32]
0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8<.jcr>]
    registers:
        ax      = { defs={0x080483d6} expr=v2000[32] }
        cx      = { defs={} expr=v1955[32] }
        dx      = { defs={} expr=v1956[32] }
        bx      = { defs={} expr=v1957[32] }
        sp      = { defs={0x080483d0,0x080483d3} expr=(add[32] (add[32] v1958[32] -4[32]) -8[32]) }
        bp      = { defs={0x080483d0,0x080483d1} expr=(add[32] v1958[32] -4[32]) }
        si      = { defs={} expr=v1960[32] }
        di      = { defs={} expr=v1961[32] }
        es      = { defs={} expr=v1962[16] }
        cs      = { defs={} expr=v1963[16] }
        ss      = { defs={} expr=v1964[16] }
        ds      = { defs={} expr=v1965[16] }
        fs      = { defs={} expr=v1966[16] }
        gs      = { defs={} expr=v1967[16] }
        cf      = { defs={0x080483d0,0x080483d3} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1958[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1958[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v1969[1] }
        pf      = { defs={0x080483d0,0x080483d3} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1958[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1958[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1958[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1958[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1958[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1958[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1958[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1958[32] -4[32]) -8[32]))))))) }
        ?3      = { defs={} expr=v1971[1] }
        af      = { defs={0x080483d0,0x080483d3} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1958[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1958[32] -4[32])) 4294967288[33])))))) }
        ?5      = { defs={} expr=v1973[1] }
        zf      = { defs={0x080483d0,0x080483d3} expr=(zerop[1] (add[32] (add[32] v1958[32] -4[32]) -8[32])) }
        sf      = { defs={0x080483d0,0x080483d3} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v1958[32] -4[32]) -8[32])) }
        tf      = { defs={} expr=v1976[1] }
        if      = { defs={} expr=v1977[1] }
        df      = { defs={} expr=v1978[1] }
        of      = { defs={0x080483d0,0x080483d3} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1958[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1958[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1958[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1958[32] -4[32])) 4294967288[33])))))) }
        iopl0   = { defs={} expr=v1980[1] }
        iopl1   = { defs={} expr=v1981[1] }
        nt      = { defs={} expr=v1982[1] }
        ?15     = { defs={} expr=v1983[1] }
        rf      = { defs={} expr=v1984[1] }
        vm      = { defs={} expr=v1985[1] }
        ac      = { defs={} expr=v1986[1] }
        vif     = { defs={} expr=v1987[1] }
        vip     = { defs={} expr=v1988[1] }
        id      = { defs={} expr=v1989[1] }
        ?22     = { defs={} expr=v1990[1] }
        ?23     = { defs={} expr=v1991[1] }
        ?24     = { defs={} expr=v1992[1] }
        ?25     = { defs={} expr=v1993[1] }
        ?26     = { defs={} expr=v1994[1] }
        ?27     = { defs={} expr=v1995[1] }
        ?28     = { defs={} expr=v1996[1] }
        ?29     = { defs={} expr=v1997[1] }
        ?30     = { defs={} expr=v1998[1] }
        ?31     = { defs={} expr=v1999[1] }
        ip      = { defs={0x080483d0,0x080483d1,0x080483d3,0x080483d6} expr=0x080483db[32] }
    memory:
        address = { defs={0x080483d0} expr=(add[32] v1958[32] -4[32]) }
          value = { defs={0x080483d0} expr=v1959[32] }
          flags = { size=4 }
        address = { defs={0x080483d6} expr=0x080495f8[32] }
          value = { defs={} expr=v2000[32] }
          flags = { size=4; read-only }
    ip = defs={0x080483d0,0x080483d1,0x080483d3,0x080483d6} expr=0x080483db[32]
0x80483db:test   eax, eax
    registers:
        ax      = { defs={0x080483d6} expr=v2000[32] }
        cx      = { defs={} expr=v1955[32] }
        dx      = { defs={} expr=v1956[32] }
        bx      = { defs={} expr=v1957[32] }
        sp      = { defs={0x080483d0,0x080483d3} expr=(add[32] (add[32] v1958[32] -4[32]) -8[32]) }
        bp      = { defs={0x080483d0,0x080483d1} expr=(add[32] v1958[32] -4[32]) }
        si      = { defs={} expr=v1960[32] }
        di      = { defs={} expr=v1961[32] }
        es      = { defs={} expr=v1962[16] }
        cs      = { defs={} expr=v1963[16] }
        ss      = { defs={} expr=v1964[16] }
        ds      = { defs={} expr=v1965[16] }
        fs      = { defs={} expr=v1966[16] }
        gs      = { defs={} expr=v1967[16] }
        cf      = { defs={0x080483db} expr=0[1] }
        ?1      = { defs={} expr=v1969[1] }
        pf      = { defs={0x080483d6,0x080483db} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v2000[32] v2000[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v2000[32] v2000[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v2000[32] v2000[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v2000[32] v2000[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v2000[32] v2000[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v2000[32] v2000[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v2000[32] v2000[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v2000[32] v2000[32]))))))) }
        ?3      = { defs={} expr=v1971[1] }
        af      = { defs={0x080483db} expr=v2001[1] }
        ?5      = { defs={} expr=v1973[1] }
        zf      = { defs={0x080483d6,0x080483db} expr=(zerop[1] (bv-and[32] v2000[32] v2000[32])) }
        sf      = { defs={0x080483d6,0x080483db} expr=(extract[1] 31[32] 32[32] (bv-and[32] v2000[32] v2000[32])) }
        tf      = { defs={} expr=v1976[1] }
        if      = { defs={} expr=v1977[1] }
        df      = { defs={} expr=v1978[1] }
        of      = { defs={0x080483db} expr=0[1] }
        iopl0   = { defs={} expr=v1980[1] }
        iopl1   = { defs={} expr=v1981[1] }
        nt      = { defs={} expr=v1982[1] }
        ?15     = { defs={} expr=v1983[1] }
        rf      = { defs={} expr=v1984[1] }
        vm      = { defs={} expr=v1985[1] }
        ac      = { defs={} expr=v1986[1] }
        vif     = { defs={} expr=v1987[1] }
        vip     = { defs={} expr=v1988[1] }
        id      = { defs={} expr=v1989[1] }
        ?22     = { defs={} expr=v1990[1] }
        ?23     = { defs={} expr=v1991[1] }
        ?24     = { defs={} expr=v1992[1] }
        ?25     = { defs={} expr=v1993[1] }
        ?26     = { defs={} expr=v1994[1] }
        ?27     = { defs={} expr=v1995[1] }
        ?28     = { defs={} expr=v1996[1] }
        ?29     = { defs={} expr=v1997[1] }
        ?30     = { defs={} expr=v1998[1] }
        ?31     = { defs={} expr=v1999[1] }
        ip      = { defs={0x080483d0,0x080483d1,0x080483d3,0x080483d6,0x080483db} expr=0x080483dd[32] }
    memory:
        address = { defs={0x080483d0} expr=(add[32] v1958[32] -4[32]) }
          value = { defs={0x080483d0} expr=v1959[32] }
          flags = { size=4 }
        address = { defs={0x080483d6} expr=0x080495f8[32] }
          value = { defs={} expr=v2000[32] }
          flags = { size=4; read-only }
    ip = defs={0x080483d0,0x080483d1,0x080483d3,0x080483d6,0x080483db} expr=0x080483dd[32]
0x80483dd:je     0x08048400<<Insn>>
    registers:
        ax      = { defs={0x080483d6} expr=v2000[32] }
        cx      = { defs={} expr=v1955[32] }
        dx      = { defs={} expr=v1956[32] }
        bx      = { defs={} expr=v1957[32] }
        sp      = { defs={0x080483d0,0x080483d3} expr=(add[32] (add[32] v1958[32] -4[32]) -8[32]) }
        bp      = { defs={0x080483d0,0x080483d1} expr=(add[32] v1958[32] -4[32]) }
        si      = { defs={} expr=v1960[32] }
        di      = { defs={} expr=v1961[32] }
        es      = { defs={} expr=v1962[16] }
        cs      = { defs={} expr=v1963[16] }
        ss      = { defs={} expr=v1964[16] }
        ds      = { defs={} expr=v1965[16] }
        fs      = { defs={} expr=v1966[16] }
        gs      = { defs={} expr=v1967[16] }
        cf      = { defs={0x080483db} expr=0[1] }
        ?1      = { defs={} expr=v1969[1] }
        pf      = { defs={0x080483d6,0x080483db} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v2000[32] v2000[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v2000[32] v2000[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v2000[32] v2000[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v2000[32] v2000[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v2000[32] v2000[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v2000[32] v2000[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v2000[32] v2000[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v2000[32] v2000[32]))))))) }
        ?3      = { defs={} expr=v1971[1] }
        af      = { defs={0x080483db} expr=v2001[1] }
        ?5      = { defs={} expr=v1973[1] }
        zf      = { defs={0x080483d6,0x080483db} expr=(zerop[1] (bv-and[32] v2000[32] v2000[32])) }
        sf      = { defs={0x080483d6,0x080483db} expr=(extract[1] 31[32] 32[32] (bv-and[32] v2000[32] v2000[32])) }
        tf      = { defs={} expr=v1976[1] }
        if      = { defs={} expr=v1977[1] }
        df      = { defs={} expr=v1978[1] }
        of      = { defs={0x080483db} expr=0[1] }
        iopl0   = { defs={} expr=v1980[1] }
        iopl1   = { defs={} expr=v1981[1] }
        nt      = { defs={} expr=v1982[1] }
        ?15     = { defs={} expr=v1983[1] }
        rf      = { defs={} expr=v1984[1] }
        vm      = { defs={} expr=v1985[1] }
        ac      = { defs={} expr=v1986[1] }
        vif     = { defs={} expr=v1987[1] }
        vip     = { defs={} expr=v1988[1] }
        id      = { defs={} expr=v1989[1] }
        ?22     = { defs={} expr=v1990[1] }
        ?23     = { defs={} expr=v1991[1] }
        ?24     = { defs={} expr=v1992[1] }
        ?25     = { defs={} expr=v1993[1] }
        ?26     = { defs={} expr=v1994[1] }
        ?27     = { defs={} expr=v1995[1] }
        ?28     = { defs={} expr=v1996[1] }
        ?29     = { defs={} expr=v1997[1] }
        ?30     = { defs={} expr=v1998[1] }
        ?31     = { defs={} expr=v1999[1] }
        ip      = { defs={0x080483d0,0x080483d1,0x080483d3,0x080483d6,0x080483db,0x080483dd} expr=(ite[32] (zerop[1] (bv-and[32] v2000[32] v2000[32])) 0x08048400[32] 0x080483df[32]) }
    memory:
        address = { defs={0x080483d0} expr=(add[32] v1958[32] -4[32]) }
          value = { defs={0x080483d0} expr=v1959[32] }
          flags = { size=4 }
        address = { defs={0x080483d6} expr=0x080495f8[32] }
          value = { defs={} expr=v2000[32] }
          flags = { size=4; read-only }
    ip = defs={0x080483d0,0x080483d1,0x080483d3,0x080483d6,0x080483db,0x080483dd} expr=(ite[32] (zerop[1] (bv-and[32] v2000[32] v2000[32])) 0x08048400[32] 0x080483df[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483df:mov    eax, 0x00000000
    registers:
        ax      = { defs={0x080483df} expr=0[32] }
        cx      = { defs={} expr=v2051[32] }
        dx      = { defs={} expr=v2052[32] }
        bx      = { defs={} expr=v2053[32] }
        sp      = { defs={} expr=v2054[32] }
        bp      = { defs={} expr=v2055[32] }
        si      = { defs={} expr=v2056[32] }
        di      = { defs={} expr=v2057[32] }
        es      = { defs={} expr=v2058[16] }
        cs      = { defs={} expr=v2059[16] }
        ss      = { defs={} expr=v2060[16] }
        ds      = { defs={} expr=v2061[16] }
        fs      = { defs={} expr=v2062[16] }
        gs      = { defs={} expr=v2063[16] }
        cf      = { defs={} expr=v2064[1] }
        ?1      = { defs={} expr=v2065[1] }
        pf      = { defs={} expr=v2066[1] }
        ?3      = { defs={} expr=v2067[1] }
        af      = { defs={} expr=v2068[1] }
        ?5      = { defs={} expr=v2069[1] }
        zf      = { defs={} expr=v2070[1] }
        sf      = { defs={} expr=v2071[1] }
        tf      = { defs={} expr=v2072[1] }
        if      = { defs={} expr=v2073[1] }
        df      = { defs={} expr=v2074[1] }
        of      = { defs={} expr=v2075[1] }
        iopl0   = { defs={} expr=v2076[1] }
        iopl1   = { defs={} expr=v2077[1] }
        nt      = { defs={} expr=v2078[1] }
        ?15     = { defs={} expr=v2079[1] }
        rf      = { defs={} expr=v2080[1] }
        vm      = { defs={} expr=v2081[1] }
        ac      = { defs={} expr=v2082[1] }
        vif     = { defs={} expr=v2083[1] }
        vip     = { defs={} expr=v2084[1] }
        id      = { defs={} expr=v2085[1] }
        ?22     = { defs={} expr=v2086[1] }
        ?23     = { defs={} expr=v2087[1] }
        ?24     = { defs={} expr=v2088[1] }
        ?25     = { defs={} expr=v2089[1] }
        ?26     = { defs={} expr=v2090[1] }
        ?27     = { defs={} expr=v2091[1] }
        ?28     = { defs={} expr=v2092[1] }
        ?29     = { defs={} expr=v2093[1] }
        ?30     = { defs={} expr=v2094[1] }
        ?31     = { defs={} expr=v2095[1] }
        ip      = { defs={0x080483df} expr=0x080483e4[32] }
    memory:
        (empty)
    ip = defs={0x080483df} expr=0x080483e4[32]
0x80483e4:test   eax, eax
    registers:
        ax      = { defs={0x080483df} expr=0[32] }
        cx      = { defs={} expr=v2051[32] }
        dx      = { defs={} expr=v2052[32] }
        bx      = { defs={} expr=v2053[32] }
        sp      = { defs={} expr=v2054[32] }
        bp      = { defs={} expr=v2055[32] }
        si      = { defs={} expr=v2056[32] }
        di      = { defs={} expr=v2057[32] }
        es      = { defs={} expr=v2058[16] }
        cs      = { defs={} expr=v2059[16] }
        ss      = { defs={} expr=v2060[16] }
        ds      = { defs={} expr=v2061[16] }
        fs      = { defs={} expr=v2062[16] }
        gs      = { defs={} expr=v2063[16] }
        cf      = { defs={0x080483e4} expr=0[1] }
        ?1      = { defs={} expr=v2065[1] }
        pf      = { defs={0x080483df,0x080483e4} expr=1[1] }
        ?3      = { defs={} expr=v2067[1] }
        af      = { defs={0x080483e4} expr=v2096[1] }
        ?5      = { defs={} expr=v2069[1] }
        zf      = { defs={0x080483df,0x080483e4} expr=1[1] }
        sf      = { defs={0x080483df,0x080483e4} expr=0[1] }
        tf      = { defs={} expr=v2072[1] }
        if      = { defs={} expr=v2073[1] }
        df      = { defs={} expr=v2074[1] }
        of      = { defs={0x080483e4} expr=0[1] }
        iopl0   = { defs={} expr=v2076[1] }
        iopl1   = { defs={} expr=v2077[1] }
        nt      = { defs={} expr=v2078[1] }
        ?15     = { defs={} expr=v2079[1] }
        rf      = { defs={} expr=v2080[1] }
        vm      = { defs={} expr=v2081[1] }
        ac      = { defs={} expr=v2082[1] }
        vif     = { defs={} expr=v2083[1] }
        vip     = { defs={} expr=v2084[1] }
        id      = { defs={} expr=v2085[1] }
        ?22     = { defs={} expr=v2086[1] }
        ?23     = { defs={} expr=v2087[1] }
        ?24     = { defs={} expr=v2088[1] }
        ?25     = { defs={} expr=v2089[1] }
        ?26     = { defs={} expr=v2090[1] }
        ?27     = { defs={} expr=v2091[1] }
        ?28     = { defs={} expr=v2092[1] }
        ?29     = { defs={} expr=v2093[1] }
        ?30     = { defs={} expr=v2094[1] }
        ?31     = { defs={} expr=v2095[1] }
        ip      = { defs={0x080483df,0x080483e4} expr=0x080483e6[32] }
    memory:
        (empty)
    ip = defs={0x080483df,0x080483e4} expr=0x080483e6[32]
0x80483e6:je     0x08048400<<Insn>>
    registers:
        ax      = { defs={0x080483df} expr=0[32] }
        cx      = { defs={} expr=v2051[32] }
        dx      = { defs={} expr=v2052[32] }
        bx      = { defs={} expr=v2053[32] }
        sp      = { defs={} expr=v2054[32] }
        bp      = { defs={} expr=v2055[32] }
        si      = { defs={} expr=v2056[32] }
        di      = { defs={} expr=v2057[32] }
        es      = { defs={} expr=v2058[16] }
        cs      = { defs={} expr=v2059[16] }
        ss      = { defs={} expr=v2060[16] }
        ds      = { defs={} expr=v2061[16] }
        fs      = { defs={} expr=v2062[16] }
        gs      = { defs={} expr=v2063[16] }
        cf      = { defs={0x080483e4} expr=0[1] }
        ?1      = { defs={} expr=v2065[1] }
        pf      = { defs={0x080483df,0x080483e4} expr=1[1] }
        ?3      = { defs={} expr=v2067[1] }
        af      = { defs={0x080483e4} expr=v2096[1] }
        ?5      = { defs={} expr=v2069[1] }
        zf      = { defs={0x080483df,0x080483e4} expr=1[1] }
        sf      = { defs={0x080483df,0x080483e4} expr=0[1] }
        tf      = { defs={} expr=v2072[1] }
        if      = { defs={} expr=v2073[1] }
        df      = { defs={} expr=v2074[1] }
        of      = { defs={0x080483e4} expr=0[1] }
        iopl0   = { defs={} expr=v2076[1] }
        iopl1   = { defs={} expr=v2077[1] }
        nt      = { defs={} expr=v2078[1] }
        ?15     = { defs={} expr=v2079[1] }
        rf      = { defs={} expr=v2080[1] }
        vm      = { defs={} expr=v2081[1] }
        ac      = { defs={} expr=v2082[1] }
        vif     = { defs={} expr=v2083[1] }
        vip     = { defs={} expr=v2084[1] }
        id      = { defs={} expr=v2085[1] }
        ?22     = { defs={} expr=v2086[1] }
        ?23     = { defs={} expr=v2087[1] }
        ?24     = { defs={} expr=v2088[1] }
        ?25     = { defs={} expr=v2089[1] }
        ?26     = { defs={} expr=v2090[1] }
        ?27     = { defs={} expr=v2091[1] }
        ?28     = { defs={} expr=v2092[1] }
        ?29     = { defs={} expr=v2093[1] }
        ?30     = { defs={} expr=v2094[1] }
        ?31     = { defs={} expr=v2095[1] }
        ip      = { defs={0x080483df,0x080483e4,0x080483e6} expr=0x08048400[32] }
    memory:
        (empty)
    ip = defs={0x080483df,0x080483e4,0x080483e6} expr=0x08048400[32]
0x8048400:mov    esp, ebp
    registers:
        ax      = { defs={0x080483df} expr=0[32] }
        cx      = { defs={} expr=v2051[32] }
        dx      = { defs={} expr=v2052[32] }
        bx      = { defs={} expr=v2053[32] }
        sp      = { defs={0x08048400} expr=v2055[32] }
        bp      = { defs={} expr=v2055[32] }
        si      = { defs={} expr=v2056[32] }
        di      = { defs={} expr=v2057[32] }
        es      = { defs={} expr=v2058[16] }
        cs      = { defs={} expr=v2059[16] }
        ss      = { defs={} expr=v2060[16] }
        ds      = { defs={} expr=v2061[16] }
        fs      = { defs={} expr=v2062[16] }
        gs      = { defs={} expr=v2063[16] }
        cf      = { defs={0x080483e4} expr=0[1] }
        ?1      = { defs={} expr=v2065[1] }
        pf      = { defs={0x080483df,0x080483e4} expr=1[1] }
        ?3      = { defs={} expr=v2067[1] }
        af      = { defs={0x080483e4} expr=v2096[1] }
        ?5      = { defs={} expr=v2069[1] }
        zf      = { defs={0x080483df,0x080483e4} expr=1[1] }
        sf      = { defs={0x080483df,0x080483e4} expr=0[1] }
        tf      = { defs={} expr=v2072[1] }
        if      = { defs={} expr=v2073[1] }
        df      = { defs={} expr=v2074[1] }
        of      = { defs={0x080483e4} expr=0[1] }
        iopl0   = { defs={} expr=v2076[1] }
        iopl1   = { defs={} expr=v2077[1] }
        nt      = { defs={} expr=v2078[1] }
        ?15     = { defs={} expr=v2079[1] }
        rf      = { defs={} expr=v2080[1] }
        vm      = { defs={} expr=v2081[1] }
        ac      = { defs={} expr=v2082[1] }
        vif     = { defs={} expr=v2083[1] }
        vip     = { defs={} expr=v2084[1] }
        id      = { defs={} expr=v2085[1] }
        ?22     = { defs={} expr=v2086[1] }
        ?23     = { defs={} expr=v2087[1] }
        ?24     = { defs={} expr=v2088[1] }
        ?25     = { defs={} expr=v2089[1] }
        ?26     = { defs={} expr=v2090[1] }
        ?27     = { defs={} expr=v2091[1] }
        ?28     = { defs={} expr=v2092[1] }
        ?29     = { defs={} expr=v2093[1] }
        ?30     = { defs={} expr=v2094[1] }
        ?31     = { defs={} expr=v2095[1] }
        ip      = { defs={0x080483df,0x080483e4,0x080483e6,0x08048400} expr=0x08048402[32] }
    memory:
        (empty)
    ip = defs={0x080483df,0x080483e4,0x080483e6,0x08048400} expr=0x08048402[32]
0x8048402:pop    ebp
    registers:
        ax      = { defs={0x080483df} expr=0[32] }
        cx      = { defs={} expr=v2051[32] }
        dx      = { defs={} expr=v2052[32] }
        bx      = { defs={} expr=v2053[32] }
        sp      = { defs={0x08048400,0x08048402} expr=(add[32] v2055[32] 4[32]) }
        bp      = { defs={0x08048402} expr=v2097[32] }
        si      = { defs={} expr=v2056[32] }
        di      = { defs={} expr=v2057[32] }
        es      = { defs={} expr=v2058[16] }
        cs      = { defs={} expr=v2059[16] }
        ss      = { defs={} expr=v2060[16] }
        ds      = { defs={} expr=v2061[16] }
        fs      = { defs={} expr=v2062[16] }
        gs      = { defs={} expr=v2063[16] }
        cf      = { defs={0x080483e4} expr=0[1] }
        ?1      = { defs={} expr=v2065[1] }
        pf      = { defs={0x080483df,0x080483e4} expr=1[1] }
        ?3      = { defs={} expr=v2067[1] }
        af      = { defs={0x080483e4} expr=v2096[1] }
        ?5      = { defs={} expr=v2069[1] }
        zf      = { defs={0x080483df,0x080483e4} expr=1[1] }
        sf      = { defs={0x080483df,0x080483e4} expr=0[1] }
        tf      = { defs={} expr=v2072[1] }
        if      = { defs={} expr=v2073[1] }
        df      = { defs={} expr=v2074[1] }
        of      = { defs={0x080483e4} expr=0[1] }
        iopl0   = { defs={} expr=v2076[1] }
        iopl1   = { defs={} expr=v2077[1] }
        nt      = { defs={} expr=v2078[1] }
        ?15     = { defs={} expr=v2079[1] }
        rf      = { defs={} expr=v2080[1] }
        vm      = { defs={} expr=v2081[1] }
        ac      = { defs={} expr=v2082[1] }
        vif     = { defs={} expr=v2083[1] }
        vip     = { defs={} expr=v2084[1] }
        id      = { defs={} expr=v2085[1] }
        ?22     = { defs={} expr=v2086[1] }
        ?23     = { defs={} expr=v2087[1] }
        ?24     = { defs={} expr=v2088[1] }
        ?25     = { defs={} expr=v2089[1] }
        ?26     = { defs={} expr=v2090[1] }
        ?27     = { defs={} expr=v2091[1] }
        ?28     = { defs={} expr=v2092[1] }
        ?29     = { defs={} expr=v2093[1] }
        ?30     = { defs={} expr=v2094[1] }
        ?31     = { defs={} expr=v2095[1] }
        ip      = { defs={0x080483df,0x080483e4,0x080483e6,0x08048400,0x08048402} expr=0x08048403[32] }
    memory:
        address = { defs={0x08048400} expr=v2055[32] }
          value = { defs={} expr=v2097[32] }
          flags = { size=4; read-only }
    ip = defs={0x080483df,0x080483e4,0x080483e6,0x08048400,0x08048402} expr=0x08048403[32]
0x8048403:ret    
    registers:
        ax      = { defs={0x080483df} expr=0[32] }
        cx      = { defs={} expr=v2051[32] }
        dx      = { defs={} expr=v2052[32] }
        bx      = { defs={} expr=v2053[32] }
        sp      = { defs={0x08048400,0x08048402,0x08048403} expr=(add[32] (add[32] v2055[32] 4[32]) 4[32]) }
        bp      = { defs={0x08048402} expr=v2097[32] }
        si      = { defs={} expr=v2056[32] }
        di      = { defs={} expr=v2057[32] }
        es      = { defs={} expr=v2058[16] }
        cs      = { defs={} expr=v2059[16] }
        ss      = { defs={} expr=v2060[16] }
        ds      = { defs={} expr=v2061[16] }
        fs      = { defs={} expr=v2062[16] }
        gs      = { defs={} expr=v2063[16] }
        cf      = { defs={0x080483e4} expr=0[1] }
        ?1      = { defs={} expr=v2065[1] }
        pf      = { defs={0x080483df,0x080483e4} expr=1[1] }
        ?3      = { defs={} expr=v2067[1] }
        af      = { defs={0x080483e4} expr=v2096[1] }
        ?5      = { defs={} expr=v2069[1] }
        zf      = { defs={0x080483df,0x080483e4} expr=1[1] }
        sf      = { defs={0x080483df,0x080483e4} expr=0[1] }
        tf      = { defs={} expr=v2072[1] }
        if      = { defs={} expr=v2073[1] }
        df      = { defs={} expr=v2074[1] }
        of      = { defs={0x080483e4} expr=0[1] }
        iopl0   = { defs={} expr=v2076[1] }
        iopl1   = { defs={} expr=v2077[1] }
        nt      = { defs={} expr=v2078[1] }
        ?15     = { defs={} expr=v2079[1] }
        rf      = { defs={} expr=v2080[1] }
        vm      = { defs={} expr=v2081[1] }
        ac      = { defs={} expr=v2082[1] }
        vif     = { defs={} expr=v2083[1] }
        vip     = { defs={} expr=v2084[1] }
        id      = { defs={} expr=v2085[1] }
        ?22     = { defs={} expr=v2086[1] }
        ?23     = { defs={} expr=v2087[1] }
        ?24     = { defs={} expr=v2088[1] }
        ?25     = { defs={} expr=v2089[1] }
        ?26     = { defs={} expr=v2090[1] }
        ?27     = { defs={} expr=v2091[1] }
        ?28     = { defs={} expr=v2092[1] }
        ?29     = { defs={} expr=v2093[1] }
        ?30     = { defs={} expr=v2094[1] }
        ?31     = { defs={} expr=v2095[1] }
        ip      = { defs={0x08048403} expr=v2098[32] }
    memory:
        address = { defs={0x08048400} expr=v2055[32] }
          value = { defs={} expr=v2097[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048400,0x08048402} expr=(add[32] v2055[32] 4[32]) }
          value = { defs={} expr=v2098[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048403} expr=v2098[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8<.jcr>
    registers:
        ax      = { defs={} expr=v2147[32] }
        cx      = { defs={} expr=v2148[32] }
        dx      = { defs={} expr=v2149[32] }
        bx      = { defs={} expr=v2150[32] }
        sp      = { defs={} expr=v2151[32] }
        bp      = { defs={} expr=v2152[32] }
        si      = { defs={} expr=v2153[32] }
        di      = { defs={} expr=v2154[32] }
        es      = { defs={} expr=v2155[16] }
        cs      = { defs={} expr=v2156[16] }
        ss      = { defs={} expr=v2157[16] }
        ds      = { defs={} expr=v2158[16] }
        fs      = { defs={} expr=v2159[16] }
        gs      = { defs={} expr=v2160[16] }
        cf      = { defs={} expr=v2161[1] }
        ?1      = { defs={} expr=v2162[1] }
        pf      = { defs={} expr=v2163[1] }
        ?3      = { defs={} expr=v2164[1] }
        af      = { defs={} expr=v2165[1] }
        ?5      = { defs={} expr=v2166[1] }
        zf      = { defs={} expr=v2167[1] }
        sf      = { defs={} expr=v2168[1] }
        tf      = { defs={} expr=v2169[1] }
        if      = { defs={} expr=v2170[1] }
        df      = { defs={} expr=v2171[1] }
        of      = { defs={} expr=v2172[1] }
        iopl0   = { defs={} expr=v2173[1] }
        iopl1   = { defs={} expr=v2174[1] }
        nt      = { defs={} expr=v2175[1] }
        ?15     = { defs={} expr=v2176[1] }
        rf      = { defs={} expr=v2177[1] }
        vm      = { defs={} expr=v2178[1] }
        ac      = { defs={} expr=v2179[1] }
        vif     = { defs={} expr=v2180[1] }
        vip     = { defs={} expr=v2181[1] }
        id      = { defs={} expr=v2182[1] }
        ?22     = { defs={} expr=v2183[1] }
        ?23     = { defs={} expr=v2184[1] }
        ?24     = { defs={} expr=v2185[1] }
        ?25     = { defs={} expr=v2186[1] }
        ?26     = { defs={} expr=v2187[1] }
        ?27     = { defs={} expr=v2188[1] }
        ?28     = { defs={} expr=v2189[1] }
        ?29     = { defs={} expr=v2190[1] }
        ?30     = { defs={} expr=v2191[1] }
        ?31     = { defs={} expr=v2192[1] }
        ip      = { defs={0x080483e8} expr=0x080483ef[32] }
    memory:
        address = { defs={} expr=v2151[32] }
          value = { defs={0x080483e8} expr=0x080495f8[32] }
          flags = { size=4 }
    ip = defs={0x080483e8} expr=0x080483ef[32]
0x80483ef:call   0x00000000
    registers:
        ax      = { defs={} expr=v2147[32] }
        cx      = { defs={} expr=v2148[32] }
        dx      = { defs={} expr=v2149[32] }
        bx      = { defs={} expr=v2150[32] }
        sp      = { defs={0x080483ef} expr=(add[32] v2151[32] -4[32]) }
        bp      = { defs={} expr=v2152[32] }
        si      = { defs={} expr=v2153[32] }
        di      = { defs={} expr=v2154[32] }
        es      = { defs={} expr=v2155[16] }
        cs      = { defs={} expr=v2156[16] }
        ss      = { defs={} expr=v2157[16] }
        ds      = { defs={} expr=v2158[16] }
        fs      = { defs={} expr=v2159[16] }
        gs      = { defs={} expr=v2160[16] }
        cf      = { defs={} expr=v2161[1] }
        ?1      = { defs={} expr=v2162[1] }
        pf      = { defs={} expr=v2163[1] }
        ?3      = { defs={} expr=v2164[1] }
        af      = { defs={} expr=v2165[1] }
        ?5      = { defs={} expr=v2166[1] }
        zf      = { defs={} expr=v2167[1] }
        sf      = { defs={} expr=v2168[1] }
        tf      = { defs={} expr=v2169[1] }
        if      = { defs={} expr=v2170[1] }
        df      = { defs={} expr=v2171[1] }
        of      = { defs={} expr=v2172[1] }
        iopl0   = { defs={} expr=v2173[1] }
        iopl1   = { defs={} expr=v2174[1] }
        nt      = { defs={} expr=v2175[1] }
        ?15     = { defs={} expr=v2176[1] }
        rf      = { defs={} expr=v2177[1] }
        vm      = { defs={} expr=v2178[1] }
        ac      = { defs={} expr=v2179[1] }
        vif     = { defs={} expr=v2180[1] }
        vip     = { defs={} expr=v2181[1] }
        id      = { defs={} expr=v2182[1] }
        ?22     = { defs={} expr=v2183[1] }
        ?23     = { defs={} expr=v2184[1] }
        ?24     = { defs={} expr=v2185[1] }
        ?25     = { defs={} expr=v2186[1] }
        ?26     = { defs={} expr=v2187[1] }
        ?27     = { defs={} expr=v2188[1] }
        ?28     = { defs={} expr=v2189[1] }
        ?29     = { defs={} expr=v2190[1] }
        ?30     = { defs={} expr=v2191[1] }
        ?31     = { defs={} expr=v2192[1] }
        ip      = { defs={0x080483ef} expr=0[32] }
    memory:
        address = { defs={} expr=v2151[32] }
          value = { defs={0x080483e8} expr=0x080495f8[32] }
          flags = { size=4 }
        address = { defs={0x080483ef} expr=(add[32] v2151[32] -4[32]) }
          value = { defs={0x080483e8,0x080483ef} expr=0x080483f4[32] }
          flags = { size=4 }
    ip = defs={0x080483ef} expr=0[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483f4:lea    esi, [esi + 0x00000000]
    registers:
        ax      = { defs={} expr=v2241[32] }
        cx      = { defs={} expr=v2242[32] }
        dx      = { defs={} expr=v2243[32] }
        bx      = { defs={} expr=v2244[32] }
        sp      = { defs={} expr=v2245[32] }
        bp      = { defs={} expr=v2246[32] }
        si      = { defs={0x080483f4} expr=v2247[32] }
        di      = { defs={} expr=v2248[32] }
        es      = { defs={} expr=v2249[16] }
        cs      = { defs={} expr=v2250[16] }
        ss      = { defs={} expr=v2251[16] }
        ds      = { defs={} expr=v2252[16] }
        fs      = { defs={} expr=v2253[16] }
        gs      = { defs={} expr=v2254[16] }
        cf      = { defs={} expr=v2255[1] }
        ?1      = { defs={} expr=v2256[1] }
        pf      = { defs={} expr=v2257[1] }
        ?3      = { defs={} expr=v2258[1] }
        af      = { defs={} expr=v2259[1] }
        ?5      = { defs={} expr=v2260[1] }
        zf      = { defs={} expr=v2261[1] }
        sf      = { defs={} expr=v2262[1] }
        tf      = { defs={} expr=v2263[1] }
        if      = { defs={} expr=v2264[1] }
        df      = { defs={} expr=v2265[1] }
        of      = { defs={} expr=v2266[1] }
        iopl0   = { defs={} expr=v2267[1] }
        iopl1   = { defs={} expr=v2268[1] }
        nt      = { defs={} expr=v2269[1] }
        ?15     = { defs={} expr=v2270[1] }
        rf      = { defs={} expr=v2271[1] }
        vm      = { defs={} expr=v2272[1] }
        ac      = { defs={} expr=v2273[1] }
        vif     = { defs={} expr=v2274[1] }
        vip     = { defs={} expr=v2275[1] }
        id      = { defs={} expr=v2276[1] }
        ?22     = { defs={} expr=v2277[1] }
        ?23     = { defs={} expr=v2278[1] }
        ?24     = { defs={} expr=v2279[1] }
        ?25     = { defs={} expr=v2280[1] }
        ?26     = { defs={} expr=v2281[1] }
        ?27     = { defs={} expr=v2282[1] }
        ?28     = { defs={} expr=v2283[1] }
        ?29     = { defs={} expr=v2284[1] }
        ?30     = { defs={} expr=v2285[1] }
        ?31     = { defs={} expr=v2286[1] }
        ip      = { defs={0x080483f4} expr=0x080483fa[32] }
    memory:
        (empty)
    ip = defs={0x080483f4} expr=0x080483fa[32]
0x80483fa:lea    edi, [edi + 0x00000000]
    registers:
        ax      = { defs={} expr=v2241[32] }
        cx      = { defs={} expr=v2242[32] }
        dx      = { defs={} expr=v2243[32] }
        bx      = { defs={} expr=v2244[32] }
        sp      = { defs={} expr=v2245[32] }
        bp      = { defs={} expr=v2246[32] }
        si      = { defs={0x080483f4} expr=v2247[32] }
        di      = { defs={0x080483fa} expr=v2248[32] }
        es      = { defs={} expr=v2249[16] }
        cs      = { defs={} expr=v2250[16] }
        ss      = { defs={} expr=v2251[16] }
        ds      = { defs={} expr=v2252[16] }
        fs      = { defs={} expr=v2253[16] }
        gs      = { defs={} expr=v2254[16] }
        cf      = { defs={} expr=v2255[1] }
        ?1      = { defs={} expr=v2256[1] }
        pf      = { defs={} expr=v2257[1] }
        ?3      = { defs={} expr=v2258[1] }
        af      = { defs={} expr=v2259[1] }
        ?5      = { defs={} expr=v2260[1] }
        zf      = { defs={} expr=v2261[1] }
        sf      = { defs={} expr=v2262[1] }
        tf      = { defs={} expr=v2263[1] }
        if      = { defs={} expr=v2264[1] }
        df      = { defs={} expr=v2265[1] }
        of      = { defs={} expr=v2266[1] }
        iopl0   = { defs={} expr=v2267[1] }
        iopl1   = { defs={} expr=v2268[1] }
        nt      = { defs={} expr=v2269[1] }
        ?15     = { defs={} expr=v2270[1] }
        rf      = { defs={} expr=v2271[1] }
        vm      = { defs={} expr=v2272[1] }
        ac      = { defs={} expr=v2273[1] }
        vif     = { defs={} expr=v2274[1] }
        vip     = { defs={} expr=v2275[1] }
        id      = { defs={} expr=v2276[1] }
        ?22     = { defs={} expr=v2277[1] }
        ?23     = { defs={} expr=v2278[1] }
        ?24     = { defs={} expr=v2279[1] }
        ?25     = { defs={} expr=v2280[1] }
        ?26     = { defs={} expr=v2281[1] }
        ?27     = { defs={} expr=v2282[1] }
        ?28     = { defs={} expr=v2283[1] }
        ?29     = { defs={} expr=v2284[1] }
        ?30     = { defs={} expr=v2285[1] }
        ?31     = { defs={} expr=v2286[1] }
        ip      = { defs={0x080483f4,0x080483fa} expr=0x08048400[32] }
    memory:
        (empty)
    ip = defs={0x080483f4,0x080483fa} expr=0x08048400[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048410:push   ebp
    registers:
        ax      = { defs={} expr=v2335[32] }
        cx      = { defs={} expr=v2336[32] }
        dx      = { defs={} expr=v2337[32] }
        bx      = { defs={} expr=v2338[32] }
        sp      = { defs={0x08048410} expr=(add[32] v2339[32] -4[32]) }
        bp      = { defs={} expr=v2340[32] }
        si      = { defs={} expr=v2341[32] }
        di      = { defs={} expr=v2342[32] }
        es      = { defs={} expr=v2343[16] }
        cs      = { defs={} expr=v2344[16] }
        ss      = { defs={} expr=v2345[16] }
        ds      = { defs={} expr=v2346[16] }
        fs      = { defs={} expr=v2347[16] }
        gs      = { defs={} expr=v2348[16] }
        cf      = { defs={} expr=v2349[1] }
        ?1      = { defs={} expr=v2350[1] }
        pf      = { defs={} expr=v2351[1] }
        ?3      = { defs={} expr=v2352[1] }
        af      = { defs={} expr=v2353[1] }
        ?5      = { defs={} expr=v2354[1] }
        zf      = { defs={} expr=v2355[1] }
        sf      = { defs={} expr=v2356[1] }
        tf      = { defs={} expr=v2357[1] }
        if      = { defs={} expr=v2358[1] }
        df      = { defs={} expr=v2359[1] }
        of      = { defs={} expr=v2360[1] }
        iopl0   = { defs={} expr=v2361[1] }
        iopl1   = { defs={} expr=v2362[1] }
        nt      = { defs={} expr=v2363[1] }
        ?15     = { defs={} expr=v2364[1] }
        rf      = { defs={} expr=v2365[1] }
        vm      = { defs={} expr=v2366[1] }
        ac      = { defs={} expr=v2367[1] }
        vif     = { defs={} expr=v2368[1] }
        vip     = { defs={} expr=v2369[1] }
        id      = { defs={} expr=v2370[1] }
        ?22     = { defs={} expr=v2371[1] }
        ?23     = { defs={} expr=v2372[1] }
        ?24     = { defs={} expr=v2373[1] }
        ?25     = { defs={} expr=v2374[1] }
        ?26     = { defs={} expr=v2375[1] }
        ?27     = { defs={} expr=v2376[1] }
        ?28     = { defs={} expr=v2377[1] }
        ?29     = { defs={} expr=v2378[1] }
        ?30     = { defs={} expr=v2379[1] }
        ?31     = { defs={} expr=v2380[1] }
        ip      = { defs={0x08048410} expr=0x08048411[32] }
    memory:
        address = { defs={0x08048410} expr=(add[32] v2339[32] -4[32]) }
          value = { defs={0x08048410} expr=v2340[32] }
          flags = { size=4 }
    ip = defs={0x08048410} expr=0x08048411[32]
0x8048411:mov    edx, 0x08048480<handler>
    registers:
        ax      = { defs={} expr=v2335[32] }
        cx      = { defs={} expr=v2336[32] }
        dx      = { defs={0x08048411} expr=0x08048480[32] }
        bx      = { defs={} expr=v2338[32] }
        sp      = { defs={0x08048410} expr=(add[32] v2339[32] -4[32]) }
        bp      = { defs={} expr=v2340[32] }
        si      = { defs={} expr=v2341[32] }
        di      = { defs={} expr=v2342[32] }
        es      = { defs={} expr=v2343[16] }
        cs      = { defs={} expr=v2344[16] }
        ss      = { defs={} expr=v2345[16] }
        ds      = { defs={} expr=v2346[16] }
        fs      = { defs={} expr=v2347[16] }
        gs      = { defs={} expr=v2348[16] }
        cf      = { defs={} expr=v2349[1] }
        ?1      = { defs={} expr=v2350[1] }
        pf      = { defs={} expr=v2351[1] }
        ?3      = { defs={} expr=v2352[1] }
        af      = { defs={} expr=v2353[1] }
        ?5      = { defs={} expr=v2354[1] }
        zf      = { defs={} expr=v2355[1] }
        sf      = { defs={} expr=v2356[1] }
        tf      = { defs={} expr=v2357[1] }
        if      = { defs={} expr=v2358[1] }
        df      = { defs={} expr=v2359[1] }
        of      = { defs={} expr=v2360[1] }
        iopl0   = { defs={} expr=v2361[1] }
        iopl1   = { defs={} expr=v2362[1] }
        nt      = { defs={} expr=v2363[1] }
        ?15     = { defs={} expr=v2364[1] }
        rf      = { defs={} expr=v2365[1] }
        vm      = { defs={} expr=v2366[1] }
        ac      = { defs={} expr=v2367[1] }
        vif     = { defs={} expr=v2368[1] }
        vip     = { defs={} expr=v2369[1] }
        id      = { defs={} expr=v2370[1] }
        ?22     = { defs={} expr=v2371[1] }
        ?23     = { defs={} expr=v2372[1] }
        ?24     = { defs={} expr=v2373[1] }
        ?25     = { defs={} expr=v2374[1] }
        ?26     = { defs={} expr=v2375[1] }
        ?27     = { defs={} expr=v2376[1] }
        ?28     = { defs={} expr=v2377[1] }
        ?29     = { defs={} expr=v2378[1] }
        ?30     = { defs={} expr=v2379[1] }
        ?31     = { defs={} expr=v2380[1] }
        ip      = { defs={0x08048410,0x08048411} expr=0x08048416[32] }
    memory:
        address = { defs={0x08048410} expr=(add[32] v2339[32] -4[32]) }
          value = { defs={0x08048410} expr=v2340[32] }
          flags = { size=4 }
    ip = defs={0x08048410,0x08048411} expr=0x08048416[32]
0x8048416:mov    ebp, esp
    registers:
        ax      = { defs={} expr=v2335[32] }
        cx      = { defs={} expr=v2336[32] }
        dx      = { defs={0x08048411} expr=0x08048480[32] }
        bx      = { defs={} expr=v2338[32] }
        sp      = { defs={0x08048410} expr=(add[32] v2339[32] -4[32]) }
        bp      = { defs={0x08048410,0x08048416} expr=(add[32] v2339[32] -4[32]) }
        si      = { defs={} expr=v2341[32] }
        di      = { defs={} expr=v2342[32] }
        es      = { defs={} expr=v2343[16] }
        cs      = { defs={} expr=v2344[16] }
        ss      = { defs={} expr=v2345[16] }
        ds      = { defs={} expr=v2346[16] }
        fs      = { defs={} expr=v2347[16] }
        gs      = { defs={} expr=v2348[16] }
        cf      = { defs={} expr=v2349[1] }
        ?1      = { defs={} expr=v2350[1] }
        pf      = { defs={} expr=v2351[1] }
        ?3      = { defs={} expr=v2352[1] }
        af      = { defs={} expr=v2353[1] }
        ?5      = { defs={} expr=v2354[1] }
        zf      = { defs={} expr=v2355[1] }
        sf      = { defs={} expr=v2356[1] }
        tf      = { defs={} expr=v2357[1] }
        if      = { defs={} expr=v2358[1] }
        df      = { defs={} expr=v2359[1] }
        of      = { defs={} expr=v2360[1] }
        iopl0   = { defs={} expr=v2361[1] }
        iopl1   = { defs={} expr=v2362[1] }
        nt      = { defs={} expr=v2363[1] }
        ?15     = { defs={} expr=v2364[1] }
        rf      = { defs={} expr=v2365[1] }
        vm      = { defs={} expr=v2366[1] }
        ac      = { defs={} expr=v2367[1] }
        vif     = { defs={} expr=v2368[1] }
        vip     = { defs={} expr=v2369[1] }
        id      = { defs={} expr=v2370[1] }
        ?22     = { defs={} expr=v2371[1] }
        ?23     = { defs={} expr=v2372[1] }
        ?24     = { defs={} expr=v2373[1] }
        ?25     = { defs={} expr=v2374[1] }
        ?26     = { defs={} expr=v2375[1] }
        ?27     = { defs={} expr=v2376[1] }
        ?28     = { defs={} expr=v2377[1] }
        ?29     = { defs={} expr=v2378[1] }
        ?30     = { defs={} expr=v2379[1] }
        ?31     = { defs={} expr=v2380[1] }
        ip      = { defs={0x08048410,0x08048411,0x08048416} expr=0x08048418[32] }
    memory:
        address = { defs={0x08048410} expr=(add[32] v2339[32] -4[32]) }
          value = { defs={0x08048410} expr=v2340[32] }
          flags = { size=4 }
    ip = defs={0x08048410,0x08048411,0x08048416} expr=0x08048418[32]
0x8048418:sub    esp, 0x08
    registers:
        ax      = { defs={} expr=v2335[32] }
        cx      = { defs={} expr=v2336[32] }
        dx      = { defs={0x08048411} expr=0x08048480[32] }
        bx      = { defs={} expr=v2338[32] }
        sp      = { defs={0x08048410,0x08048418} expr=(add[32] (add[32] v2339[32] -4[32]) -8[32]) }
        bp      = { defs={0x08048410,0x08048416} expr=(add[32] v2339[32] -4[32]) }
        si      = { defs={} expr=v2341[32] }
        di      = { defs={} expr=v2342[32] }
        es      = { defs={} expr=v2343[16] }
        cs      = { defs={} expr=v2344[16] }
        ss      = { defs={} expr=v2345[16] }
        ds      = { defs={} expr=v2346[16] }
        fs      = { defs={} expr=v2347[16] }
        gs      = { defs={} expr=v2348[16] }
        cf      = { defs={0x08048410,0x08048418} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2339[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v2339[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v2350[1] }
        pf      = { defs={0x08048410,0x08048418} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2339[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2339[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]))))))) }
        ?3      = { defs={} expr=v2352[1] }
        af      = { defs={0x08048410,0x08048418} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2339[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v2339[32] -4[32])) 4294967288[33])))))) }
        ?5      = { defs={} expr=v2354[1] }
        zf      = { defs={0x08048410,0x08048418} expr=(zerop[1] (add[32] (add[32] v2339[32] -4[32]) -8[32])) }
        sf      = { defs={0x08048410,0x08048418} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v2339[32] -4[32]) -8[32])) }
        tf      = { defs={} expr=v2357[1] }
        if      = { defs={} expr=v2358[1] }
        df      = { defs={} expr=v2359[1] }
        of      = { defs={0x08048410,0x08048418} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2339[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v2339[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2339[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v2339[32] -4[32])) 4294967288[33])))))) }
        iopl0   = { defs={} expr=v2361[1] }
        iopl1   = { defs={} expr=v2362[1] }
        nt      = { defs={} expr=v2363[1] }
        ?15     = { defs={} expr=v2364[1] }
        rf      = { defs={} expr=v2365[1] }
        vm      = { defs={} expr=v2366[1] }
        ac      = { defs={} expr=v2367[1] }
        vif     = { defs={} expr=v2368[1] }
        vip     = { defs={} expr=v2369[1] }
        id      = { defs={} expr=v2370[1] }
        ?22     = { defs={} expr=v2371[1] }
        ?23     = { defs={} expr=v2372[1] }
        ?24     = { defs={} expr=v2373[1] }
        ?25     = { defs={} expr=v2374[1] }
        ?26     = { defs={} expr=v2375[1] }
        ?27     = { defs={} expr=v2376[1] }
        ?28     = { defs={} expr=v2377[1] }
        ?29     = { defs={} expr=v2378[1] }
        ?30     = { defs={} expr=v2379[1] }
        ?31     = { defs={} expr=v2380[1] }
        ip      = { defs={0x08048410,0x08048411,0x08048416,0x08048418} expr=0x0804841b[32] }
    memory:
        address = { defs={0x08048410} expr=(add[32] v2339[32] -4[32]) }
          value = { defs={0x08048410} expr=v2340[32] }
          flags = { size=4 }
    ip = defs={0x08048410,0x08048411,0x08048416,0x08048418} expr=0x0804841b[32]
0x804841b:and    esp, 0xf0<-0x10>
    registers:
        ax      = { defs={} expr=v2335[32] }
        cx      = { defs={} expr=v2336[32] }
        dx      = { defs={0x08048411} expr=0x08048480[32] }
        bx      = { defs={} expr=v2338[32] }
        sp      = { defs={0x08048410,0x08048418,0x0804841b} expr=(bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32]) }
        bp      = { defs={0x08048410,0x08048416} expr=(add[32] v2339[32] -4[32]) }
        si      = { defs={} expr=v2341[32] }
        di      = { defs={} expr=v2342[32] }
        es      = { defs={} expr=v2343[16] }
        cs      = { defs={} expr=v2344[16] }
        ss      = { defs={} expr=v2345[16] }
        ds      = { defs={} expr=v2346[16] }
        fs      = { defs={} expr=v2347[16] }
        gs      = { defs={} expr=v2348[16] }
        cf      = { defs={0x0804841b} expr=0[1] }
        ?1      = { defs={} expr=v2350[1] }
        pf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32]))))))) }
        ?3      = { defs={} expr=v2352[1] }
        af      = { defs={0x0804841b} expr=v2381[1] }
        ?5      = { defs={} expr=v2354[1] }
        zf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(zerop[1] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32])) }
        sf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32])) }
        tf      = { defs={} expr=v2357[1] }
        if      = { defs={} expr=v2358[1] }
        df      = { defs={} expr=v2359[1] }
        of      = { defs={0x0804841b} expr=0[1] }
        iopl0   = { defs={} expr=v2361[1] }
        iopl1   = { defs={} expr=v2362[1] }
        nt      = { defs={} expr=v2363[1] }
        ?15     = { defs={} expr=v2364[1] }
        rf      = { defs={} expr=v2365[1] }
        vm      = { defs={} expr=v2366[1] }
        ac      = { defs={} expr=v2367[1] }
        vif     = { defs={} expr=v2368[1] }
        vip     = { defs={} expr=v2369[1] }
        id      = { defs={} expr=v2370[1] }
        ?22     = { defs={} expr=v2371[1] }
        ?23     = { defs={} expr=v2372[1] }
        ?24     = { defs={} expr=v2373[1] }
        ?25     = { defs={} expr=v2374[1] }
        ?26     = { defs={} expr=v2375[1] }
        ?27     = { defs={} expr=v2376[1] }
        ?28     = { defs={} expr=v2377[1] }
        ?29     = { defs={} expr=v2378[1] }
        ?30     = { defs={} expr=v2379[1] }
        ?31     = { defs={} expr=v2380[1] }
        ip      = { defs={0x08048410,0x08048411,0x08048416,0x08048418,0x0804841b} expr=0x0804841e[32] }
    memory:
        address = { defs={0x08048410} expr=(add[32] v2339[32] -4[32]) }
          value = { defs={0x08048410} expr=v2340[32] }
          flags = { size=4 }
    ip = defs={0x08048410,0x08048411,0x08048416,0x08048418,0x0804841b} expr=0x0804841e[32]
0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx
    registers:
        ax      = { defs={} expr=v2335[32] }
        cx      = { defs={} expr=v2336[32] }
        dx      = { defs={0x08048411} expr=0x08048480[32] }
        bx      = { defs={} expr=v2338[32] }
        sp      = { defs={0x08048410,0x08048418,0x0804841b} expr=(bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32]) }
        bp      = { defs={0x08048410,0x08048416} expr=(add[32] v2339[32] -4[32]) }
        si      = { defs={} expr=v2341[32] }
        di      = { defs={} expr=v2342[32] }
        es      = { defs={} expr=v2343[16] }
        cs      = { defs={} expr=v2344[16] }
        ss      = { defs={} expr=v2345[16] }
        ds      = { defs={} expr=v2346[16] }
        fs      = { defs={} expr=v2347[16] }
        gs      = { defs={} expr=v2348[16] }
        cf      = { defs={0x0804841b} expr=0[1] }
        ?1      = { defs={} expr=v2350[1] }
        pf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32]))))))) }
        ?3      = { defs={} expr=v2352[1] }
        af      = { defs={0x0804841b} expr=v2381[1] }
        ?5      = { defs={} expr=v2354[1] }
        zf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(zerop[1] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32])) }
        sf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32])) }
        tf      = { defs={} expr=v2357[1] }
        if      = { defs={} expr=v2358[1] }
        df      = { defs={} expr=v2359[1] }
        of      = { defs={0x0804841b} expr=0[1] }
        iopl0   = { defs={} expr=v2361[1] }
        iopl1   = { defs={} expr=v2362[1] }
        nt      = { defs={} expr=v2363[1] }
        ?15     = { defs={} expr=v2364[1] }
        rf      = { defs={} expr=v2365[1] }
        vm      = { defs={} expr=v2366[1] }
        ac      = { defs={} expr=v2367[1] }
        vif     = { defs={} expr=v2368[1] }
        vip     = { defs={} expr=v2369[1] }
        id      = { defs={} expr=v2370[1] }
        ?22     = { defs={} expr=v2371[1] }
        ?23     = { defs={} expr=v2372[1] }
        ?24     = { defs={} expr=v2373[1] }
        ?25     = { defs={} expr=v2374[1] }
        ?26     = { defs={} expr=v2375[1] }
        ?27     = { defs={} expr=v2376[1] }
        ?28     = { defs={} expr=v2377[1] }
        ?29     = { defs={} expr=v2378[1] }
        ?30     = { defs={} expr=v2379[1] }
        ?31     = { defs={} expr=v2380[1] }
        ip      = { defs={0x08048410,0x08048411,0x08048416,0x08048418,0x0804841b,0x0804841e} expr=0x08048422[32] }
    memory:
        address = { defs={0x08048410} expr=(add[32] v2339[32] -4[32]) }
          value = { defs={0x08048410} expr=v2340[32] }
          flags = { size=4 }
        address = { defs={0x08048410,0x08048418,0x0804841b,0x0804841e} expr=(add[32] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32]) 4[32]) }
          value = { defs={0x08048411,0x0804841e} expr=0x08048480[32] }
          flags = { size=4 }
    ip = defs={0x08048410,0x08048411,0x08048416,0x08048418,0x0804841b,0x0804841e} expr=0x08048422[32]
0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a
    registers:
        ax      = { defs={} expr=v2335[32] }
        cx      = { defs={} expr=v2336[32] }
        dx      = { defs={0x08048411} expr=0x08048480[32] }
        bx      = { defs={} expr=v2338[32] }
        sp      = { defs={0x08048410,0x08048418,0x0804841b} expr=(bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32]) }
        bp      = { defs={0x08048410,0x08048416} expr=(add[32] v2339[32] -4[32]) }
        si      = { defs={} expr=v2341[32] }
        di      = { defs={} expr=v2342[32] }
        es      = { defs={} expr=v2343[16] }
        cs      = { defs={} expr=v2344[16] }
        ss      = { defs={} expr=v2345[16] }
        ds      = { defs={} expr=v2346[16] }
        fs      = { defs={} expr=v2347[16] }
        gs      = { defs={} expr=v2348[16] }
        cf      = { defs={0x0804841b} expr=0[1] }
        ?1      = { defs={} expr=v2350[1] }
        pf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32]))))))) }
        ?3      = { defs={} expr=v2352[1] }
        af      = { defs={0x0804841b} expr=v2381[1] }
        ?5      = { defs={} expr=v2354[1] }
        zf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(zerop[1] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32])) }
        sf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32])) }
        tf      = { defs={} expr=v2357[1] }
        if      = { defs={} expr=v2358[1] }
        df      = { defs={} expr=v2359[1] }
        of      = { defs={0x0804841b} expr=0[1] }
        iopl0   = { defs={} expr=v2361[1] }
        iopl1   = { defs={} expr=v2362[1] }
        nt      = { defs={} expr=v2363[1] }
        ?15     = { defs={} expr=v2364[1] }
        rf      = { defs={} expr=v2365[1] }
        vm      = { defs={} expr=v2366[1] }
        ac      = { defs={} expr=v2367[1] }
        vif     = { defs={} expr=v2368[1] }
        vip     = { defs={} expr=v2369[1] }
        id      = { defs={} expr=v2370[1] }
        ?22     = { defs={} expr=v2371[1] }
        ?23     = { defs={} expr=v2372[1] }
        ?24     = { defs={} expr=v2373[1] }
        ?25     = { defs={} expr=v2374[1] }
        ?26     = { defs={} expr=v2375[1] }
        ?27     = { defs={} expr=v2376[1] }
        ?28     = { defs={} expr=v2377[1] }
        ?29     = { defs={} expr=v2378[1] }
        ?30     = { defs={} expr=v2379[1] }
        ?31     = { defs={} expr=v2380[1] }
        ip      = { defs={0x08048410,0x08048411,0x08048416,0x08048418,0x0804841b,0x0804841e,0x08048422} expr=0x08048429[32] }
    memory:
        address = { defs={0x08048410} expr=(add[32] v2339[32] -4[32]) }
          value = { defs={0x08048410} expr=v2340[32] }
          flags = { size=4 }
        address = { defs={0x08048410,0x08048418,0x0804841b,0x0804841e} expr=(add[32] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32]) 4[32]) }
          value = { defs={0x08048411,0x0804841e} expr=0x08048480[32] }
          flags = { size=4 }
        address = { defs={0x08048410,0x08048418,0x0804841b} expr=(bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32]) }
          value = { defs={0x08048422} expr=10[32] }
          flags = { size=4 }
    ip = defs={0x08048410,0x08048411,0x08048416,0x08048418,0x0804841b,0x0804841e,0x08048422} expr=0x08048429[32]
0x8048429:call   0x080482f0<signal@plt>
    registers:
        ax      = { defs={} expr=v2335[32] }
        cx      = { defs={} expr=v2336[32] }
        dx      = { defs={0x08048411} expr=0x08048480[32] }
        bx      = { defs={} expr=v2338[32] }
        sp      = { defs={0x08048410,0x08048418,0x0804841b,0x08048429} expr=(add[32] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32]) -4[32]) }
        bp      = { defs={0x08048410,0x08048416} expr=(add[32] v2339[32] -4[32]) }
        si      = { defs={} expr=v2341[32] }
        di      = { defs={} expr=v2342[32] }
        es      = { defs={} expr=v2343[16] }
        cs      = { defs={} expr=v2344[16] }
        ss      = { defs={} expr=v2345[16] }
        ds      = { defs={} expr=v2346[16] }
        fs      = { defs={} expr=v2347[16] }
        gs      = { defs={} expr=v2348[16] }
        cf      = { defs={0x0804841b} expr=0[1] }
        ?1      = { defs={} expr=v2350[1] }
        pf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32]))))))) }
        ?3      = { defs={} expr=v2352[1] }
        af      = { defs={0x0804841b} expr=v2381[1] }
        ?5      = { defs={} expr=v2354[1] }
        zf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(zerop[1] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32])) }
        sf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32])) }
        tf      = { defs={} expr=v2357[1] }
        if      = { defs={} expr=v2358[1] }
        df      = { defs={} expr=v2359[1] }
        of      = { defs={0x0804841b} expr=0[1] }
        iopl0   = { defs={} expr=v2361[1] }
        iopl1   = { defs={} expr=v2362[1] }
        nt      = { defs={} expr=v2363[1] }
        ?15     = { defs={} expr=v2364[1] }
        rf      = { defs={} expr=v2365[1] }
        vm      = { defs={} expr=v2366[1] }
        ac      = { defs={} expr=v2367[1] }
        vif     = { defs={} expr=v2368[1] }
        vip     = { defs={} expr=v2369[1] }
        id      = { defs={} expr=v2370[1] }
        ?22     = { defs={} expr=v2371[1] }
        ?23     = { defs={} expr=v2372[1] }
        ?24     = { defs={} expr=v2373[1] }
        ?25     = { defs={} expr=v2374[1] }
        ?26     = { defs={} expr=v2375[1] }
        ?27     = { defs={} expr=v2376[1] }
        ?28     = { defs={} expr=v2377[1] }
        ?29     = { defs={} expr=v2378[1] }
        ?30     = { defs={} expr=v2379[1] }
        ?31     = { defs={} expr=v2380[1] }
        ip      = { defs={0x08048429} expr=0x080482f0[32] }
    memory:
        address = { defs={0x08048410} expr=(add[32] v2339[32] -4[32]) }
          value = { defs={0x08048410} expr=v2340[32] }
          flags = { size=4 }
        address = { defs={0x08048410,0x08048418,0x0804841b,0x0804841e} expr=(add[32] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32]) 4[32]) }
          value = { defs={0x08048411,0x0804841e} expr=0x08048480[32] }
          flags = { size=4 }
        address = { defs={0x08048410,0x08048418,0x0804841b} expr=(bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32]) }
          value = { defs={0x08048422} expr=10[32] }
          flags = { size=4 }
        address = { defs={0x08048410,0x08048418,0x0804841b,0x08048429} expr=(add[32] (bv-and[32] (add[32] (add[32] v2339[32] -4[32]) -8[32]) -16[32]) -4[32]) }
          value = { defs={0x08048410,0x08048411,0x08048416,0x08048418,0x0804841b,0x0804841e,0x08048422,0x08048429} expr=0x0804842e[32] }
          flags = { size=4 }
    ip = defs={0x08048429} expr=0x080482f0[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804842e:mov    esp, ebp
    registers:
        ax      = { defs={} expr=v2430[32] }
        cx      = { defs={} expr=v2431[32] }
        dx      = { defs={} expr=v2432[32] }
        bx      = { defs={} expr=v2433[32] }
        sp      = { defs={0x0804842e} expr=v2435[32] }
        bp      = { defs={} expr=v2435[32] }
        si      = { defs={} expr=v2436[32] }
        di      = { defs={} expr=v2437[32] }
        es      = { defs={} expr=v2438[16] }
        cs      = { defs={} expr=v2439[16] }
        ss      = { defs={} expr=v2440[16] }
        ds      = { defs={} expr=v2441[16] }
        fs      = { defs={} expr=v2442[16] }
        gs      = { defs={} expr=v2443[16] }
        cf      = { defs={} expr=v2444[1] }
        ?1      = { defs={} expr=v2445[1] }
        pf      = { defs={} expr=v2446[1] }
        ?3      = { defs={} expr=v2447[1] }
        af      = { defs={} expr=v2448[1] }
        ?5      = { defs={} expr=v2449[1] }
        zf      = { defs={} expr=v2450[1] }
        sf      = { defs={} expr=v2451[1] }
        tf      = { defs={} expr=v2452[1] }
        if      = { defs={} expr=v2453[1] }
        df      = { defs={} expr=v2454[1] }
        of      = { defs={} expr=v2455[1] }
        iopl0   = { defs={} expr=v2456[1] }
        iopl1   = { defs={} expr=v2457[1] }
        nt      = { defs={} expr=v2458[1] }
        ?15     = { defs={} expr=v2459[1] }
        rf      = { defs={} expr=v2460[1] }
        vm      = { defs={} expr=v2461[1] }
        ac      = { defs={} expr=v2462[1] }
        vif     = { defs={} expr=v2463[1] }
        vip     = { defs={} expr=v2464[1] }
        id      = { defs={} expr=v2465[1] }
        ?22     = { defs={} expr=v2466[1] }
        ?23     = { defs={} expr=v2467[1] }
        ?24     = { defs={} expr=v2468[1] }
        ?25     = { defs={} expr=v2469[1] }
        ?26     = { defs={} expr=v2470[1] }
        ?27     = { defs={} expr=v2471[1] }
        ?28     = { defs={} expr=v2472[1] }
        ?29     = { defs={} expr=v2473[1] }
        ?30     = { defs={} expr=v2474[1] }
        ?31     = { defs={} expr=v2475[1] }
        ip      = { defs={0x0804842e} expr=0x08048430[32] }
    memory:
        (empty)
    ip = defs={0x0804842e} expr=0x08048430[32]
0x8048430:xor    eax, eax
    registers:
        ax      = { defs={0x08048430} expr=0[32] }
        cx      = { defs={} expr=v2431[32] }
        dx      = { defs={} expr=v2432[32] }
        bx      = { defs={} expr=v2433[32] }
        sp      = { defs={0x0804842e} expr=v2435[32] }
        bp      = { defs={} expr=v2435[32] }
        si      = { defs={} expr=v2436[32] }
        di      = { defs={} expr=v2437[32] }
        es      = { defs={} expr=v2438[16] }
        cs      = { defs={} expr=v2439[16] }
        ss      = { defs={} expr=v2440[16] }
        ds      = { defs={} expr=v2441[16] }
        fs      = { defs={} expr=v2442[16] }
        gs      = { defs={} expr=v2443[16] }
        cf      = { defs={0x08048430} expr=0[1] }
        ?1      = { defs={} expr=v2445[1] }
        pf      = { defs={0x08048430} expr=1[1] }
        ?3      = { defs={} expr=v2447[1] }
        af      = { defs={0x08048430} expr=v2476[1] }
        ?5      = { defs={} expr=v2449[1] }
        zf      = { defs={0x08048430} expr=1[1] }
        sf      = { defs={0x08048430} expr=0[1] }
        tf      = { defs={} expr=v2452[1] }
        if      = { defs={} expr=v2453[1] }
        df      = { defs={} expr=v2454[1] }
        of      = { defs={0x08048430} expr=0[1] }
        iopl0   = { defs={} expr=v2456[1] }
        iopl1   = { defs={} expr=v2457[1] }
        nt      = { defs={} expr=v2458[1] }
        ?15     = { defs={} expr=v2459[1] }
        rf      = { defs={} expr=v2460[1] }
        vm      = { defs={} expr=v2461[1] }
        ac      = { defs={} expr=v2462[1] }
        vif     = { defs={} expr=v2463[1] }
        vip     = { defs={} expr=v2464[1] }
        id      = { defs={} expr=v2465[1] }
        ?22     = { defs={} expr=v2466[1] }
        ?23     = { defs={} expr=v2467[1] }
        ?24     = { defs={} expr=v2468[1] }
        ?25     = { defs={} expr=v2469[1] }
        ?26     = { defs={} expr=v2470[1] }
        ?27     = { defs={} expr=v2471[1] }
        ?28     = { defs={} expr=v2472[1] }
        ?29     = { defs={} expr=v2473[1] }
        ?30     = { defs={} expr=v2474[1] }
        ?31     = { defs={} expr=v2475[1] }
        ip      = { defs={0x0804842e,0x08048430} expr=0x08048432[32] }
    memory:
        (empty)
    ip = defs={0x0804842e,0x08048430} expr=0x08048432[32]
0x8048432:pop    ebp
    registers:
        ax      = { defs={0x08048430} expr=0[32] }
        cx      = { defs={} expr=v2431[32] }
        dx      = { defs={} expr=v2432[32] }
        bx      = { defs={} expr=v2433[32] }
        sp      = { defs={0x0804842e,0x08048432} expr=(add[32] v2435[32] 4[32]) }
        bp      = { defs={0x08048432} expr=v2477[32] }
        si      = { defs={} expr=v2436[32] }
        di      = { defs={} expr=v2437[32] }
        es      = { defs={} expr=v2438[16] }
        cs      = { defs={} expr=v2439[16] }
        ss      = { defs={} expr=v2440[16] }
        ds      = { defs={} expr=v2441[16] }
        fs      = { defs={} expr=v2442[16] }
        gs      = { defs={} expr=v2443[16] }
        cf      = { defs={0x08048430} expr=0[1] }
        ?1      = { defs={} expr=v2445[1] }
        pf      = { defs={0x08048430} expr=1[1] }
        ?3      = { defs={} expr=v2447[1] }
        af      = { defs={0x08048430} expr=v2476[1] }
        ?5      = { defs={} expr=v2449[1] }
        zf      = { defs={0x08048430} expr=1[1] }
        sf      = { defs={0x08048430} expr=0[1] }
        tf      = { defs={} expr=v2452[1] }
        if      = { defs={} expr=v2453[1] }
        df      = { defs={} expr=v2454[1] }
        of      = { defs={0x08048430} expr=0[1] }
        iopl0   = { defs={} expr=v2456[1] }
        iopl1   = { defs={} expr=v2457[1] }
        nt      = { defs={} expr=v2458[1] }
        ?15     = { defs={} expr=v2459[1] }
        rf      = { defs={} expr=v2460[1] }
        vm      = { defs={} expr=v2461[1] }
        ac      = { defs={} expr=v2462[1] }
        vif     = { defs={} expr=v2463[1] }
        vip     = { defs={} expr=v2464[1] }
        id      = { defs={} expr=v2465[1] }
        ?22     = { defs={} expr=v2466[1] }
        ?23     = { defs={} expr=v2467[1] }
        ?24     = { defs={} expr=v2468[1] }
        ?25     = { defs={} expr=v2469[1] }
        ?26     = { defs={} expr=v2470[1] }
        ?27     = { defs={} expr=v2471[1] }
        ?28     = { defs={} expr=v2472[1] }
        ?29     = { defs={} expr=v2473[1] }
        ?30     = { defs={} expr=v2474[1] }
        ?31     = { defs={} expr=v2475[1] }
        ip      = { defs={0x0804842e,0x08048430,0x08048432} expr=0x08048433[32] }
    memory:
        address = { defs={0x0804842e} expr=v2435[32] }
          value = { defs={} expr=v2477[32] }
          flags = { size=4; read-only }
    ip = defs={0x0804842e,0x08048430,0x08048432} expr=0x08048433[32]
0x8048433:ret    
    registers:
        ax      = { defs={0x08048430} expr=0[32] }
        cx      = { defs={} expr=v2431[32] }
        dx      = { defs={} expr=v2432[32] }
        bx      = { defs={} expr=v2433[32] }
        sp      = { defs={0x0804842e,0x08048432,0x08048433} expr=(add[32] (add[32] v2435[32] 4[32]) 4[32]) }
        bp      = { defs={0x08048432} expr=v2477[32] }
        si      = { defs={} expr=v2436[32] }
        di      = { defs={} expr=v2437[32] }
        es      = { defs={} expr=v2438[16] }
        cs      = { defs={} expr=v2439[16] }
        ss      = { defs={} expr=v2440[16] }
        ds      = { defs={} expr=v2441[16] }
        fs      = { defs={} expr=v2442[16] }
        gs      = { defs={} expr=v2443[16] }
        cf      = { defs={0x08048430} expr=0[1] }
        ?1      = { defs={} expr=v2445[1] }
        pf      = { defs={0x08048430} expr=1[1] }
        ?3      = { defs={} expr=v2447[1] }
        af      = { defs={0x08048430} expr=v2476[1] }
        ?5      = { defs={} expr=v2449[1] }
        zf      = { defs={0x08048430} expr=1[1] }
        sf      = { defs={0x08048430} expr=0[1] }
        tf      = { defs={} expr=v2452[1] }
        if      = { defs={} expr=v2453[1] }
        df      = { defs={} expr=v2454[1] }
        of      = { defs={0x08048430} expr=0[1] }
        iopl0   = { defs={} expr=v2456[1] }
        iopl1   = { defs={} expr=v2457[1] }
        nt      = { defs={} expr=v2458[1] }
        ?15     = { defs={} expr=v2459[1] }
        rf      = { defs={} expr=v2460[1] }
        vm      = { defs={} expr=v2461[1] }
        ac      = { defs={} expr=v2462[1] }
        vif     = { defs={} expr=v2463[1] }
        vip     = { defs={} expr=v2464[1] }
        id      = { defs={} expr=v2465[1] }
        ?22     = { defs={} expr=v2466[1] }
        ?23     = { defs={} expr=v2467[1] }
        ?24     = { defs={} expr=v2468[1] }
        ?25     = { defs={} expr=v2469[1] }
        ?26     = { defs={} expr=v2470[1] }
        ?27     = { defs={} expr=v2471[1] }
        ?28     = { defs={} expr=v2472[1] }
        ?29     = { defs={} expr=v2473[1] }
        ?30     = { defs={} expr=v2474[1] }
        ?31     = { defs={} expr=v2475[1] }
        ip      = { defs={0x08048433} expr=v2478[32] }
    memory:
        address = { defs={0x0804842e} expr=v2435[32] }
          value = { defs={} expr=v2477[32] }
          flags = { size=4; read-only }
        address = { defs={0x0804842e,0x08048432} expr=(add[32] v2435[32] 4[32]) }
          value = { defs={} expr=v2478[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048433} expr=v2478[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048440:push   ebp
    registers:
        ax      = { defs={} expr=v2527[32] }
        cx      = { defs={} expr=v2528[32] }
        dx      = { defs={} expr=v2529[32] }
        bx      = { defs={} expr=v2530[32] }
        sp      = { defs={0x08048440} expr=(add[32] v2531[32] -4[32]) }
        bp      = { defs={} expr=v2532[32] }
        si      = { defs={} expr=v2533[32] }
        di      = { defs={} expr=v2534[32] }
        es      = { defs={} expr=v2535[16] }
        cs      = { defs={} expr=v2536[16] }
        ss      = { defs={} expr=v2537[16] }
        ds      = { defs={} expr=v2538[16] }
        fs      = { defs={} expr=v2539[16] }
        gs      = { defs={} expr=v2540[16] }
        cf      = { defs={} expr=v2541[1] }
        ?1      = { defs={} expr=v2542[1] }
        pf      = { defs={} expr=v2543[1] }
        ?3      = { defs={} expr=v2544[1] }
        af      = { defs={} expr=v2545[1] }
        ?5      = { defs={} expr=v2546[1] }
        zf      = { defs={} expr=v2547[1] }
        sf      = { defs={} expr=v2548[1] }
        tf      = { defs={} expr=v2549[1] }
        if      = { defs={} expr=v2550[1] }
        df      = { defs={} expr=v2551[1] }
        of      = { defs={} expr=v2552[1] }
        iopl0   = { defs={} expr=v2553[1] }
        iopl1   = { defs={} expr=v2554[1] }
        nt      = { defs={} expr=v2555[1] }
        ?15     = { defs={} expr=v2556[1] }
        rf      = { defs={} expr=v2557[1] }
        vm      = { defs={} expr=v2558[1] }
        ac      = { defs={} expr=v2559[1] }
        vif     = { defs={} expr=v2560[1] }
        vip     = { defs={} expr=v2561[1] }
        id      = { defs={} expr=v2562[1] }
        ?22     = { defs={} expr=v2563[1] }
        ?23     = { defs={} expr=v2564[1] }
        ?24     = { defs={} expr=v2565[1] }
        ?25     = { defs={} expr=v2566[1] }
        ?26     = { defs={} expr=v2567[1] }
        ?27     = { defs={} expr=v2568[1] }
        ?28     = { defs={} expr=v2569[1] }
        ?29     = { defs={} expr=v2570[1] }
        ?30     = { defs={} expr=v2571[1] }
        ?31     = { defs={} expr=v2572[1] }
        ip      = { defs={0x08048440} expr=0x08048441[32] }
    memory:
        address = { defs={0x08048440} expr=(add[32] v2531[32] -4[32]) }
          value = { defs={0x08048440} expr=v2532[32] }
          flags = { size=4 }
    ip = defs={0x08048440} expr=0x08048441[32]
0x8048441:mov    ebp, esp
    registers:
        ax      = { defs={} expr=v2527[32] }
        cx      = { defs={} expr=v2528[32] }
        dx      = { defs={} expr=v2529[32] }
        bx      = { defs={} expr=v2530[32] }
        sp      = { defs={0x08048440} expr=(add[32] v2531[32] -4[32]) }
        bp      = { defs={0x08048440,0x08048441} expr=(add[32] v2531[32] -4[32]) }
        si      = { defs={} expr=v2533[32] }
        di      = { defs={} expr=v2534[32] }
        es      = { defs={} expr=v2535[16] }
        cs      = { defs={} expr=v2536[16] }
        ss      = { defs={} expr=v2537[16] }
        ds      = { defs={} expr=v2538[16] }
        fs      = { defs={} expr=v2539[16] }
        gs      = { defs={} expr=v2540[16] }
        cf      = { defs={} expr=v2541[1] }
        ?1      = { defs={} expr=v2542[1] }
        pf      = { defs={} expr=v2543[1] }
        ?3      = { defs={} expr=v2544[1] }
        af      = { defs={} expr=v2545[1] }
        ?5      = { defs={} expr=v2546[1] }
        zf      = { defs={} expr=v2547[1] }
        sf      = { defs={} expr=v2548[1] }
        tf      = { defs={} expr=v2549[1] }
        if      = { defs={} expr=v2550[1] }
        df      = { defs={} expr=v2551[1] }
        of      = { defs={} expr=v2552[1] }
        iopl0   = { defs={} expr=v2553[1] }
        iopl1   = { defs={} expr=v2554[1] }
        nt      = { defs={} expr=v2555[1] }
        ?15     = { defs={} expr=v2556[1] }
        rf      = { defs={} expr=v2557[1] }
        vm      = { defs={} expr=v2558[1] }
        ac      = { defs={} expr=v2559[1] }
        vif     = { defs={} expr=v2560[1] }
        vip     = { defs={} expr=v2561[1] }
        id      = { defs={} expr=v2562[1] }
        ?22     = { defs={} expr=v2563[1] }
        ?23     = { defs={} expr=v2564[1] }
        ?24     = { defs={} expr=v2565[1] }
        ?25     = { defs={} expr=v2566[1] }
        ?26     = { defs={} expr=v2567[1] }
        ?27     = { defs={} expr=v2568[1] }
        ?28     = { defs={} expr=v2569[1] }
        ?29     = { defs={} expr=v2570[1] }
        ?30     = { defs={} expr=v2571[1] }
        ?31     = { defs={} expr=v2572[1] }
        ip      = { defs={0x08048440,0x08048441} expr=0x08048443[32] }
    memory:
        address = { defs={0x08048440} expr=(add[32] v2531[32] -4[32]) }
          value = { defs={0x08048440} expr=v2532[32] }
          flags = { size=4 }
    ip = defs={0x08048440,0x08048441} expr=0x08048443[32]
0x8048443:sub    esp, 0x08
    registers:
        ax      = { defs={} expr=v2527[32] }
        cx      = { defs={} expr=v2528[32] }
        dx      = { defs={} expr=v2529[32] }
        bx      = { defs={} expr=v2530[32] }
        sp      = { defs={0x08048440,0x08048443} expr=(add[32] (add[32] v2531[32] -4[32]) -8[32]) }
        bp      = { defs={0x08048440,0x08048441} expr=(add[32] v2531[32] -4[32]) }
        si      = { defs={} expr=v2533[32] }
        di      = { defs={} expr=v2534[32] }
        es      = { defs={} expr=v2535[16] }
        cs      = { defs={} expr=v2536[16] }
        ss      = { defs={} expr=v2537[16] }
        ds      = { defs={} expr=v2538[16] }
        fs      = { defs={} expr=v2539[16] }
        gs      = { defs={} expr=v2540[16] }
        cf      = { defs={0x08048440,0x08048443} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2531[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v2531[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v2542[1] }
        pf      = { defs={0x08048440,0x08048443} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2531[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2531[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2531[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2531[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2531[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2531[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2531[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2531[32] -4[32]) -8[32]))))))) }
        ?3      = { defs={} expr=v2544[1] }
        af      = { defs={0x08048440,0x08048443} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2531[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v2531[32] -4[32])) 4294967288[33])))))) }
        ?5      = { defs={} expr=v2546[1] }
        zf      = { defs={0x08048440,0x08048443} expr=(zerop[1] (add[32] (add[32] v2531[32] -4[32]) -8[32])) }
        sf      = { defs={0x08048440,0x08048443} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v2531[32] -4[32]) -8[32])) }
        tf      = { defs={} expr=v2549[1] }
        if      = { defs={} expr=v2550[1] }
        df      = { defs={} expr=v2551[1] }
        of      = { defs={0x08048440,0x08048443} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2531[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v2531[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2531[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v2531[32] -4[32])) 4294967288[33])))))) }
        iopl0   = { defs={} expr=v2553[1] }
        iopl1   = { defs={} expr=v2554[1] }
        nt      = { defs={} expr=v2555[1] }
        ?15     = { defs={} expr=v2556[1] }
        rf      = { defs={} expr=v2557[1] }
        vm      = { defs={} expr=v2558[1] }
        ac      = { defs={} expr=v2559[1] }
        vif     = { defs={} expr=v2560[1] }
        vip     = { defs={} expr=v2561[1] }
        id      = { defs={} expr=v2562[1] }
        ?22     = { defs={} expr=v2563[1] }
        ?23     = { defs={} expr=v2564[1] }
        ?24     = { defs={} expr=v2565[1] }
        ?25     = { defs={} expr=v2566[1] }
        ?26     = { defs={} expr=v2567[1] }
        ?27     = { defs={} expr=v2568[1] }
        ?28     = { defs={} expr=v2569[1] }
        ?29     = { defs={} expr=v2570[1] }
        ?30     = { defs={} expr=v2571[1] }
        ?31     = { defs={} expr=v2572[1] }
        ip      = { defs={0x08048440,0x08048441,0x08048443} expr=0x08048446[32] }
    memory:
        address = { defs={0x08048440} expr=(add[32] v2531[32] -4[32]) }
          value = { defs={0x08048440} expr=v2532[32] }
          flags = { size=4 }
    ip = defs={0x08048440,0x08048441,0x08048443} expr=0x08048446[32]
0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>
    registers:
        ax      = { defs={} expr=v2527[32] }
        cx      = { defs={} expr=v2528[32] }
        dx      = { defs={} expr=v2529[32] }
        bx      = { defs={} expr=v2530[32] }
        sp      = { defs={0x08048440,0x08048443} expr=(add[32] (add[32] v2531[32] -4[32]) -8[32]) }
        bp      = { defs={0x08048440,0x08048441} expr=(add[32] v2531[32] -4[32]) }
        si      = { defs={} expr=v2533[32] }
        di      = { defs={} expr=v2534[32] }
        es      = { defs={} expr=v2535[16] }
        cs      = { defs={} expr=v2536[16] }
        ss      = { defs={} expr=v2537[16] }
        ds      = { defs={} expr=v2538[16] }
        fs      = { defs={} expr=v2539[16] }
        gs      = { defs={} expr=v2540[16] }
        cf      = { defs={0x08048440,0x08048443} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2531[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v2531[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v2542[1] }
        pf      = { defs={0x08048440,0x08048443} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2531[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2531[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2531[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2531[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2531[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2531[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2531[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2531[32] -4[32]) -8[32]))))))) }
        ?3      = { defs={} expr=v2544[1] }
        af      = { defs={0x08048440,0x08048443} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2531[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v2531[32] -4[32])) 4294967288[33])))))) }
        ?5      = { defs={} expr=v2546[1] }
        zf      = { defs={0x08048440,0x08048443} expr=(zerop[1] (add[32] (add[32] v2531[32] -4[32]) -8[32])) }
        sf      = { defs={0x08048440,0x08048443} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v2531[32] -4[32]) -8[32])) }
        tf      = { defs={} expr=v2549[1] }
        if      = { defs={} expr=v2550[1] }
        df      = { defs={} expr=v2551[1] }
        of      = { defs={0x08048440,0x08048443} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2531[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v2531[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2531[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v2531[32] -4[32])) 4294967288[33])))))) }
        iopl0   = { defs={} expr=v2553[1] }
        iopl1   = { defs={} expr=v2554[1] }
        nt      = { defs={} expr=v2555[1] }
        ?15     = { defs={} expr=v2556[1] }
        rf      = { defs={} expr=v2557[1] }
        vm      = { defs={} expr=v2558[1] }
        ac      = { defs={} expr=v2559[1] }
        vif     = { defs={} expr=v2560[1] }
        vip     = { defs={} expr=v2561[1] }
        id      = { defs={} expr=v2562[1] }
        ?22     = { defs={} expr=v2563[1] }
        ?23     = { defs={} expr=v2564[1] }
        ?24     = { defs={} expr=v2565[1] }
        ?25     = { defs={} expr=v2566[1] }
        ?26     = { defs={} expr=v2567[1] }
        ?27     = { defs={} expr=v2568[1] }
        ?28     = { defs={} expr=v2569[1] }
        ?29     = { defs={} expr=v2570[1] }
        ?30     = { defs={} expr=v2571[1] }
        ?31     = { defs={} expr=v2572[1] }
        ip      = { defs={0x08048440,0x08048441,0x08048443,0x08048446} expr=0x0804844d[32] }
    memory:
        address = { defs={0x08048440} expr=(add[32] v2531[32] -4[32]) }
          value = { defs={0x08048440} expr=v2532[32] }
          flags = { size=4 }
        address = { defs={0x08048440,0x08048443} expr=(add[32] (add[32] v2531[32] -4[32]) -8[32]) }
          value = { defs={0x08048446} expr=0x080485d4[32] }
          flags = { size=4 }
    ip = defs={0x08048440,0x08048441,0x08048443,0x08048446} expr=0x0804844d[32]
0x804844d:call   0x08048300<puts@plt>
    registers:
        ax      = { defs={} expr=v2527[32] }
        cx      = { defs={} expr=v2528[32] }
        dx      = { defs={} expr=v2529[32] }
        bx      = { defs={} expr=v2530[32] }
        sp      = { defs={0x08048440,0x08048443,0x0804844d} expr=(add[32] (add[32] (add[32] v2531[32] -4[32]) -8[32]) -4[32]) }
        bp      = { defs={0x08048440,0x08048441} expr=(add[32] v2531[32] -4[32]) }
        si      = { defs={} expr=v2533[32] }
        di      = { defs={} expr=v2534[32] }
        es      = { defs={} expr=v2535[16] }
        cs      = { defs={} expr=v2536[16] }
        ss      = { defs={} expr=v2537[16] }
        ds      = { defs={} expr=v2538[16] }
        fs      = { defs={} expr=v2539[16] }
        gs      = { defs={} expr=v2540[16] }
        cf      = { defs={0x08048440,0x08048443} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2531[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v2531[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v2542[1] }
        pf      = { defs={0x08048440,0x08048443} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2531[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2531[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2531[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2531[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2531[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2531[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2531[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2531[32] -4[32]) -8[32]))))))) }
        ?3      = { defs={} expr=v2544[1] }
        af      = { defs={0x08048440,0x08048443} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2531[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v2531[32] -4[32])) 4294967288[33])))))) }
        ?5      = { defs={} expr=v2546[1] }
        zf      = { defs={0x08048440,0x08048443} expr=(zerop[1] (add[32] (add[32] v2531[32] -4[32]) -8[32])) }
        sf      = { defs={0x08048440,0x08048443} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v2531[32] -4[32]) -8[32])) }
        tf      = { defs={} expr=v2549[1] }
        if      = { defs={} expr=v2550[1] }
        df      = { defs={} expr=v2551[1] }
        of      = { defs={0x08048440,0x08048443} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2531[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v2531[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2531[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v2531[32] -4[32])) 4294967288[33])))))) }
        iopl0   = { defs={} expr=v2553[1] }
        iopl1   = { defs={} expr=v2554[1] }
        nt      = { defs={} expr=v2555[1] }
        ?15     = { defs={} expr=v2556[1] }
        rf      = { defs={} expr=v2557[1] }
        vm      = { defs={} expr=v2558[1] }
        ac      = { defs={} expr=v2559[1] }
        vif     = { defs={} expr=v2560[1] }
        vip     = { defs={} expr=v2561[1] }
        id      = { defs={} expr=v2562[1] }
        ?22     = { defs={} expr=v2563[1] }
        ?23     = { defs={} expr=v2564[1] }
        ?24     = { defs={} expr=v2565[1] }
        ?25     = { defs={} expr=v2566[1] }
        ?26     = { defs={} expr=v2567[1] }
        ?27     = { defs={} expr=v2568[1] }
        ?28     = { defs={} expr=v2569[1] }
        ?29     = { defs={} expr=v2570[1] }
        ?30     = { defs={} expr=v2571[1] }
        ?31     = { defs={} expr=v2572[1] }
        ip      = { defs={0x0804844d} expr=0x08048300[32] }
    memory:
        address = { defs={0x08048440} expr=(add[32] v2531[32] -4[32]) }
          value = { defs={0x08048440} expr=v2532[32] }
          flags = { size=4 }
        address = { defs={0x08048440,0x08048443} expr=(add[32] (add[32] v2531[32] -4[32]) -8[32]) }
          value = { defs={0x08048446} expr=0x080485d4[32] }
          flags = { size=4 }
        address = { defs={0x08048440,0x08048443,0x0804844d} expr=(add[32] (add[32] (add[32] v2531[32] -4[32]) -8[32]) -4[32]) }
          value = { defs={0x08048440,0x08048441,0x08048443,0x08048446,0x0804844d} expr=0x08048452[32] }
          flags = { size=4 }
    ip = defs={0x0804844d} expr=0x08048300[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048452:mov    esp, ebp
    registers:
        ax      = { defs={} expr=v2621[32] }
        cx      = { defs={} expr=v2622[32] }
        dx      = { defs={} expr=v2623[32] }
        bx      = { defs={} expr=v2624[32] }
        sp      = { defs={0x08048452} expr=v2626[32] }
        bp      = { defs={} expr=v2626[32] }
        si      = { defs={} expr=v2627[32] }
        di      = { defs={} expr=v2628[32] }
        es      = { defs={} expr=v2629[16] }
        cs      = { defs={} expr=v2630[16] }
        ss      = { defs={} expr=v2631[16] }
        ds      = { defs={} expr=v2632[16] }
        fs      = { defs={} expr=v2633[16] }
        gs      = { defs={} expr=v2634[16] }
        cf      = { defs={} expr=v2635[1] }
        ?1      = { defs={} expr=v2636[1] }
        pf      = { defs={} expr=v2637[1] }
        ?3      = { defs={} expr=v2638[1] }
        af      = { defs={} expr=v2639[1] }
        ?5      = { defs={} expr=v2640[1] }
        zf      = { defs={} expr=v2641[1] }
        sf      = { defs={} expr=v2642[1] }
        tf      = { defs={} expr=v2643[1] }
        if      = { defs={} expr=v2644[1] }
        df      = { defs={} expr=v2645[1] }
        of      = { defs={} expr=v2646[1] }
        iopl0   = { defs={} expr=v2647[1] }
        iopl1   = { defs={} expr=v2648[1] }
        nt      = { defs={} expr=v2649[1] }
        ?15     = { defs={} expr=v2650[1] }
        rf      = { defs={} expr=v2651[1] }
        vm      = { defs={} expr=v2652[1] }
        ac      = { defs={} expr=v2653[1] }
        vif     = { defs={} expr=v2654[1] }
        vip     = { defs={} expr=v2655[1] }
        id      = { defs={} expr=v2656[1] }
        ?22     = { defs={} expr=v2657[1] }
        ?23     = { defs={} expr=v2658[1] }
        ?24     = { defs={} expr=v2659[1] }
        ?25     = { defs={} expr=v2660[1] }
        ?26     = { defs={} expr=v2661[1] }
        ?27     = { defs={} expr=v2662[1] }
        ?28     = { defs={} expr=v2663[1] }
        ?29     = { defs={} expr=v2664[1] }
        ?30     = { defs={} expr=v2665[1] }
        ?31     = { defs={} expr=v2666[1] }
        ip      = { defs={0x08048452} expr=0x08048454[32] }
    memory:
        (empty)
    ip = defs={0x08048452} expr=0x08048454[32]
0x8048454:pop    ebp
    registers:
        ax      = { defs={} expr=v2621[32] }
        cx      = { defs={} expr=v2622[32] }
        dx      = { defs={} expr=v2623[32] }
        bx      = { defs={} expr=v2624[32] }
        sp      = { defs={0x08048452,0x08048454} expr=(add[32] v2626[32] 4[32]) }
        bp      = { defs={0x08048454} expr=v2667[32] }
        si      = { defs={} expr=v2627[32] }
        di      = { defs={} expr=v2628[32] }
        es      = { defs={} expr=v2629[16] }
        cs      = { defs={} expr=v2630[16] }
        ss      = { defs={} expr=v2631[16] }
        ds      = { defs={} expr=v2632[16] }
        fs      = { defs={} expr=v2633[16] }
        gs      = { defs={} expr=v2634[16] }
        cf      = { defs={} expr=v2635[1] }
        ?1      = { defs={} expr=v2636[1] }
        pf      = { defs={} expr=v2637[1] }
        ?3      = { defs={} expr=v2638[1] }
        af      = { defs={} expr=v2639[1] }
        ?5      = { defs={} expr=v2640[1] }
        zf      = { defs={} expr=v2641[1] }
        sf      = { defs={} expr=v2642[1] }
        tf      = { defs={} expr=v2643[1] }
        if      = { defs={} expr=v2644[1] }
        df      = { defs={} expr=v2645[1] }
        of      = { defs={} expr=v2646[1] }
        iopl0   = { defs={} expr=v2647[1] }
        iopl1   = { defs={} expr=v2648[1] }
        nt      = { defs={} expr=v2649[1] }
        ?15     = { defs={} expr=v2650[1] }
        rf      = { defs={} expr=v2651[1] }
        vm      = { defs={} expr=v2652[1] }
        ac      = { defs={} expr=v2653[1] }
        vif     = { defs={} expr=v2654[1] }
        vip     = { defs={} expr=v2655[1] }
        id      = { defs={} expr=v2656[1] }
        ?22     = { defs={} expr=v2657[1] }
        ?23     = { defs={} expr=v2658[1] }
        ?24     = { defs={} expr=v2659[1] }
        ?25     = { defs={} expr=v2660[1] }
        ?26     = { defs={} expr=v2661[1] }
        ?27     = { defs={} expr=v2662[1] }
        ?28     = { defs={} expr=v2663[1] }
        ?29     = { defs={} expr=v2664[1] }
        ?30     = { defs={} expr=v2665[1] }
        ?31     = { defs={} expr=v2666[1] }
        ip      = { defs={0x08048452,0x08048454} expr=0x08048455[32] }
    memory:
        address = { defs={0x08048452} expr=v2626[32] }
          value = { defs={} expr=v2667[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048452,0x08048454} expr=0x08048455[32]
0x8048455:ret    
    registers:
        ax      = { defs={} expr=v2621[32] }
        cx      = { defs={} expr=v2622[32] }
        dx      = { defs={} expr=v2623[32] }
        bx      = { defs={} expr=v2624[32] }
        sp      = { defs={0x08048452,0x08048454,0x08048455} expr=(add[32] (add[32] v2626[32] 4[32]) 4[32]) }
        bp      = { defs={0x08048454} expr=v2667[32] }
        si      = { defs={} expr=v2627[32] }
        di      = { defs={} expr=v2628[32] }
        es      = { defs={} expr=v2629[16] }
        cs      = { defs={} expr=v2630[16] }
        ss      = { defs={} expr=v2631[16] }
        ds      = { defs={} expr=v2632[16] }
        fs      = { defs={} expr=v2633[16] }
        gs      = { defs={} expr=v2634[16] }
        cf      = { defs={} expr=v2635[1] }
        ?1      = { defs={} expr=v2636[1] }
        pf      = { defs={} expr=v2637[1] }
        ?3      = { defs={} expr=v2638[1] }
        af      = { defs={} expr=v2639[1] }
        ?5      = { defs={} expr=v2640[1] }
        zf      = { defs={} expr=v2641[1] }
        sf      = { defs={} expr=v2642[1] }
        tf      = { defs={} expr=v2643[1] }
        if      = { defs={} expr=v2644[1] }
        df      = { defs={} expr=v2645[1] }
        of      = { defs={} expr=v2646[1] }
        iopl0   = { defs={} expr=v2647[1] }
        iopl1   = { defs={} expr=v2648[1] }
        nt      = { defs={} expr=v2649[1] }
        ?15     = { defs={} expr=v2650[1] }
        rf      = { defs={} expr=v2651[1] }
        vm      = { defs={} expr=v2652[1] }
        ac      = { defs={} expr=v2653[1] }
        vif     = { defs={} expr=v2654[1] }
        vip     = { defs={} expr=v2655[1] }
        id      = { defs={} expr=v2656[1] }
        ?22     = { defs={} expr=v2657[1] }
        ?23     = { defs={} expr=v2658[1] }
        ?24     = { defs={} expr=v2659[1] }
        ?25     = { defs={} expr=v2660[1] }
        ?26     = { defs={} expr=v2661[1] }
        ?27     = { defs={} expr=v2662[1] }
        ?28     = { defs={} expr=v2663[1] }
        ?29     = { defs={} expr=v2664[1] }
        ?30     = { defs={} expr=v2665[1] }
        ?31     = { defs={} expr=v2666[1] }
        ip      = { defs={0x08048455} expr=v2668[32] }
    memory:
        address = { defs={0x08048452} expr=v2626[32] }
          value = { defs={} expr=v2667[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048452,0x08048454} expr=(add[32] v2626[32] 4[32]) }
          value = { defs={} expr=v2668[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048455} expr=v2668[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048460:push   ebp
    registers:
        ax      = { defs={} expr=v2717[32] }
        cx      = { defs={} expr=v2718[32] }
        dx      = { defs={} expr=v2719[32] }
        bx      = { defs={} expr=v2720[32] }
        sp      = { defs={0x08048460} expr=(add[32] v2721[32] -4[32]) }
        bp      = { defs={} expr=v2722[32] }
        si      = { defs={} expr=v2723[32] }
        di      = { defs={} expr=v2724[32] }
        es      = { defs={} expr=v2725[16] }
        cs      = { defs={} expr=v2726[16] }
        ss      = { defs={} expr=v2727[16] }
        ds      = { defs={} expr=v2728[16] }
        fs      = { defs={} expr=v2729[16] }
        gs      = { defs={} expr=v2730[16] }
        cf      = { defs={} expr=v2731[1] }
        ?1      = { defs={} expr=v2732[1] }
        pf      = { defs={} expr=v2733[1] }
        ?3      = { defs={} expr=v2734[1] }
        af      = { defs={} expr=v2735[1] }
        ?5      = { defs={} expr=v2736[1] }
        zf      = { defs={} expr=v2737[1] }
        sf      = { defs={} expr=v2738[1] }
        tf      = { defs={} expr=v2739[1] }
        if      = { defs={} expr=v2740[1] }
        df      = { defs={} expr=v2741[1] }
        of      = { defs={} expr=v2742[1] }
        iopl0   = { defs={} expr=v2743[1] }
        iopl1   = { defs={} expr=v2744[1] }
        nt      = { defs={} expr=v2745[1] }
        ?15     = { defs={} expr=v2746[1] }
        rf      = { defs={} expr=v2747[1] }
        vm      = { defs={} expr=v2748[1] }
        ac      = { defs={} expr=v2749[1] }
        vif     = { defs={} expr=v2750[1] }
        vip     = { defs={} expr=v2751[1] }
        id      = { defs={} expr=v2752[1] }
        ?22     = { defs={} expr=v2753[1] }
        ?23     = { defs={} expr=v2754[1] }
        ?24     = { defs={} expr=v2755[1] }
        ?25     = { defs={} expr=v2756[1] }
        ?26     = { defs={} expr=v2757[1] }
        ?27     = { defs={} expr=v2758[1] }
        ?28     = { defs={} expr=v2759[1] }
        ?29     = { defs={} expr=v2760[1] }
        ?30     = { defs={} expr=v2761[1] }
        ?31     = { defs={} expr=v2762[1] }
        ip      = { defs={0x08048460} expr=0x08048461[32] }
    memory:
        address = { defs={0x08048460} expr=(add[32] v2721[32] -4[32]) }
          value = { defs={0x08048460} expr=v2722[32] }
          flags = { size=4 }
    ip = defs={0x08048460} expr=0x08048461[32]
0x8048461:mov    ebp, esp
    registers:
        ax      = { defs={} expr=v2717[32] }
        cx      = { defs={} expr=v2718[32] }
        dx      = { defs={} expr=v2719[32] }
        bx      = { defs={} expr=v2720[32] }
        sp      = { defs={0x08048460} expr=(add[32] v2721[32] -4[32]) }
        bp      = { defs={0x08048460,0x08048461} expr=(add[32] v2721[32] -4[32]) }
        si      = { defs={} expr=v2723[32] }
        di      = { defs={} expr=v2724[32] }
        es      = { defs={} expr=v2725[16] }
        cs      = { defs={} expr=v2726[16] }
        ss      = { defs={} expr=v2727[16] }
        ds      = { defs={} expr=v2728[16] }
        fs      = { defs={} expr=v2729[16] }
        gs      = { defs={} expr=v2730[16] }
        cf      = { defs={} expr=v2731[1] }
        ?1      = { defs={} expr=v2732[1] }
        pf      = { defs={} expr=v2733[1] }
        ?3      = { defs={} expr=v2734[1] }
        af      = { defs={} expr=v2735[1] }
        ?5      = { defs={} expr=v2736[1] }
        zf      = { defs={} expr=v2737[1] }
        sf      = { defs={} expr=v2738[1] }
        tf      = { defs={} expr=v2739[1] }
        if      = { defs={} expr=v2740[1] }
        df      = { defs={} expr=v2741[1] }
        of      = { defs={} expr=v2742[1] }
        iopl0   = { defs={} expr=v2743[1] }
        iopl1   = { defs={} expr=v2744[1] }
        nt      = { defs={} expr=v2745[1] }
        ?15     = { defs={} expr=v2746[1] }
        rf      = { defs={} expr=v2747[1] }
        vm      = { defs={} expr=v2748[1] }
        ac      = { defs={} expr=v2749[1] }
        vif     = { defs={} expr=v2750[1] }
        vip     = { defs={} expr=v2751[1] }
        id      = { defs={} expr=v2752[1] }
        ?22     = { defs={} expr=v2753[1] }
        ?23     = { defs={} expr=v2754[1] }
        ?24     = { defs={} expr=v2755[1] }
        ?25     = { defs={} expr=v2756[1] }
        ?26     = { defs={} expr=v2757[1] }
        ?27     = { defs={} expr=v2758[1] }
        ?28     = { defs={} expr=v2759[1] }
        ?29     = { defs={} expr=v2760[1] }
        ?30     = { defs={} expr=v2761[1] }
        ?31     = { defs={} expr=v2762[1] }
        ip      = { defs={0x08048460,0x08048461} expr=0x08048463[32] }
    memory:
        address = { defs={0x08048460} expr=(add[32] v2721[32] -4[32]) }
          value = { defs={0x08048460} expr=v2722[32] }
          flags = { size=4 }
    ip = defs={0x08048460,0x08048461} expr=0x08048463[32]
0x8048463:sub    esp, 0x08
    registers:
        ax      = { defs={} expr=v2717[32] }
        cx      = { defs={} expr=v2718[32] }
        dx      = { defs={} expr=v2719[32] }
        bx      = { defs={} expr=v2720[32] }
        sp      = { defs={0x08048460,0x08048463} expr=(add[32] (add[32] v2721[32] -4[32]) -8[32]) }
        bp      = { defs={0x08048460,0x08048461} expr=(add[32] v2721[32] -4[32]) }
        si      = { defs={} expr=v2723[32] }
        di      = { defs={} expr=v2724[32] }
        es      = { defs={} expr=v2725[16] }
        cs      = { defs={} expr=v2726[16] }
        ss      = { defs={} expr=v2727[16] }
        ds      = { defs={} expr=v2728[16] }
        fs      = { defs={} expr=v2729[16] }
        gs      = { defs={} expr=v2730[16] }
        cf      = { defs={0x08048460,0x08048463} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2721[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v2721[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v2732[1] }
        pf      = { defs={0x08048460,0x08048463} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2721[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2721[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2721[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2721[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2721[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2721[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2721[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2721[32] -4[32]) -8[32]))))))) }
        ?3      = { defs={} expr=v2734[1] }
        af      = { defs={0x08048460,0x08048463} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2721[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v2721[32] -4[32])) 4294967288[33])))))) }
        ?5      = { defs={} expr=v2736[1] }
        zf      = { defs={0x08048460,0x08048463} expr=(zerop[1] (add[32] (add[32] v2721[32] -4[32]) -8[32])) }
        sf      = { defs={0x08048460,0x08048463} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v2721[32] -4[32]) -8[32])) }
        tf      = { defs={} expr=v2739[1] }
        if      = { defs={} expr=v2740[1] }
        df      = { defs={} expr=v2741[1] }
        of      = { defs={0x08048460,0x08048463} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2721[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v2721[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2721[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v2721[32] -4[32])) 4294967288[33])))))) }
        iopl0   = { defs={} expr=v2743[1] }
        iopl1   = { defs={} expr=v2744[1] }
        nt      = { defs={} expr=v2745[1] }
        ?15     = { defs={} expr=v2746[1] }
        rf      = { defs={} expr=v2747[1] }
        vm      = { defs={} expr=v2748[1] }
        ac      = { defs={} expr=v2749[1] }
        vif     = { defs={} expr=v2750[1] }
        vip     = { defs={} expr=v2751[1] }
        id      = { defs={} expr=v2752[1] }
        ?22     = { defs={} expr=v2753[1] }
        ?23     = { defs={} expr=v2754[1] }
        ?24     = { defs={} expr=v2755[1] }
        ?25     = { defs={} expr=v2756[1] }
        ?26     = { defs={} expr=v2757[1] }
        ?27     = { defs={} expr=v2758[1] }
        ?28     = { defs={} expr=v2759[1] }
        ?29     = { defs={} expr=v2760[1] }
        ?30     = { defs={} expr=v2761[1] }
        ?31     = { defs={} expr=v2762[1] }
        ip      = { defs={0x08048460,0x08048461,0x08048463} expr=0x08048466[32] }
    memory:
        address = { defs={0x08048460} expr=(add[32] v2721[32] -4[32]) }
          value = { defs={0x08048460} expr=v2722[32] }
          flags = { size=4 }
    ip = defs={0x08048460,0x08048461,0x08048463} expr=0x08048466[32]
0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>
    registers:
        ax      = { defs={} expr=v2717[32] }
        cx      = { defs={} expr=v2718[32] }
        dx      = { defs={} expr=v2719[32] }
        bx      = { defs={} expr=v2720[32] }
        sp      = { defs={0x08048460,0x08048463} expr=(add[32] (add[32] v2721[32] -4[32]) -8[32]) }
        bp      = { defs={0x08048460,0x08048461} expr=(add[32] v2721[32] -4[32]) }
        si      = { defs={} expr=v2723[32] }
        di      = { defs={} expr=v2724[32] }
        es      = { defs={} expr=v2725[16] }
        cs      = { defs={} expr=v2726[16] }
        ss      = { defs={} expr=v2727[16] }
        ds      = { defs={} expr=v2728[16] }
        fs      = { defs={} expr=v2729[16] }
        gs      = { defs={} expr=v2730[16] }
        cf      = { defs={0x08048460,0x08048463} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2721[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v2721[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v2732[1] }
        pf      = { defs={0x08048460,0x08048463} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2721[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2721[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2721[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2721[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2721[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2721[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2721[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2721[32] -4[32]) -8[32]))))))) }
        ?3      = { defs={} expr=v2734[1] }
        af      = { defs={0x08048460,0x08048463} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2721[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v2721[32] -4[32])) 4294967288[33])))))) }
        ?5      = { defs={} expr=v2736[1] }
        zf      = { defs={0x08048460,0x08048463} expr=(zerop[1] (add[32] (add[32] v2721[32] -4[32]) -8[32])) }
        sf      = { defs={0x08048460,0x08048463} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v2721[32] -4[32]) -8[32])) }
        tf      = { defs={} expr=v2739[1] }
        if      = { defs={} expr=v2740[1] }
        df      = { defs={} expr=v2741[1] }
        of      = { defs={0x08048460,0x08048463} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2721[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v2721[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2721[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v2721[32] -4[32])) 4294967288[33])))))) }
        iopl0   = { defs={} expr=v2743[1] }
        iopl1   = { defs={} expr=v2744[1] }
        nt      = { defs={} expr=v2745[1] }
        ?15     = { defs={} expr=v2746[1] }
        rf      = { defs={} expr=v2747[1] }
        vm      = { defs={} expr=v2748[1] }
        ac      = { defs={} expr=v2749[1] }
        vif     = { defs={} expr=v2750[1] }
        vip     = { defs={} expr=v2751[1] }
        id      = { defs={} expr=v2752[1] }
        ?22     = { defs={} expr=v2753[1] }
        ?23     = { defs={} expr=v2754[1] }
        ?24     = { defs={} expr=v2755[1] }
        ?25     = { defs={} expr=v2756[1] }
        ?26     = { defs={} expr=v2757[1] }
        ?27     = { defs={} expr=v2758[1] }
        ?28     = { defs={} expr=v2759[1] }
        ?29     = { defs={} expr=v2760[1] }
        ?30     = { defs={} expr=v2761[1] }
        ?31     = { defs={} expr=v2762[1] }
        ip      = { defs={0x08048460,0x08048461,0x08048463,0x08048466} expr=0x0804846d[32] }
    memory:
        address = { defs={0x08048460} expr=(add[32] v2721[32] -4[32]) }
          value = { defs={0x08048460} expr=v2722[32] }
          flags = { size=4 }
        address = { defs={0x08048460,0x08048463} expr=(add[32] (add[32] v2721[32] -4[32]) -8[32]) }
          value = { defs={0x08048466} expr=0x080485d4[32] }
          flags = { size=4 }
    ip = defs={0x08048460,0x08048461,0x08048463,0x08048466} expr=0x0804846d[32]
0x804846d:call   0x08048300<puts@plt>
    registers:
        ax      = { defs={} expr=v2717[32] }
        cx      = { defs={} expr=v2718[32] }
        dx      = { defs={} expr=v2719[32] }
        bx      = { defs={} expr=v2720[32] }
        sp      = { defs={0x08048460,0x08048463,0x0804846d} expr=(add[32] (add[32] (add[32] v2721[32] -4[32]) -8[32]) -4[32]) }
        bp      = { defs={0x08048460,0x08048461} expr=(add[32] v2721[32] -4[32]) }
        si      = { defs={} expr=v2723[32] }
        di      = { defs={} expr=v2724[32] }
        es      = { defs={} expr=v2725[16] }
        cs      = { defs={} expr=v2726[16] }
        ss      = { defs={} expr=v2727[16] }
        ds      = { defs={} expr=v2728[16] }
        fs      = { defs={} expr=v2729[16] }
        gs      = { defs={} expr=v2730[16] }
        cf      = { defs={0x08048460,0x08048463} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2721[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v2721[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v2732[1] }
        pf      = { defs={0x08048460,0x08048463} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2721[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2721[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2721[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2721[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2721[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2721[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2721[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2721[32] -4[32]) -8[32]))))))) }
        ?3      = { defs={} expr=v2734[1] }
        af      = { defs={0x08048460,0x08048463} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2721[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v2721[32] -4[32])) 4294967288[33])))))) }
        ?5      = { defs={} expr=v2736[1] }
        zf      = { defs={0x08048460,0x08048463} expr=(zerop[1] (add[32] (add[32] v2721[32] -4[32]) -8[32])) }
        sf      = { defs={0x08048460,0x08048463} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v2721[32] -4[32]) -8[32])) }
        tf      = { defs={} expr=v2739[1] }
        if      = { defs={} expr=v2740[1] }
        df      = { defs={} expr=v2741[1] }
        of      = { defs={0x08048460,0x08048463} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2721[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v2721[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2721[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v2721[32] -4[32])) 4294967288[33])))))) }
        iopl0   = { defs={} expr=v2743[1] }
        iopl1   = { defs={} expr=v2744[1] }
        nt      = { defs={} expr=v2745[1] }
        ?15     = { defs={} expr=v2746[1] }
        rf      = { defs={} expr=v2747[1] }
        vm      = { defs={} expr=v2748[1] }
        ac      = { defs={} expr=v2749[1] }
        vif     = { defs={} expr=v2750[1] }
        vip     = { defs={} expr=v2751[1] }
        id      = { defs={} expr=v2752[1] }
        ?22     = { defs={} expr=v2753[1] }
        ?23     = { defs={} expr=v2754[1] }
        ?24     = { defs={} expr=v2755[1] }
        ?25     = { defs={} expr=v2756[1] }
        ?26     = { defs={} expr=v2757[1] }
        ?27     = { defs={} expr=v2758[1] }
        ?28     = { defs={} expr=v2759[1] }
        ?29     = { defs={} expr=v2760[1] }
        ?30     = { defs={} expr=v2761[1] }
        ?31     = { defs={} expr=v2762[1] }
        ip      = { defs={0x0804846d} expr=0x08048300[32] }
    memory:
        address = { defs={0x08048460} expr=(add[32] v2721[32] -4[32]) }
          value = { defs={0x08048460} expr=v2722[32] }
          flags = { size=4 }
        address = { defs={0x08048460,0x08048463} expr=(add[32] (add[32] v2721[32] -4[32]) -8[32]) }
          value = { defs={0x08048466} expr=0x080485d4[32] }
          flags = { size=4 }
        address = { defs={0x08048460,0x08048463,0x0804846d} expr=(add[32] (add[32] (add[32] v2721[32] -4[32]) -8[32]) -4[32]) }
          value = { defs={0x08048460,0x08048461,0x08048463,0x08048466,0x0804846d} expr=0x08048472[32] }
          flags = { size=4 }
    ip = defs={0x0804846d} expr=0x08048300[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048472:mov    DWORD PTR ss:[esp], 0x00000000
    registers:
        ax      = { defs={} expr=v2811[32] }
        cx      = { defs={} expr=v2812[32] }
        dx      = { defs={} expr=v2813[32] }
        bx      = { defs={} expr=v2814[32] }
        sp      = { defs={} expr=v2815[32] }
        bp      = { defs={} expr=v2816[32] }
        si      = { defs={} expr=v2817[32] }
        di      = { defs={} expr=v2818[32] }
        es      = { defs={} expr=v2819[16] }
        cs      = { defs={} expr=v2820[16] }
        ss      = { defs={} expr=v2821[16] }
        ds      = { defs={} expr=v2822[16] }
        fs      = { defs={} expr=v2823[16] }
        gs      = { defs={} expr=v2824[16] }
        cf      = { defs={} expr=v2825[1] }
        ?1      = { defs={} expr=v2826[1] }
        pf      = { defs={} expr=v2827[1] }
        ?3      = { defs={} expr=v2828[1] }
        af      = { defs={} expr=v2829[1] }
        ?5      = { defs={} expr=v2830[1] }
        zf      = { defs={} expr=v2831[1] }
        sf      = { defs={} expr=v2832[1] }
        tf      = { defs={} expr=v2833[1] }
        if      = { defs={} expr=v2834[1] }
        df      = { defs={} expr=v2835[1] }
        of      = { defs={} expr=v2836[1] }
        iopl0   = { defs={} expr=v2837[1] }
        iopl1   = { defs={} expr=v2838[1] }
        nt      = { defs={} expr=v2839[1] }
        ?15     = { defs={} expr=v2840[1] }
        rf      = { defs={} expr=v2841[1] }
        vm      = { defs={} expr=v2842[1] }
        ac      = { defs={} expr=v2843[1] }
        vif     = { defs={} expr=v2844[1] }
        vip     = { defs={} expr=v2845[1] }
        id      = { defs={} expr=v2846[1] }
        ?22     = { defs={} expr=v2847[1] }
        ?23     = { defs={} expr=v2848[1] }
        ?24     = { defs={} expr=v2849[1] }
        ?25     = { defs={} expr=v2850[1] }
        ?26     = { defs={} expr=v2851[1] }
        ?27     = { defs={} expr=v2852[1] }
        ?28     = { defs={} expr=v2853[1] }
        ?29     = { defs={} expr=v2854[1] }
        ?30     = { defs={} expr=v2855[1] }
        ?31     = { defs={} expr=v2856[1] }
        ip      = { defs={0x08048472} expr=0x08048479[32] }
    memory:
        address = { defs={} expr=v2815[32] }
          value = { defs={0x08048472} expr=0[32] }
          flags = { size=4 }
    ip = defs={0x08048472} expr=0x08048479[32]
0x8048479:call   0x08048320<_exit@plt>
    registers:
        ax      = { defs={} expr=v2811[32] }
        cx      = { defs={} expr=v2812[32] }
        dx      = { defs={} expr=v2813[32] }
        bx      = { defs={} expr=v2814[32] }
        sp      = { defs={0x08048479} expr=(add[32] v2815[32] -4[32]) }
        bp      = { defs={} expr=v2816[32] }
        si      = { defs={} expr=v2817[32] }
        di      = { defs={} expr=v2818[32] }
        es      = { defs={} expr=v2819[16] }
        cs      = { defs={} expr=v2820[16] }
        ss      = { defs={} expr=v2821[16] }
        ds      = { defs={} expr=v2822[16] }
        fs      = { defs={} expr=v2823[16] }
        gs      = { defs={} expr=v2824[16] }
        cf      = { defs={} expr=v2825[1] }
        ?1      = { defs={} expr=v2826[1] }
        pf      = { defs={} expr=v2827[1] }
        ?3      = { defs={} expr=v2828[1] }
        af      = { defs={} expr=v2829[1] }
        ?5      = { defs={} expr=v2830[1] }
        zf      = { defs={} expr=v2831[1] }
        sf      = { defs={} expr=v2832[1] }
        tf      = { defs={} expr=v2833[1] }
        if      = { defs={} expr=v2834[1] }
        df      = { defs={} expr=v2835[1] }
        of      = { defs={} expr=v2836[1] }
        iopl0   = { defs={} expr=v2837[1] }
        iopl1   = { defs={} expr=v2838[1] }
        nt      = { defs={} expr=v2839[1] }
        ?15     = { defs={} expr=v2840[1] }
        rf      = { defs={} expr=v2841[1] }
        vm      = { defs={} expr=v2842[1] }
        ac      = { defs={} expr=v2843[1] }
        vif     = { defs={} expr=v2844[1] }
        vip     = { defs={} expr=v2845[1] }
        id      = { defs={} expr=v2846[1] }
        ?22     = { defs={} expr=v2847[1] }
        ?23     = { defs={} expr=v2848[1] }
        ?24     = { defs={} expr=v2849[1] }
        ?25     = { defs={} expr=v2850[1] }
        ?26     = { defs={} expr=v2851[1] }
        ?27     = { defs={} expr=v2852[1] }
        ?28     = { defs={} expr=v2853[1] }
        ?29     = { defs={} expr=v2854[1] }
        ?30     = { defs={} expr=v2855[1] }
        ?31     = { defs={} expr=v2856[1] }
        ip      = { defs={0x08048479} expr=0x08048320[32] }
    memory:
        address = { defs={} expr=v2815[32] }
          value = { defs={0x08048472} expr=0[32] }
          flags = { size=4 }
        address = { defs={0x08048479} expr=(add[32] v2815[32] -4[32]) }
          value = { defs={0x08048472,0x08048479} expr=0x0804847e[32] }
          flags = { size=4 }
    ip = defs={0x08048479} expr=0x08048320[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048480:push   ebp
    registers:
        ax      = { defs={} expr=v2905[32] }
        cx      = { defs={} expr=v2906[32] }
        dx      = { defs={} expr=v2907[32] }
        bx      = { defs={} expr=v2908[32] }
        sp      = { defs={0x08048480} expr=(add[32] v2909[32] -4[32]) }
        bp      = { defs={} expr=v2910[32] }
        si      = { defs={} expr=v2911[32] }
        di      = { defs={} expr=v2912[32] }
        es      = { defs={} expr=v2913[16] }
        cs      = { defs={} expr=v2914[16] }
        ss      = { defs={} expr=v2915[16] }
        ds      = { defs={} expr=v2916[16] }
        fs      = { defs={} expr=v2917[16] }
        gs      = { defs={} expr=v2918[16] }
        cf      = { defs={} expr=v2919[1] }
        ?1      = { defs={} expr=v2920[1] }
        pf      = { defs={} expr=v2921[1] }
        ?3      = { defs={} expr=v2922[1] }
        af      = { defs={} expr=v2923[1] }
        ?5      = { defs={} expr=v2924[1] }
        zf      = { defs={} expr=v2925[1] }
        sf      = { defs={} expr=v2926[1] }
        tf      = { defs={} expr=v2927[1] }
        if      = { defs={} expr=v2928[1] }
        df      = { defs={} expr=v2929[1] }
        of      = { defs={} expr=v2930[1] }
        iopl0   = { defs={} expr=v2931[1] }
        iopl1   = { defs={} expr=v2932[1] }
        nt      = { defs={} expr=v2933[1] }
        ?15     = { defs={} expr=v2934[1] }
        rf      = { defs={} expr=v2935[1] }
        vm      = { defs={} expr=v2936[1] }
        ac      = { defs={} expr=v2937[1] }
        vif     = { defs={} expr=v2938[1] }
        vip     = { defs={} expr=v2939[1] }
        id      = { defs={} expr=v2940[1] }
        ?22     = { defs={} expr=v2941[1] }
        ?23     = { defs={} expr=v2942[1] }
        ?24     = { defs={} expr=v2943[1] }
        ?25     = { defs={} expr=v2944[1] }
        ?26     = { defs={} expr=v2945[1] }
        ?27     = { defs={} expr=v2946[1] }
        ?28     = { defs={} expr=v2947[1] }
        ?29     = { defs={} expr=v2948[1] }
        ?30     = { defs={} expr=v2949[1] }
        ?31     = { defs={} expr=v2950[1] }
        ip      = { defs={0x08048480} expr=0x08048481[32] }
    memory:
        address = { defs={0x08048480} expr=(add[32] v2909[32] -4[32]) }
          value = { defs={0x08048480} expr=v2910[32] }
          flags = { size=4 }
    ip = defs={0x08048480} expr=0x08048481[32]
0x8048481:mov    ebp, esp
    registers:
        ax      = { defs={} expr=v2905[32] }
        cx      = { defs={} expr=v2906[32] }
        dx      = { defs={} expr=v2907[32] }
        bx      = { defs={} expr=v2908[32] }
        sp      = { defs={0x08048480} expr=(add[32] v2909[32] -4[32]) }
        bp      = { defs={0x08048480,0x08048481} expr=(add[32] v2909[32] -4[32]) }
        si      = { defs={} expr=v2911[32] }
        di      = { defs={} expr=v2912[32] }
        es      = { defs={} expr=v2913[16] }
        cs      = { defs={} expr=v2914[16] }
        ss      = { defs={} expr=v2915[16] }
        ds      = { defs={} expr=v2916[16] }
        fs      = { defs={} expr=v2917[16] }
        gs      = { defs={} expr=v2918[16] }
        cf      = { defs={} expr=v2919[1] }
        ?1      = { defs={} expr=v2920[1] }
        pf      = { defs={} expr=v2921[1] }
        ?3      = { defs={} expr=v2922[1] }
        af      = { defs={} expr=v2923[1] }
        ?5      = { defs={} expr=v2924[1] }
        zf      = { defs={} expr=v2925[1] }
        sf      = { defs={} expr=v2926[1] }
        tf      = { defs={} expr=v2927[1] }
        if      = { defs={} expr=v2928[1] }
        df      = { defs={} expr=v2929[1] }
        of      = { defs={} expr=v2930[1] }
        iopl0   = { defs={} expr=v2931[1] }
        iopl1   = { defs={} expr=v2932[1] }
        nt      = { defs={} expr=v2933[1] }
        ?15     = { defs={} expr=v2934[1] }
        rf      = { defs={} expr=v2935[1] }
        vm      = { defs={} expr=v2936[1] }
        ac      = { defs={} expr=v2937[1] }
        vif     = { defs={} expr=v2938[1] }
        vip     = { defs={} expr=v2939[1] }
        id      = { defs={} expr=v2940[1] }
        ?22     = { defs={} expr=v2941[1] }
        ?23     = { defs={} expr=v2942[1] }
        ?24     = { defs={} expr=v2943[1] }
        ?25     = { defs={} expr=v2944[1] }
        ?26     = { defs={} expr=v2945[1] }
        ?27     = { defs={} expr=v2946[1] }
        ?28     = { defs={} expr=v2947[1] }
        ?29     = { defs={} expr=v2948[1] }
        ?30     = { defs={} expr=v2949[1] }
        ?31     = { defs={} expr=v2950[1] }
        ip      = { defs={0x08048480,0x08048481} expr=0x08048483[32] }
    memory:
        address = { defs={0x08048480} expr=(add[32] v2909[32] -4[32]) }
          value = { defs={0x08048480} expr=v2910[32] }
          flags = { size=4 }
    ip = defs={0x08048480,0x08048481} expr=0x08048483[32]
0x8048483:sub    esp, 0x08
    registers:
        ax      = { defs={} expr=v2905[32] }
        cx      = { defs={} expr=v2906[32] }
        dx      = { defs={} expr=v2907[32] }
        bx      = { defs={} expr=v2908[32] }
        sp      = { defs={0x08048480,0x08048483} expr=(add[32] (add[32] v2909[32] -4[32]) -8[32]) }
        bp      = { defs={0x08048480,0x08048481} expr=(add[32] v2909[32] -4[32]) }
        si      = { defs={} expr=v2911[32] }
        di      = { defs={} expr=v2912[32] }
        es      = { defs={} expr=v2913[16] }
        cs      = { defs={} expr=v2914[16] }
        ss      = { defs={} expr=v2915[16] }
        ds      = { defs={} expr=v2916[16] }
        fs      = { defs={} expr=v2917[16] }
        gs      = { defs={} expr=v2918[16] }
        cf      = { defs={0x08048480,0x08048483} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2909[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v2909[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v2920[1] }
        pf      = { defs={0x08048480,0x08048483} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2909[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2909[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2909[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2909[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2909[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2909[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2909[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2909[32] -4[32]) -8[32]))))))) }
        ?3      = { defs={} expr=v2922[1] }
        af      = { defs={0x08048480,0x08048483} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2909[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v2909[32] -4[32])) 4294967288[33])))))) }
        ?5      = { defs={} expr=v2924[1] }
        zf      = { defs={0x08048480,0x08048483} expr=(zerop[1] (add[32] (add[32] v2909[32] -4[32]) -8[32])) }
        sf      = { defs={0x08048480,0x08048483} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v2909[32] -4[32]) -8[32])) }
        tf      = { defs={} expr=v2927[1] }
        if      = { defs={} expr=v2928[1] }
        df      = { defs={} expr=v2929[1] }
        of      = { defs={0x08048480,0x08048483} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2909[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v2909[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2909[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v2909[32] -4[32])) 4294967288[33])))))) }
        iopl0   = { defs={} expr=v2931[1] }
        iopl1   = { defs={} expr=v2932[1] }
        nt      = { defs={} expr=v2933[1] }
        ?15     = { defs={} expr=v2934[1] }
        rf      = { defs={} expr=v2935[1] }
        vm      = { defs={} expr=v2936[1] }
        ac      = { defs={} expr=v2937[1] }
        vif     = { defs={} expr=v2938[1] }
        vip     = { defs={} expr=v2939[1] }
        id      = { defs={} expr=v2940[1] }
        ?22     = { defs={} expr=v2941[1] }
        ?23     = { defs={} expr=v2942[1] }
        ?24     = { defs={} expr=v2943[1] }
        ?25     = { defs={} expr=v2944[1] }
        ?26     = { defs={} expr=v2945[1] }
        ?27     = { defs={} expr=v2946[1] }
        ?28     = { defs={} expr=v2947[1] }
        ?29     = { defs={} expr=v2948[1] }
        ?30     = { defs={} expr=v2949[1] }
        ?31     = { defs={} expr=v2950[1] }
        ip      = { defs={0x08048480,0x08048481,0x08048483} expr=0x08048486[32] }
    memory:
        address = { defs={0x08048480} expr=(add[32] v2909[32] -4[32]) }
          value = { defs={0x08048480} expr=v2910[32] }
          flags = { size=4 }
    ip = defs={0x08048480,0x08048481,0x08048483} expr=0x08048486[32]
0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]
    registers:
        ax      = { defs={} expr=v2905[32] }
        cx      = { defs={} expr=v2906[32] }
        dx      = { defs={} expr=v2907[32] }
        bx      = { defs={} expr=v2908[32] }
        sp      = { defs={0x08048480,0x08048483} expr=(add[32] (add[32] v2909[32] -4[32]) -8[32]) }
        bp      = { defs={0x08048480,0x08048481} expr=(add[32] v2909[32] -4[32]) }
        si      = { defs={} expr=v2911[32] }
        di      = { defs={} expr=v2912[32] }
        es      = { defs={} expr=v2913[16] }
        cs      = { defs={} expr=v2914[16] }
        ss      = { defs={} expr=v2915[16] }
        ds      = { defs={} expr=v2916[16] }
        fs      = { defs={} expr=v2917[16] }
        gs      = { defs={} expr=v2918[16] }
        cf      = { defs={0x08048480,0x08048483} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2909[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v2909[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v2920[1] }
        pf      = { defs={0x08048486} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2951[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2951[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2951[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2951[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2951[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2951[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2951[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2951[32] 1[32]))))))) }
        ?3      = { defs={} expr=v2922[1] }
        af      = { defs={0x08048486} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2951[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v2951[32]) 1[33]))))) }
        ?5      = { defs={} expr=v2924[1] }
        zf      = { defs={0x08048486} expr=(zerop[1] (add[32] v2951[32] 1[32])) }
        sf      = { defs={0x08048486} expr=(extract[1] 31[32] 32[32] (add[32] v2951[32] 1[32])) }
        tf      = { defs={} expr=v2927[1] }
        if      = { defs={} expr=v2928[1] }
        df      = { defs={} expr=v2929[1] }
        of      = { defs={0x08048486} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2951[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v2951[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2951[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v2951[32]) 1[33])))))) }
        iopl0   = { defs={} expr=v2931[1] }
        iopl1   = { defs={} expr=v2932[1] }
        nt      = { defs={} expr=v2933[1] }
        ?15     = { defs={} expr=v2934[1] }
        rf      = { defs={} expr=v2935[1] }
        vm      = { defs={} expr=v2936[1] }
        ac      = { defs={} expr=v2937[1] }
        vif     = { defs={} expr=v2938[1] }
        vip     = { defs={} expr=v2939[1] }
        id      = { defs={} expr=v2940[1] }
        ?22     = { defs={} expr=v2941[1] }
        ?23     = { defs={} expr=v2942[1] }
        ?24     = { defs={} expr=v2943[1] }
        ?25     = { defs={} expr=v2944[1] }
        ?26     = { defs={} expr=v2945[1] }
        ?27     = { defs={} expr=v2946[1] }
        ?28     = { defs={} expr=v2947[1] }
        ?29     = { defs={} expr=v2948[1] }
        ?30     = { defs={} expr=v2949[1] }
        ?31     = { defs={} expr=v2950[1] }
        ip      = { defs={0x08048480,0x08048481,0x08048483,0x08048486} expr=0x0804848c[32] }
    memory:
        address = { defs={0x08048480} expr=(add[32] v2909[32] -4[32]) }
          value = { defs={0x08048480} expr=v2910[32] }
          flags = { size=4 }
        address = { defs={0x08048486} expr=0x080496f8[32] }
          value = { defs={0x08048486} expr=(add[32] v2951[32] 1[32]) }
          flags = { size=4 }
    ip = defs={0x08048480,0x08048481,0x08048483,0x08048486} expr=0x0804848c[32]
0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>
    registers:
        ax      = { defs={} expr=v2905[32] }
        cx      = { defs={} expr=v2906[32] }
        dx      = { defs={} expr=v2907[32] }
        bx      = { defs={} expr=v2908[32] }
        sp      = { defs={0x08048480,0x08048483} expr=(add[32] (add[32] v2909[32] -4[32]) -8[32]) }
        bp      = { defs={0x08048480,0x08048481} expr=(add[32] v2909[32] -4[32]) }
        si      = { defs={} expr=v2911[32] }
        di      = { defs={} expr=v2912[32] }
        es      = { defs={} expr=v2913[16] }
        cs      = { defs={} expr=v2914[16] }
        ss      = { defs={} expr=v2915[16] }
        ds      = { defs={} expr=v2916[16] }
        fs      = { defs={} expr=v2917[16] }
        gs      = { defs={} expr=v2918[16] }
        cf      = { defs={0x08048480,0x08048483} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2909[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v2909[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v2920[1] }
        pf      = { defs={0x08048486} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2951[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2951[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2951[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2951[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2951[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2951[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2951[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2951[32] 1[32]))))))) }
        ?3      = { defs={} expr=v2922[1] }
        af      = { defs={0x08048486} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2951[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v2951[32]) 1[33]))))) }
        ?5      = { defs={} expr=v2924[1] }
        zf      = { defs={0x08048486} expr=(zerop[1] (add[32] v2951[32] 1[32])) }
        sf      = { defs={0x08048486} expr=(extract[1] 31[32] 32[32] (add[32] v2951[32] 1[32])) }
        tf      = { defs={} expr=v2927[1] }
        if      = { defs={} expr=v2928[1] }
        df      = { defs={} expr=v2929[1] }
        of      = { defs={0x08048486} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2951[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v2951[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2951[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v2951[32]) 1[33])))))) }
        iopl0   = { defs={} expr=v2931[1] }
        iopl1   = { defs={} expr=v2932[1] }
        nt      = { defs={} expr=v2933[1] }
        ?15     = { defs={} expr=v2934[1] }
        rf      = { defs={} expr=v2935[1] }
        vm      = { defs={} expr=v2936[1] }
        ac      = { defs={} expr=v2937[1] }
        vif     = { defs={} expr=v2938[1] }
        vip     = { defs={} expr=v2939[1] }
        id      = { defs={} expr=v2940[1] }
        ?22     = { defs={} expr=v2941[1] }
        ?23     = { defs={} expr=v2942[1] }
        ?24     = { defs={} expr=v2943[1] }
        ?25     = { defs={} expr=v2944[1] }
        ?26     = { defs={} expr=v2945[1] }
        ?27     = { defs={} expr=v2946[1] }
        ?28     = { defs={} expr=v2947[1] }
        ?29     = { defs={} expr=v2948[1] }
        ?30     = { defs={} expr=v2949[1] }
        ?31     = { defs={} expr=v2950[1] }
        ip      = { defs={0x08048480,0x08048481,0x08048483,0x08048486,0x0804848c} expr=0x08048493[32] }
    memory:
        address = { defs={0x08048480} expr=(add[32] v2909[32] -4[32]) }
          value = { defs={0x08048480} expr=v2910[32] }
          flags = { size=4 }
        address = { defs={0x08048486} expr=0x080496f8[32] }
          value = { defs={0x08048486} expr=(add[32] v2951[32] 1[32]) }
          flags = { size=4 }
        address = { defs={0x08048480,0x08048483} expr=(add[32] (add[32] v2909[32] -4[32]) -8[32]) }
          value = { defs={0x0804848c} expr=0x080485d4[32] }
          flags = { size=4 }
    ip = defs={0x08048480,0x08048481,0x08048483,0x08048486,0x0804848c} expr=0x08048493[32]
0x8048493:call   0x08048300<puts@plt>
    registers:
        ax      = { defs={} expr=v2905[32] }
        cx      = { defs={} expr=v2906[32] }
        dx      = { defs={} expr=v2907[32] }
        bx      = { defs={} expr=v2908[32] }
        sp      = { defs={0x08048480,0x08048483,0x08048493} expr=(add[32] (add[32] (add[32] v2909[32] -4[32]) -8[32]) -4[32]) }
        bp      = { defs={0x08048480,0x08048481} expr=(add[32] v2909[32] -4[32]) }
        si      = { defs={} expr=v2911[32] }
        di      = { defs={} expr=v2912[32] }
        es      = { defs={} expr=v2913[16] }
        cs      = { defs={} expr=v2914[16] }
        ss      = { defs={} expr=v2915[16] }
        ds      = { defs={} expr=v2916[16] }
        fs      = { defs={} expr=v2917[16] }
        gs      = { defs={} expr=v2918[16] }
        cf      = { defs={0x08048480,0x08048483} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2909[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v2909[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v2920[1] }
        pf      = { defs={0x08048486} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2951[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2951[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2951[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2951[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2951[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2951[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2951[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2951[32] 1[32]))))))) }
        ?3      = { defs={} expr=v2922[1] }
        af      = { defs={0x08048486} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2951[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v2951[32]) 1[33]))))) }
        ?5      = { defs={} expr=v2924[1] }
        zf      = { defs={0x08048486} expr=(zerop[1] (add[32] v2951[32] 1[32])) }
        sf      = { defs={0x08048486} expr=(extract[1] 31[32] 32[32] (add[32] v2951[32] 1[32])) }
        tf      = { defs={} expr=v2927[1] }
        if      = { defs={} expr=v2928[1] }
        df      = { defs={} expr=v2929[1] }
        of      = { defs={0x08048486} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2951[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v2951[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2951[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v2951[32]) 1[33])))))) }
        iopl0   = { defs={} expr=v2931[1] }
        iopl1   = { defs={} expr=v2932[1] }
        nt      = { defs={} expr=v2933[1] }
        ?15     = { defs={} expr=v2934[1] }
        rf      = { defs={} expr=v2935[1] }
        vm      = { defs={} expr=v2936[1] }
        ac      = { defs={} expr=v2937[1] }
        vif     = { defs={} expr=v2938[1] }
        vip     = { defs={} expr=v2939[1] }
        id      = { defs={} expr=v2940[1] }
        ?22     = { defs={} expr=v2941[1] }
        ?23     = { defs={} expr=v2942[1] }
        ?24     = { defs={} expr=v2943[1] }
        ?25     = { defs={} expr=v2944[1] }
        ?26     = { defs={} expr=v2945[1] }
        ?27     = { defs={} expr=v2946[1] }
        ?28     = { defs={} expr=v2947[1] }
        ?29     = { defs={} expr=v2948[1] }
        ?30     = { defs={} expr=v2949[1] }
        ?31     = { defs={} expr=v2950[1] }
        ip      = { defs={0x08048493} expr=0x08048300[32] }
    memory:
        address = { defs={0x08048480} expr=(add[32] v2909[32] -4[32]) }
          value = { defs={0x08048480} expr=v2910[32] }
          flags = { size=4 }
        address = { defs={0x08048486} expr=0x080496f8[32] }
          value = { defs={0x08048486} expr=(add[32] v2951[32] 1[32]) }
          flags = { size=4 }
        address = { defs={0x08048480,0x08048483} expr=(add[32] (add[32] v2909[32] -4[32]) -8[32]) }
          value = { defs={0x0804848c} expr=0x080485d4[32] }
          flags = { size=4 }
        address = { defs={0x08048480,0x08048483,0x08048493} expr=(add[32] (add[32] (add[32] v2909[32] -4[32]) -8[32]) -4[32]) }
          value = { defs={0x08048480,0x08048481,0x08048483,0x08048486,0x0804848c,0x08048493} expr=0x08048498[32] }
          flags = { size=4 }
    ip = defs={0x08048493} expr=0x08048300[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048498:mov    DWORD PTR ss:[esp], 0x00000000
    registers:
        ax      = { defs={} expr=v3000[32] }
        cx      = { defs={} expr=v3001[32] }
        dx      = { defs={} expr=v3002[32] }
        bx      = { defs={} expr=v3003[32] }
        sp      = { defs={} expr=v3004[32] }
        bp      = { defs={} expr=v3005[32] }
        si      = { defs={} expr=v3006[32] }
        di      = { defs={} expr=v3007[32] }
        es      = { defs={} expr=v3008[16] }
        cs      = { defs={} expr=v3009[16] }
        ss      = { defs={} expr=v3010[16] }
        ds      = { defs={} expr=v3011[16] }
        fs      = { defs={} expr=v3012[16] }
        gs      = { defs={} expr=v3013[16] }
        cf      = { defs={} expr=v3014[1] }
        ?1      = { defs={} expr=v3015[1] }
        pf      = { defs={} expr=v3016[1] }
        ?3      = { defs={} expr=v3017[1] }
        af      = { defs={} expr=v3018[1] }
        ?5      = { defs={} expr=v3019[1] }
        zf      = { defs={} expr=v3020[1] }
        sf      = { defs={} expr=v3021[1] }
        tf      = { defs={} expr=v3022[1] }
        if      = { defs={} expr=v3023[1] }
        df      = { defs={} expr=v3024[1] }
        of      = { defs={} expr=v3025[1] }
        iopl0   = { defs={} expr=v3026[1] }
        iopl1   = { defs={} expr=v3027[1] }
        nt      = { defs={} expr=v3028[1] }
        ?15     = { defs={} expr=v3029[1] }
        rf      = { defs={} expr=v3030[1] }
        vm      = { defs={} expr=v3031[1] }
        ac      = { defs={} expr=v3032[1] }
        vif     = { defs={} expr=v3033[1] }
        vip     = { defs={} expr=v3034[1] }
        id      = { defs={} expr=v3035[1] }
        ?22     = { defs={} expr=v3036[1] }
        ?23     = { defs={} expr=v3037[1] }
        ?24     = { defs={} expr=v3038[1] }
        ?25     = { defs={} expr=v3039[1] }
        ?26     = { defs={} expr=v3040[1] }
        ?27     = { defs={} expr=v3041[1] }
        ?28     = { defs={} expr=v3042[1] }
        ?29     = { defs={} expr=v3043[1] }
        ?30     = { defs={} expr=v3044[1] }
        ?31     = { defs={} expr=v3045[1] }
        ip      = { defs={0x08048498} expr=0x0804849f[32] }
    memory:
        address = { defs={} expr=v3004[32] }
          value = { defs={0x08048498} expr=0[32] }
          flags = { size=4 }
    ip = defs={0x08048498} expr=0x0804849f[32]
0x804849f:call   0x08048320<_exit@plt>
    registers:
        ax      = { defs={} expr=v3000[32] }
        cx      = { defs={} expr=v3001[32] }
        dx      = { defs={} expr=v3002[32] }
        bx      = { defs={} expr=v3003[32] }
        sp      = { defs={0x0804849f} expr=(add[32] v3004[32] -4[32]) }
        bp      = { defs={} expr=v3005[32] }
        si      = { defs={} expr=v3006[32] }
        di      = { defs={} expr=v3007[32] }
        es      = { defs={} expr=v3008[16] }
        cs      = { defs={} expr=v3009[16] }
        ss      = { defs={} expr=v3010[16] }
        ds      = { defs={} expr=v3011[16] }
        fs      = { defs={} expr=v3012[16] }
        gs      = { defs={} expr=v3013[16] }
        cf      = { defs={} expr=v3014[1] }
        ?1      = { defs={} expr=v3015[1] }
        pf      = { defs={} expr=v3016[1] }
        ?3      = { defs={} expr=v3017[1] }
        af      = { defs={} expr=v3018[1] }
        ?5      = { defs={} expr=v3019[1] }
        zf      = { defs={} expr=v3020[1] }
        sf      = { defs={} expr=v3021[1] }
        tf      = { defs={} expr=v3022[1] }
        if      = { defs={} expr=v3023[1] }
        df      = { defs={} expr=v3024[1] }
        of      = { defs={} expr=v3025[1] }
        iopl0   = { defs={} expr=v3026[1] }
        iopl1   = { defs={} expr=v3027[1] }
        nt      = { defs={} expr=v3028[1] }
        ?15     = { defs={} expr=v3029[1] }
        rf      = { defs={} expr=v3030[1] }
        vm      = { defs={} expr=v3031[1] }
        ac      = { defs={} expr=v3032[1] }
        vif     = { defs={} expr=v3033[1] }
        vip     = { defs={} expr=v3034[1] }
        id      = { defs={} expr=v3035[1] }
        ?22     = { defs={} expr=v3036[1] }
        ?23     = { defs={} expr=v3037[1] }
        ?24     = { defs={} expr=v3038[1] }
        ?25     = { defs={} expr=v3039[1] }
        ?26     = { defs={} expr=v3040[1] }
        ?27     = { defs={} expr=v3041[1] }
        ?28     = { defs={} expr=v3042[1] }
        ?29     = { defs={} expr=v3043[1] }
        ?30     = { defs={} expr=v3044[1] }
        ?31     = { defs={} expr=v3045[1] }
        ip      = { defs={0x0804849f} expr=0x08048320[32] }
    memory:
        address = { defs={} expr=v3004[32] }
          value = { defs={0x08048498} expr=0[32] }
          flags = { size=4 }
        address = { defs={0x0804849f} expr=(add[32] v3004[32] -4[32]) }
          value = { defs={0x08048498,0x0804849f} expr=0x080484a4[32] }
          flags = { size=4 }
    ip = defs={0x0804849f} expr=0x08048320[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484b0:push   ebp
    registers:
        ax      = { defs={} expr=v3094[32] }
        cx      = { defs={} expr=v3095[32] }
        dx      = { defs={} expr=v3096[32] }
        bx      = { defs={} expr=v3097[32] }
        sp      = { defs={0x080484b0} expr=(add[32] v3098[32] -4[32]) }
        bp      = { defs={} expr=v3099[32] }
        si      = { defs={} expr=v3100[32] }
        di      = { defs={} expr=v3101[32] }
        es      = { defs={} expr=v3102[16] }
        cs      = { defs={} expr=v3103[16] }
        ss      = { defs={} expr=v3104[16] }
        ds      = { defs={} expr=v3105[16] }
        fs      = { defs={} expr=v3106[16] }
        gs      = { defs={} expr=v3107[16] }
        cf      = { defs={} expr=v3108[1] }
        ?1      = { defs={} expr=v3109[1] }
        pf      = { defs={} expr=v3110[1] }
        ?3      = { defs={} expr=v3111[1] }
        af      = { defs={} expr=v3112[1] }
        ?5      = { defs={} expr=v3113[1] }
        zf      = { defs={} expr=v3114[1] }
        sf      = { defs={} expr=v3115[1] }
        tf      = { defs={} expr=v3116[1] }
        if      = { defs={} expr=v3117[1] }
        df      = { defs={} expr=v3118[1] }
        of      = { defs={} expr=v3119[1] }
        iopl0   = { defs={} expr=v3120[1] }
        iopl1   = { defs={} expr=v3121[1] }
        nt      = { defs={} expr=v3122[1] }
        ?15     = { defs={} expr=v3123[1] }
        rf      = { defs={} expr=v3124[1] }
        vm      = { defs={} expr=v3125[1] }
        ac      = { defs={} expr=v3126[1] }
        vif     = { defs={} expr=v3127[1] }
        vip     = { defs={} expr=v3128[1] }
        id      = { defs={} expr=v3129[1] }
        ?22     = { defs={} expr=v3130[1] }
        ?23     = { defs={} expr=v3131[1] }
        ?24     = { defs={} expr=v3132[1] }
        ?25     = { defs={} expr=v3133[1] }
        ?26     = { defs={} expr=v3134[1] }
        ?27     = { defs={} expr=v3135[1] }
        ?28     = { defs={} expr=v3136[1] }
        ?29     = { defs={} expr=v3137[1] }
        ?30     = { defs={} expr=v3138[1] }
        ?31     = { defs={} expr=v3139[1] }
        ip      = { defs={0x080484b0} expr=0x080484b1[32] }
    memory:
        address = { defs={0x080484b0} expr=(add[32] v3098[32] -4[32]) }
          value = { defs={0x080484b0} expr=v3099[32] }
          flags = { size=4 }
    ip = defs={0x080484b0} expr=0x080484b1[32]
0x80484b1:mov    ebp, esp
    registers:
        ax      = { defs={} expr=v3094[32] }
        cx      = { defs={} expr=v3095[32] }
        dx      = { defs={} expr=v3096[32] }
        bx      = { defs={} expr=v3097[32] }
        sp      = { defs={0x080484b0} expr=(add[32] v3098[32] -4[32]) }
        bp      = { defs={0x080484b0,0x080484b1} expr=(add[32] v3098[32] -4[32]) }
        si      = { defs={} expr=v3100[32] }
        di      = { defs={} expr=v3101[32] }
        es      = { defs={} expr=v3102[16] }
        cs      = { defs={} expr=v3103[16] }
        ss      = { defs={} expr=v3104[16] }
        ds      = { defs={} expr=v3105[16] }
        fs      = { defs={} expr=v3106[16] }
        gs      = { defs={} expr=v3107[16] }
        cf      = { defs={} expr=v3108[1] }
        ?1      = { defs={} expr=v3109[1] }
        pf      = { defs={} expr=v3110[1] }
        ?3      = { defs={} expr=v3111[1] }
        af      = { defs={} expr=v3112[1] }
        ?5      = { defs={} expr=v3113[1] }
        zf      = { defs={} expr=v3114[1] }
        sf      = { defs={} expr=v3115[1] }
        tf      = { defs={} expr=v3116[1] }
        if      = { defs={} expr=v3117[1] }
        df      = { defs={} expr=v3118[1] }
        of      = { defs={} expr=v3119[1] }
        iopl0   = { defs={} expr=v3120[1] }
        iopl1   = { defs={} expr=v3121[1] }
        nt      = { defs={} expr=v3122[1] }
        ?15     = { defs={} expr=v3123[1] }
        rf      = { defs={} expr=v3124[1] }
        vm      = { defs={} expr=v3125[1] }
        ac      = { defs={} expr=v3126[1] }
        vif     = { defs={} expr=v3127[1] }
        vip     = { defs={} expr=v3128[1] }
        id      = { defs={} expr=v3129[1] }
        ?22     = { defs={} expr=v3130[1] }
        ?23     = { defs={} expr=v3131[1] }
        ?24     = { defs={} expr=v3132[1] }
        ?25     = { defs={} expr=v3133[1] }
        ?26     = { defs={} expr=v3134[1] }
        ?27     = { defs={} expr=v3135[1] }
        ?28     = { defs={} expr=v3136[1] }
        ?29     = { defs={} expr=v3137[1] }
        ?30     = { defs={} expr=v3138[1] }
        ?31     = { defs={} expr=v3139[1] }
        ip      = { defs={0x080484b0,0x080484b1} expr=0x080484b3[32] }
    memory:
        address = { defs={0x080484b0} expr=(add[32] v3098[32] -4[32]) }
          value = { defs={0x080484b0} expr=v3099[32] }
          flags = { size=4 }
    ip = defs={0x080484b0,0x080484b1} expr=0x080484b3[32]
0x80484b3:push   edi
    registers:
        ax      = { defs={} expr=v3094[32] }
        cx      = { defs={} expr=v3095[32] }
        dx      = { defs={} expr=v3096[32] }
        bx      = { defs={} expr=v3097[32] }
        sp      = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] v3098[32] -4[32]) -4[32]) }
        bp      = { defs={0x080484b0,0x080484b1} expr=(add[32] v3098[32] -4[32]) }
        si      = { defs={} expr=v3100[32] }
        di      = { defs={} expr=v3101[32] }
        es      = { defs={} expr=v3102[16] }
        cs      = { defs={} expr=v3103[16] }
        ss      = { defs={} expr=v3104[16] }
        ds      = { defs={} expr=v3105[16] }
        fs      = { defs={} expr=v3106[16] }
        gs      = { defs={} expr=v3107[16] }
        cf      = { defs={} expr=v3108[1] }
        ?1      = { defs={} expr=v3109[1] }
        pf      = { defs={} expr=v3110[1] }
        ?3      = { defs={} expr=v3111[1] }
        af      = { defs={} expr=v3112[1] }
        ?5      = { defs={} expr=v3113[1] }
        zf      = { defs={} expr=v3114[1] }
        sf      = { defs={} expr=v3115[1] }
        tf      = { defs={} expr=v3116[1] }
        if      = { defs={} expr=v3117[1] }
        df      = { defs={} expr=v3118[1] }
        of      = { defs={} expr=v3119[1] }
        iopl0   = { defs={} expr=v3120[1] }
        iopl1   = { defs={} expr=v3121[1] }
        nt      = { defs={} expr=v3122[1] }
        ?15     = { defs={} expr=v3123[1] }
        rf      = { defs={} expr=v3124[1] }
        vm      = { defs={} expr=v3125[1] }
        ac      = { defs={} expr=v3126[1] }
        vif     = { defs={} expr=v3127[1] }
        vip     = { defs={} expr=v3128[1] }
        id      = { defs={} expr=v3129[1] }
        ?22     = { defs={} expr=v3130[1] }
        ?23     = { defs={} expr=v3131[1] }
        ?24     = { defs={} expr=v3132[1] }
        ?25     = { defs={} expr=v3133[1] }
        ?26     = { defs={} expr=v3134[1] }
        ?27     = { defs={} expr=v3135[1] }
        ?28     = { defs={} expr=v3136[1] }
        ?29     = { defs={} expr=v3137[1] }
        ?30     = { defs={} expr=v3138[1] }
        ?31     = { defs={} expr=v3139[1] }
        ip      = { defs={0x080484b0,0x080484b1,0x080484b3} expr=0x080484b4[32] }
    memory:
        address = { defs={0x080484b0} expr=(add[32] v3098[32] -4[32]) }
          value = { defs={0x080484b0} expr=v3099[32] }
          flags = { size=4 }
        address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] v3098[32] -4[32]) -4[32]) }
          value = { defs={0x080484b3} expr=v3101[32] }
          flags = { size=4 }
    ip = defs={0x080484b0,0x080484b1,0x080484b3} expr=0x080484b4[32]
0x80484b4:push   esi
    registers:
        ax      = { defs={} expr=v3094[32] }
        cx      = { defs={} expr=v3095[32] }
        dx      = { defs={} expr=v3096[32] }
        bx      = { defs={} expr=v3097[32] }
        sp      = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x080484b0,0x080484b1} expr=(add[32] v3098[32] -4[32]) }
        si      = { defs={} expr=v3100[32] }
        di      = { defs={} expr=v3101[32] }
        es      = { defs={} expr=v3102[16] }
        cs      = { defs={} expr=v3103[16] }
        ss      = { defs={} expr=v3104[16] }
        ds      = { defs={} expr=v3105[16] }
        fs      = { defs={} expr=v3106[16] }
        gs      = { defs={} expr=v3107[16] }
        cf      = { defs={} expr=v3108[1] }
        ?1      = { defs={} expr=v3109[1] }
        pf      = { defs={} expr=v3110[1] }
        ?3      = { defs={} expr=v3111[1] }
        af      = { defs={} expr=v3112[1] }
        ?5      = { defs={} expr=v3113[1] }
        zf      = { defs={} expr=v3114[1] }
        sf      = { defs={} expr=v3115[1] }
        tf      = { defs={} expr=v3116[1] }
        if      = { defs={} expr=v3117[1] }
        df      = { defs={} expr=v3118[1] }
        of      = { defs={} expr=v3119[1] }
        iopl0   = { defs={} expr=v3120[1] }
        iopl1   = { defs={} expr=v3121[1] }
        nt      = { defs={} expr=v3122[1] }
        ?15     = { defs={} expr=v3123[1] }
        rf      = { defs={} expr=v3124[1] }
        vm      = { defs={} expr=v3125[1] }
        ac      = { defs={} expr=v3126[1] }
        vif     = { defs={} expr=v3127[1] }
        vip     = { defs={} expr=v3128[1] }
        id      = { defs={} expr=v3129[1] }
        ?22     = { defs={} expr=v3130[1] }
        ?23     = { defs={} expr=v3131[1] }
        ?24     = { defs={} expr=v3132[1] }
        ?25     = { defs={} expr=v3133[1] }
        ?26     = { defs={} expr=v3134[1] }
        ?27     = { defs={} expr=v3135[1] }
        ?28     = { defs={} expr=v3136[1] }
        ?29     = { defs={} expr=v3137[1] }
        ?30     = { defs={} expr=v3138[1] }
        ?31     = { defs={} expr=v3139[1] }
        ip      = { defs={0x080484b0,0x080484b1,0x080484b3,0x080484b4} expr=0x080484b5[32] }
    memory:
        address = { defs={0x080484b0} expr=(add[32] v3098[32] -4[32]) }
          value = { defs={0x080484b0} expr=v3099[32] }
          flags = { size=4 }
        address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] v3098[32] -4[32]) -4[32]) }
          value = { defs={0x080484b3} expr=v3101[32] }
          flags = { size=4 }
        address = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) }
          value = { defs={0x080484b4} expr=v3100[32] }
          flags = { size=4 }
    ip = defs={0x080484b0,0x080484b1,0x080484b3,0x080484b4} expr=0x080484b5[32]
0x80484b5:push   ebx
    registers:
        ax      = { defs={} expr=v3094[32] }
        cx      = { defs={} expr=v3095[32] }
        dx      = { defs={} expr=v3096[32] }
        bx      = { defs={} expr=v3097[32] }
        sp      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5} expr=(add[32] (add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x080484b0,0x080484b1} expr=(add[32] v3098[32] -4[32]) }
        si      = { defs={} expr=v3100[32] }
        di      = { defs={} expr=v3101[32] }
        es      = { defs={} expr=v3102[16] }
        cs      = { defs={} expr=v3103[16] }
        ss      = { defs={} expr=v3104[16] }
        ds      = { defs={} expr=v3105[16] }
        fs      = { defs={} expr=v3106[16] }
        gs      = { defs={} expr=v3107[16] }
        cf      = { defs={} expr=v3108[1] }
        ?1      = { defs={} expr=v3109[1] }
        pf      = { defs={} expr=v3110[1] }
        ?3      = { defs={} expr=v3111[1] }
        af      = { defs={} expr=v3112[1] }
        ?5      = { defs={} expr=v3113[1] }
        zf      = { defs={} expr=v3114[1] }
        sf      = { defs={} expr=v3115[1] }
        tf      = { defs={} expr=v3116[1] }
        if      = { defs={} expr=v3117[1] }
        df      = { defs={} expr=v3118[1] }
        of      = { defs={} expr=v3119[1] }
        iopl0   = { defs={} expr=v3120[1] }
        iopl1   = { defs={} expr=v3121[1] }
        nt      = { defs={} expr=v3122[1] }
        ?15     = { defs={} expr=v3123[1] }
        rf      = { defs={} expr=v3124[1] }
        vm      = { defs={} expr=v3125[1] }
        ac      = { defs={} expr=v3126[1] }
        vif     = { defs={} expr=v3127[1] }
        vip     = { defs={} expr=v3128[1] }
        id      = { defs={} expr=v3129[1] }
        ?22     = { defs={} expr=v3130[1] }
        ?23     = { defs={} expr=v3131[1] }
        ?24     = { defs={} expr=v3132[1] }
        ?25     = { defs={} expr=v3133[1] }
        ?26     = { defs={} expr=v3134[1] }
        ?27     = { defs={} expr=v3135[1] }
        ?28     = { defs={} expr=v3136[1] }
        ?29     = { defs={} expr=v3137[1] }
        ?30     = { defs={} expr=v3138[1] }
        ?31     = { defs={} expr=v3139[1] }
        ip      = { defs={0x080484b0,0x080484b1,0x080484b3,0x080484b4,0x080484b5} expr=0x080484b6[32] }
    memory:
        address = { defs={0x080484b0} expr=(add[32] v3098[32] -4[32]) }
          value = { defs={0x080484b0} expr=v3099[32] }
          flags = { size=4 }
        address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] v3098[32] -4[32]) -4[32]) }
          value = { defs={0x080484b3} expr=v3101[32] }
          flags = { size=4 }
        address = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) }
          value = { defs={0x080484b4} expr=v3100[32] }
          flags = { size=4 }
        address = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5} expr=(add[32] (add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x080484b5} expr=v3097[32] }
          flags = { size=4 }
    ip = defs={0x080484b0,0x080484b1,0x080484b3,0x080484b4,0x080484b5} expr=0x080484b6[32]
0x80484b6:sub    esp, 0x0c
    registers:
        ax      = { defs={} expr=v3094[32] }
        cx      = { defs={} expr=v3095[32] }
        dx      = { defs={} expr=v3096[32] }
        bx      = { defs={} expr=v3097[32] }
        sp      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) }
        bp      = { defs={0x080484b0,0x080484b1} expr=(add[32] v3098[32] -4[32]) }
        si      = { defs={} expr=v3100[32] }
        di      = { defs={} expr=v3101[32] }
        es      = { defs={} expr=v3102[16] }
        cs      = { defs={} expr=v3103[16] }
        ss      = { defs={} expr=v3104[16] }
        ds      = { defs={} expr=v3105[16] }
        fs      = { defs={} expr=v3106[16] }
        gs      = { defs={} expr=v3107[16] }
        cf      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
        ?1      = { defs={} expr=v3109[1] }
        pf      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))))) }
        ?3      = { defs={} expr=v3111[1] }
        af      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
        ?5      = { defs={} expr=v3113[1] }
        zf      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(zerop[1] (add[32] (add[32] (add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])) }
        sf      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])) }
        tf      = { defs={} expr=v3116[1] }
        if      = { defs={} expr=v3117[1] }
        df      = { defs={} expr=v3118[1] }
        of      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
        iopl0   = { defs={} expr=v3120[1] }
        iopl1   = { defs={} expr=v3121[1] }
        nt      = { defs={} expr=v3122[1] }
        ?15     = { defs={} expr=v3123[1] }
        rf      = { defs={} expr=v3124[1] }
        vm      = { defs={} expr=v3125[1] }
        ac      = { defs={} expr=v3126[1] }
        vif     = { defs={} expr=v3127[1] }
        vip     = { defs={} expr=v3128[1] }
        id      = { defs={} expr=v3129[1] }
        ?22     = { defs={} expr=v3130[1] }
        ?23     = { defs={} expr=v3131[1] }
        ?24     = { defs={} expr=v3132[1] }
        ?25     = { defs={} expr=v3133[1] }
        ?26     = { defs={} expr=v3134[1] }
        ?27     = { defs={} expr=v3135[1] }
        ?28     = { defs={} expr=v3136[1] }
        ?29     = { defs={} expr=v3137[1] }
        ?30     = { defs={} expr=v3138[1] }
        ?31     = { defs={} expr=v3139[1] }
        ip      = { defs={0x080484b0,0x080484b1,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=0x080484b9[32] }
    memory:
        address = { defs={0x080484b0} expr=(add[32] v3098[32] -4[32]) }
          value = { defs={0x080484b0} expr=v3099[32] }
          flags = { size=4 }
        address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] v3098[32] -4[32]) -4[32]) }
          value = { defs={0x080484b3} expr=v3101[32] }
          flags = { size=4 }
        address = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) }
          value = { defs={0x080484b4} expr=v3100[32] }
          flags = { size=4 }
        address = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5} expr=(add[32] (add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x080484b5} expr=v3097[32] }
          flags = { size=4 }
    ip = defs={0x080484b0,0x080484b1,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=0x080484b9[32]
0x80484b9:call   0x080484be<<Insn>>
    registers:
        ax      = { defs={} expr=v3094[32] }
        cx      = { defs={} expr=v3095[32] }
        dx      = { defs={} expr=v3096[32] }
        bx      = { defs={} expr=v3097[32] }
        sp      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]) }
        bp      = { defs={0x080484b0,0x080484b1} expr=(add[32] v3098[32] -4[32]) }
        si      = { defs={} expr=v3100[32] }
        di      = { defs={} expr=v3101[32] }
        es      = { defs={} expr=v3102[16] }
        cs      = { defs={} expr=v3103[16] }
        ss      = { defs={} expr=v3104[16] }
        ds      = { defs={} expr=v3105[16] }
        fs      = { defs={} expr=v3106[16] }
        gs      = { defs={} expr=v3107[16] }
        cf      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
        ?1      = { defs={} expr=v3109[1] }
        pf      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))))) }
        ?3      = { defs={} expr=v3111[1] }
        af      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
        ?5      = { defs={} expr=v3113[1] }
        zf      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(zerop[1] (add[32] (add[32] (add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])) }
        sf      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])) }
        tf      = { defs={} expr=v3116[1] }
        if      = { defs={} expr=v3117[1] }
        df      = { defs={} expr=v3118[1] }
        of      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
        iopl0   = { defs={} expr=v3120[1] }
        iopl1   = { defs={} expr=v3121[1] }
        nt      = { defs={} expr=v3122[1] }
        ?15     = { defs={} expr=v3123[1] }
        rf      = { defs={} expr=v3124[1] }
        vm      = { defs={} expr=v3125[1] }
        ac      = { defs={} expr=v3126[1] }
        vif     = { defs={} expr=v3127[1] }
        vip     = { defs={} expr=v3128[1] }
        id      = { defs={} expr=v3129[1] }
        ?22     = { defs={} expr=v3130[1] }
        ?23     = { defs={} expr=v3131[1] }
        ?24     = { defs={} expr=v3132[1] }
        ?25     = { defs={} expr=v3133[1] }
        ?26     = { defs={} expr=v3134[1] }
        ?27     = { defs={} expr=v3135[1] }
        ?28     = { defs={} expr=v3136[1] }
        ?29     = { defs={} expr=v3137[1] }
        ?30     = { defs={} expr=v3138[1] }
        ?31     = { defs={} expr=v3139[1] }
        ip      = { defs={0x080484b9} expr=0x080484be[32] }
    memory:
        address = { defs={0x080484b0} expr=(add[32] v3098[32] -4[32]) }
          value = { defs={0x080484b0} expr=v3099[32] }
          flags = { size=4 }
        address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] v3098[32] -4[32]) -4[32]) }
          value = { defs={0x080484b3} expr=v3101[32] }
          flags = { size=4 }
        address = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) }
          value = { defs={0x080484b4} expr=v3100[32] }
          flags = { size=4 }
        address = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5} expr=(add[32] (add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x080484b5} expr=v3097[32] }
          flags = { size=4 }
        address = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v3098[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]) }
          value = { defs={0x080484b0,0x080484b1,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9} expr=0x080484be[32] }
          flags = { size=4 }
    ip = defs={0x080484b9} expr=0x080484be[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484be:pop    ebx
    registers:
        ax      = { defs={} expr=v3188[32] }
        cx      = { defs={} expr=v3189[32] }
        dx      = { defs={} expr=v3190[32] }
        bx      = { defs={0x080484be} expr=v3234[32] }
        sp      = { defs={0x080484be} expr=(add[32] v3192[32] 4[32]) }
        bp      = { defs={} expr=v3193[32] }
        si      = { defs={} expr=v3194[32] }
        di      = { defs={} expr=v3195[32] }
        es      = { defs={} expr=v3196[16] }
        cs      = { defs={} expr=v3197[16] }
        ss      = { defs={} expr=v3198[16] }
        ds      = { defs={} expr=v3199[16] }
        fs      = { defs={} expr=v3200[16] }
        gs      = { defs={} expr=v3201[16] }
        cf      = { defs={} expr=v3202[1] }
        ?1      = { defs={} expr=v3203[1] }
        pf      = { defs={} expr=v3204[1] }
        ?3      = { defs={} expr=v3205[1] }
        af      = { defs={} expr=v3206[1] }
        ?5      = { defs={} expr=v3207[1] }
        zf      = { defs={} expr=v3208[1] }
        sf      = { defs={} expr=v3209[1] }
        tf      = { defs={} expr=v3210[1] }
        if      = { defs={} expr=v3211[1] }
        df      = { defs={} expr=v3212[1] }
        of      = { defs={} expr=v3213[1] }
        iopl0   = { defs={} expr=v3214[1] }
        iopl1   = { defs={} expr=v3215[1] }
        nt      = { defs={} expr=v3216[1] }
        ?15     = { defs={} expr=v3217[1] }
        rf      = { defs={} expr=v3218[1] }
        vm      = { defs={} expr=v3219[1] }
        ac      = { defs={} expr=v3220[1] }
        vif     = { defs={} expr=v3221[1] }
        vip     = { defs={} expr=v3222[1] }
        id      = { defs={} expr=v3223[1] }
        ?22     = { defs={} expr=v3224[1] }
        ?23     = { defs={} expr=v3225[1] }
        ?24     = { defs={} expr=v3226[1] }
        ?25     = { defs={} expr=v3227[1] }
        ?26     = { defs={} expr=v3228[1] }
        ?27     = { defs={} expr=v3229[1] }
        ?28     = { defs={} expr=v3230[1] }
        ?29     = { defs={} expr=v3231[1] }
        ?30     = { defs={} expr=v3232[1] }
        ?31     = { defs={} expr=v3233[1] }
        ip      = { defs={0x080484be} expr=0x080484bf[32] }
    memory:
        address = { defs={} expr=v3192[32] }
          value = { defs={} expr=v3234[32] }
          flags = { size=4; read-only }
    ip = defs={0x080484be} expr=0x080484bf[32]
0x80484bf:add    ebx, 0x0000120a
    registers:
        ax      = { defs={} expr=v3188[32] }
        cx      = { defs={} expr=v3189[32] }
        dx      = { defs={} expr=v3190[32] }
        bx      = { defs={0x080484be,0x080484bf} expr=(add[32] v3234[32] 4618[32]) }
        sp      = { defs={0x080484be} expr=(add[32] v3192[32] 4[32]) }
        bp      = { defs={} expr=v3193[32] }
        si      = { defs={} expr=v3194[32] }
        di      = { defs={} expr=v3195[32] }
        es      = { defs={} expr=v3196[16] }
        cs      = { defs={} expr=v3197[16] }
        ss      = { defs={} expr=v3198[16] }
        ds      = { defs={} expr=v3199[16] }
        fs      = { defs={} expr=v3200[16] }
        gs      = { defs={} expr=v3201[16] }
        cf      = { defs={0x080484be,0x080484bf} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3234[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v3234[32]) 4618[33]))))) }
        ?1      = { defs={} expr=v3203[1] }
        pf      = { defs={0x080484be,0x080484bf} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v3234[32] 4618[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v3234[32] 4618[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v3234[32] 4618[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v3234[32] 4618[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v3234[32] 4618[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v3234[32] 4618[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v3234[32] 4618[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v3234[32] 4618[32]))))))) }
        ?3      = { defs={} expr=v3205[1] }
        af      = { defs={0x080484be,0x080484bf} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3234[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v3234[32]) 4618[33]))))) }
        ?5      = { defs={} expr=v3207[1] }
        zf      = { defs={0x080484be,0x080484bf} expr=(zerop[1] (add[32] v3234[32] 4618[32])) }
        sf      = { defs={0x080484be,0x080484bf} expr=(extract[1] 31[32] 32[32] (add[32] v3234[32] 4618[32])) }
        tf      = { defs={} expr=v3210[1] }
        if      = { defs={} expr=v3211[1] }
        df      = { defs={} expr=v3212[1] }
        of      = { defs={0x080484be,0x080484bf} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3234[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v3234[32]) 4618[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3234[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v3234[32]) 4618[33])))))) }
        iopl0   = { defs={} expr=v3214[1] }
        iopl1   = { defs={} expr=v3215[1] }
        nt      = { defs={} expr=v3216[1] }
        ?15     = { defs={} expr=v3217[1] }
        rf      = { defs={} expr=v3218[1] }
        vm      = { defs={} expr=v3219[1] }
        ac      = { defs={} expr=v3220[1] }
        vif     = { defs={} expr=v3221[1] }
        vip     = { defs={} expr=v3222[1] }
        id      = { defs={} expr=v3223[1] }
        ?22     = { defs={} expr=v3224[1] }
        ?23     = { defs={} expr=v3225[1] }
        ?24     = { defs={} expr=v3226[1] }
        ?25     = { defs={} expr=v3227[1] }
        ?26     = { defs={} expr=v3228[1] }
        ?27     = { defs={} expr=v3229[1] }
        ?28     = { defs={} expr=v3230[1] }
        ?29     = { defs={} expr=v3231[1] }
        ?30     = { defs={} expr=v3232[1] }
        ?31     = { defs={} expr=v3233[1] }
        ip      = { defs={0x080484be,0x080484bf} expr=0x080484c5[32] }
    memory:
        address = { defs={} expr=v3192[32] }
          value = { defs={} expr=v3234[32] }
          flags = { size=4; read-only }
    ip = defs={0x080484be,0x080484bf} expr=0x080484c5[32]
0x80484c5:call   0x080482c8<_init>
    registers:
        ax      = { defs={} expr=v3188[32] }
        cx      = { defs={} expr=v3189[32] }
        dx      = { defs={} expr=v3190[32] }
        bx      = { defs={0x080484be,0x080484bf} expr=(add[32] v3234[32] 4618[32]) }
        sp      = { defs={0x080484be,0x080484c5} expr=(add[32] (add[32] v3192[32] 4[32]) -4[32]) }
        bp      = { defs={} expr=v3193[32] }
        si      = { defs={} expr=v3194[32] }
        di      = { defs={} expr=v3195[32] }
        es      = { defs={} expr=v3196[16] }
        cs      = { defs={} expr=v3197[16] }
        ss      = { defs={} expr=v3198[16] }
        ds      = { defs={} expr=v3199[16] }
        fs      = { defs={} expr=v3200[16] }
        gs      = { defs={} expr=v3201[16] }
        cf      = { defs={0x080484be,0x080484bf} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3234[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v3234[32]) 4618[33]))))) }
        ?1      = { defs={} expr=v3203[1] }
        pf      = { defs={0x080484be,0x080484bf} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v3234[32] 4618[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v3234[32] 4618[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v3234[32] 4618[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v3234[32] 4618[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v3234[32] 4618[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v3234[32] 4618[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v3234[32] 4618[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v3234[32] 4618[32]))))))) }
        ?3      = { defs={} expr=v3205[1] }
        af      = { defs={0x080484be,0x080484bf} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3234[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v3234[32]) 4618[33]))))) }
        ?5      = { defs={} expr=v3207[1] }
        zf      = { defs={0x080484be,0x080484bf} expr=(zerop[1] (add[32] v3234[32] 4618[32])) }
        sf      = { defs={0x080484be,0x080484bf} expr=(extract[1] 31[32] 32[32] (add[32] v3234[32] 4618[32])) }
        tf      = { defs={} expr=v3210[1] }
        if      = { defs={} expr=v3211[1] }
        df      = { defs={} expr=v3212[1] }
        of      = { defs={0x080484be,0x080484bf} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3234[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v3234[32]) 4618[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3234[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v3234[32]) 4618[33])))))) }
        iopl0   = { defs={} expr=v3214[1] }
        iopl1   = { defs={} expr=v3215[1] }
        nt      = { defs={} expr=v3216[1] }
        ?15     = { defs={} expr=v3217[1] }
        rf      = { defs={} expr=v3218[1] }
        vm      = { defs={} expr=v3219[1] }
        ac      = { defs={} expr=v3220[1] }
        vif     = { defs={} expr=v3221[1] }
        vip     = { defs={} expr=v3222[1] }
        id      = { defs={} expr=v3223[1] }
        ?22     = { defs={} expr=v3224[1] }
        ?23     = { defs={} expr=v3225[1] }
        ?24     = { defs={} expr=v3226[1] }
        ?25     = { defs={} expr=v3227[1] }
        ?26     = { defs={} expr=v3228[1] }
        ?27     = { defs={} expr=v3229[1] }
        ?28     = { defs={} expr=v3230[1] }
        ?29     = { defs={} expr=v3231[1] }
        ?30     = { defs={} expr=v3232[1] }
        ?31     = { defs={} expr=v3233[1] }
        ip      = { defs={0x080484c5} expr=0x080482c8[32] }
    memory:
        address = { defs={} expr=v3192[32] }
          value = { defs={} expr=v3234[32] }
          flags = { size=4; read-only }
        address = { defs={0x080484be,0x080484c5} expr=(add[32] (add[32] v3192[32] 4[32]) -4[32]) }
          value = { defs={0x080484be,0x080484bf,0x080484c5} expr=0x080484ca[32] }
          flags = { size=4 }
    ip = defs={0x080484c5} expr=0x080482c8[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
    registers:
        ax      = { defs={0x080484ca} expr=(add[32] v3286[32] -224[32]) }
        cx      = { defs={} expr=v3284[32] }
        dx      = { defs={} expr=v3285[32] }
        bx      = { defs={} expr=v3286[32] }
        sp      = { defs={} expr=v3287[32] }
        bp      = { defs={} expr=v3288[32] }
        si      = { defs={} expr=v3289[32] }
        di      = { defs={} expr=v3290[32] }
        es      = { defs={} expr=v3291[16] }
        cs      = { defs={} expr=v3292[16] }
        ss      = { defs={} expr=v3293[16] }
        ds      = { defs={} expr=v3294[16] }
        fs      = { defs={} expr=v3295[16] }
        gs      = { defs={} expr=v3296[16] }
        cf      = { defs={} expr=v3297[1] }
        ?1      = { defs={} expr=v3298[1] }
        pf      = { defs={} expr=v3299[1] }
        ?3      = { defs={} expr=v3300[1] }
        af      = { defs={} expr=v3301[1] }
        ?5      = { defs={} expr=v3302[1] }
        zf      = { defs={} expr=v3303[1] }
        sf      = { defs={} expr=v3304[1] }
        tf      = { defs={} expr=v3305[1] }
        if      = { defs={} expr=v3306[1] }
        df      = { defs={} expr=v3307[1] }
        of      = { defs={} expr=v3308[1] }
        iopl0   = { defs={} expr=v3309[1] }
        iopl1   = { defs={} expr=v3310[1] }
        nt      = { defs={} expr=v3311[1] }
        ?15     = { defs={} expr=v3312[1] }
        rf      = { defs={} expr=v3313[1] }
        vm      = { defs={} expr=v3314[1] }
        ac      = { defs={} expr=v3315[1] }
        vif     = { defs={} expr=v3316[1] }
        vip     = { defs={} expr=v3317[1] }
        id      = { defs={} expr=v3318[1] }
        ?22     = { defs={} expr=v3319[1] }
        ?23     = { defs={} expr=v3320[1] }
        ?24     = { defs={} expr=v3321[1] }
        ?25     = { defs={} expr=v3322[1] }
        ?26     = { defs={} expr=v3323[1] }
        ?27     = { defs={} expr=v3324[1] }
        ?28     = { defs={} expr=v3325[1] }
        ?29     = { defs={} expr=v3326[1] }
        ?30     = { defs={} expr=v3327[1] }
        ?31     = { defs={} expr=v3328[1] }
        ip      = { defs={0x080484ca} expr=0x080484d0[32] }
    memory:
        (empty)
    ip = defs={0x080484ca} expr=0x080484d0[32]
0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
    registers:
        ax      = { defs={0x080484ca} expr=(add[32] v3286[32] -224[32]) }
        cx      = { defs={} expr=v3284[32] }
        dx      = { defs={0x080484d0} expr=(add[32] v3286[32] -224[32]) }
        bx      = { defs={} expr=v3286[32] }
        sp      = { defs={} expr=v3287[32] }
        bp      = { defs={} expr=v3288[32] }
        si      = { defs={} expr=v3289[32] }
        di      = { defs={} expr=v3290[32] }
        es      = { defs={} expr=v3291[16] }
        cs      = { defs={} expr=v3292[16] }
        ss      = { defs={} expr=v3293[16] }
        ds      = { defs={} expr=v3294[16] }
        fs      = { defs={} expr=v3295[16] }
        gs      = { defs={} expr=v3296[16] }
        cf      = { defs={} expr=v3297[1] }
        ?1      = { defs={} expr=v3298[1] }
        pf      = { defs={} expr=v3299[1] }
        ?3      = { defs={} expr=v3300[1] }
        af      = { defs={} expr=v3301[1] }
        ?5      = { defs={} expr=v3302[1] }
        zf      = { defs={} expr=v3303[1] }
        sf      = { defs={} expr=v3304[1] }
        tf      = { defs={} expr=v3305[1] }
        if      = { defs={} expr=v3306[1] }
        df      = { defs={} expr=v3307[1] }
        of      = { defs={} expr=v3308[1] }
        iopl0   = { defs={} expr=v3309[1] }
        iopl1   = { defs={} expr=v3310[1] }
        nt      = { defs={} expr=v3311[1] }
        ?15     = { defs={} expr=v3312[1] }
        rf      = { defs={} expr=v3313[1] }
        vm      = { defs={} expr=v3314[1] }
        ac      = { defs={} expr=v3315[1] }
        vif     = { defs={} expr=v3316[1] }
        vip     = { defs={} expr=v3317[1] }
        id      = { defs={} expr=v3318[1] }
        ?22     = { defs={} expr=v3319[1] }
        ?23     = { defs={} expr=v3320[1] }
        ?24     = { defs={} expr=v3321[1] }
        ?25     = { defs={} expr=v3322[1] }
        ?26     = { defs={} expr=v3323[1] }
        ?27     = { defs={} expr=v3324[1] }
        ?28     = { defs={} expr=v3325[1] }
        ?29     = { defs={} expr=v3326[1] }
        ?30     = { defs={} expr=v3327[1] }
        ?31     = { defs={} expr=v3328[1] }
        ip      = { defs={0x080484ca,0x080484d0} expr=0x080484d6[32] }
    memory:
        (empty)
    ip = defs={0x080484ca,0x080484d0} expr=0x080484d6[32]
0x80484d6:sub    eax, edx
    registers:
        ax      = { defs={0x080484ca,0x080484d0,0x080484d6} expr=(add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32])) }
        cx      = { defs={} expr=v3284[32] }
        dx      = { defs={0x080484d0} expr=(add[32] v3286[32] -224[32]) }
        bx      = { defs={} expr=v3286[32] }
        sp      = { defs={} expr=v3287[32] }
        bp      = { defs={} expr=v3288[32] }
        si      = { defs={} expr=v3289[32] }
        di      = { defs={} expr=v3290[32] }
        es      = { defs={} expr=v3291[16] }
        cs      = { defs={} expr=v3292[16] }
        ss      = { defs={} expr=v3293[16] }
        ds      = { defs={} expr=v3294[16] }
        fs      = { defs={} expr=v3295[16] }
        gs      = { defs={} expr=v3296[16] }
        cf      = { defs={0x080484ca,0x080484d0,0x080484d6} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v3286[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v3286[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] v3286[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v3286[32] -224[32]))) 1[33]))))))) }
        ?1      = { defs={} expr=v3298[1] }
        pf      = { defs={0x080484ca,0x080484d0,0x080484d6} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32])))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32]))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32])))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32])))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32])))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32]))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32])))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32])))))))) }
        ?3      = { defs={} expr=v3300[1] }
        af      = { defs={0x080484ca,0x080484d0,0x080484d6} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v3286[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v3286[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] v3286[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v3286[32] -224[32]))) 1[33]))))))) }
        ?5      = { defs={} expr=v3302[1] }
        zf      = { defs={0x080484ca,0x080484d0,0x080484d6} expr=(zerop[1] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32]))) }
        sf      = { defs={0x080484ca,0x080484d0,0x080484d6} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32]))) }
        tf      = { defs={} expr=v3305[1] }
        if      = { defs={} expr=v3306[1] }
        df      = { defs={} expr=v3307[1] }
        of      = { defs={0x080484ca,0x080484d0,0x080484d6} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v3286[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v3286[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] v3286[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v3286[32] -224[32]))) 1[33])))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v3286[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v3286[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] v3286[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v3286[32] -224[32]))) 1[33]))))))) }
        iopl0   = { defs={} expr=v3309[1] }
        iopl1   = { defs={} expr=v3310[1] }
        nt      = { defs={} expr=v3311[1] }
        ?15     = { defs={} expr=v3312[1] }
        rf      = { defs={} expr=v3313[1] }
        vm      = { defs={} expr=v3314[1] }
        ac      = { defs={} expr=v3315[1] }
        vif     = { defs={} expr=v3316[1] }
        vip     = { defs={} expr=v3317[1] }
        id      = { defs={} expr=v3318[1] }
        ?22     = { defs={} expr=v3319[1] }
        ?23     = { defs={} expr=v3320[1] }
        ?24     = { defs={} expr=v3321[1] }
        ?25     = { defs={} expr=v3322[1] }
        ?26     = { defs={} expr=v3323[1] }
        ?27     = { defs={} expr=v3324[1] }
        ?28     = { defs={} expr=v3325[1] }
        ?29     = { defs={} expr=v3326[1] }
        ?30     = { defs={} expr=v3327[1] }
        ?31     = { defs={} expr=v3328[1] }
        ip      = { defs={0x080484ca,0x080484d0,0x080484d6} expr=0x080484d8[32] }
    memory:
        (empty)
    ip = defs={0x080484ca,0x080484d0,0x080484d6} expr=0x080484d8[32]
0x80484d8:sar    eax, 0x02
    registers:
        ax      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(asr[32] 2[5] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32]))) }
        cx      = { defs={} expr=v3284[32] }
        dx      = { defs={0x080484d0} expr=(add[32] v3286[32] -224[32]) }
        bx      = { defs={} expr=v3286[32] }
        sp      = { defs={} expr=v3287[32] }
        bp      = { defs={} expr=v3288[32] }
        si      = { defs={} expr=v3289[32] }
        di      = { defs={} expr=v3290[32] }
        es      = { defs={} expr=v3291[16] }
        cs      = { defs={} expr=v3292[16] }
        ss      = { defs={} expr=v3293[16] }
        ds      = { defs={} expr=v3294[16] }
        fs      = { defs={} expr=v3295[16] }
        gs      = { defs={} expr=v3296[16] }
        cf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32])))) }
        ?1      = { defs={} expr=v3298[1] }
        pf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32]))))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32]))))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32]))))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32]))))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32]))))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32]))))))))) }
        ?3      = { defs={} expr=v3300[1] }
        af      = { defs={0x080484d8} expr=v3330[1] }
        ?5      = { defs={} expr=v3302[1] }
        zf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(zerop[1] (asr[32] 2[5] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32])))) }
        sf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32])))) }
        tf      = { defs={} expr=v3305[1] }
        if      = { defs={} expr=v3306[1] }
        df      = { defs={} expr=v3307[1] }
        of      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v3286[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v3286[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] v3286[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v3286[32] -224[32]))) 1[33])))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v3286[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v3286[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] v3286[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v3286[32] -224[32]))) 1[33]))))))) }
        iopl0   = { defs={} expr=v3309[1] }
        iopl1   = { defs={} expr=v3310[1] }
        nt      = { defs={} expr=v3311[1] }
        ?15     = { defs={} expr=v3312[1] }
        rf      = { defs={} expr=v3313[1] }
        vm      = { defs={} expr=v3314[1] }
        ac      = { defs={} expr=v3315[1] }
        vif     = { defs={} expr=v3316[1] }
        vip     = { defs={} expr=v3317[1] }
        id      = { defs={} expr=v3318[1] }
        ?22     = { defs={} expr=v3319[1] }
        ?23     = { defs={} expr=v3320[1] }
        ?24     = { defs={} expr=v3321[1] }
        ?25     = { defs={} expr=v3322[1] }
        ?26     = { defs={} expr=v3323[1] }
        ?27     = { defs={} expr=v3324[1] }
        ?28     = { defs={} expr=v3325[1] }
        ?29     = { defs={} expr=v3326[1] }
        ?30     = { defs={} expr=v3327[1] }
        ?31     = { defs={} expr=v3328[1] }
        ip      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=0x080484db[32] }
    memory:
        (empty)
    ip = defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=0x080484db[32]
0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
    registers:
        ax      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(asr[32] 2[5] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32]))) }
        cx      = { defs={} expr=v3284[32] }
        dx      = { defs={0x080484d0} expr=(add[32] v3286[32] -224[32]) }
        bx      = { defs={} expr=v3286[32] }
        sp      = { defs={} expr=v3287[32] }
        bp      = { defs={} expr=v3288[32] }
        si      = { defs={} expr=v3289[32] }
        di      = { defs={} expr=v3290[32] }
        es      = { defs={} expr=v3291[16] }
        cs      = { defs={} expr=v3292[16] }
        ss      = { defs={} expr=v3293[16] }
        ds      = { defs={} expr=v3294[16] }
        fs      = { defs={} expr=v3295[16] }
        gs      = { defs={} expr=v3296[16] }
        cf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32])))) }
        ?1      = { defs={} expr=v3298[1] }
        pf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32]))))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32]))))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32]))))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32]))))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32]))))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32]))))))))) }
        ?3      = { defs={} expr=v3300[1] }
        af      = { defs={0x080484d8} expr=v3330[1] }
        ?5      = { defs={} expr=v3302[1] }
        zf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(zerop[1] (asr[32] 2[5] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32])))) }
        sf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32])))) }
        tf      = { defs={} expr=v3305[1] }
        if      = { defs={} expr=v3306[1] }
        df      = { defs={} expr=v3307[1] }
        of      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v3286[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v3286[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] v3286[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v3286[32] -224[32]))) 1[33])))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v3286[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v3286[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] v3286[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v3286[32] -224[32]))) 1[33]))))))) }
        iopl0   = { defs={} expr=v3309[1] }
        iopl1   = { defs={} expr=v3310[1] }
        nt      = { defs={} expr=v3311[1] }
        ?15     = { defs={} expr=v3312[1] }
        rf      = { defs={} expr=v3313[1] }
        vm      = { defs={} expr=v3314[1] }
        ac      = { defs={} expr=v3315[1] }
        vif     = { defs={} expr=v3316[1] }
        vip     = { defs={} expr=v3317[1] }
        id      = { defs={} expr=v3318[1] }
        ?22     = { defs={} expr=v3319[1] }
        ?23     = { defs={} expr=v3320[1] }
        ?24     = { defs={} expr=v3321[1] }
        ?25     = { defs={} expr=v3322[1] }
        ?26     = { defs={} expr=v3323[1] }
        ?27     = { defs={} expr=v3324[1] }
        ?28     = { defs={} expr=v3325[1] }
        ?29     = { defs={} expr=v3326[1] }
        ?30     = { defs={} expr=v3327[1] }
        ?31     = { defs={} expr=v3328[1] }
        ip      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=0x080484de[32] }
    memory:
        address = { defs={0x080484db} expr=(add[32] v3288[32] -16[32]) }
          value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(asr[32] 2[5] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32]))) }
          flags = { size=4 }
    ip = defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=0x080484de[32]
0x80484de:jne    0x080484f0<<StaticData@0x080484e8>+8>
    registers:
        ax      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(asr[32] 2[5] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32]))) }
        cx      = { defs={} expr=v3284[32] }
        dx      = { defs={0x080484d0} expr=(add[32] v3286[32] -224[32]) }
        bx      = { defs={} expr=v3286[32] }
        sp      = { defs={} expr=v3287[32] }
        bp      = { defs={} expr=v3288[32] }
        si      = { defs={} expr=v3289[32] }
        di      = { defs={} expr=v3290[32] }
        es      = { defs={} expr=v3291[16] }
        cs      = { defs={} expr=v3292[16] }
        ss      = { defs={} expr=v3293[16] }
        ds      = { defs={} expr=v3294[16] }
        fs      = { defs={} expr=v3295[16] }
        gs      = { defs={} expr=v3296[16] }
        cf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32])))) }
        ?1      = { defs={} expr=v3298[1] }
        pf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32]))))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32]))))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32]))))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32]))))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32]))))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32]))))))))) }
        ?3      = { defs={} expr=v3300[1] }
        af      = { defs={0x080484d8} expr=v3330[1] }
        ?5      = { defs={} expr=v3302[1] }
        zf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(zerop[1] (asr[32] 2[5] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32])))) }
        sf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32])))) }
        tf      = { defs={} expr=v3305[1] }
        if      = { defs={} expr=v3306[1] }
        df      = { defs={} expr=v3307[1] }
        of      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v3286[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v3286[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] v3286[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v3286[32] -224[32]))) 1[33])))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v3286[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v3286[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] v3286[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v3286[32] -224[32]))) 1[33]))))))) }
        iopl0   = { defs={} expr=v3309[1] }
        iopl1   = { defs={} expr=v3310[1] }
        nt      = { defs={} expr=v3311[1] }
        ?15     = { defs={} expr=v3312[1] }
        rf      = { defs={} expr=v3313[1] }
        vm      = { defs={} expr=v3314[1] }
        ac      = { defs={} expr=v3315[1] }
        vif     = { defs={} expr=v3316[1] }
        vip     = { defs={} expr=v3317[1] }
        id      = { defs={} expr=v3318[1] }
        ?22     = { defs={} expr=v3319[1] }
        ?23     = { defs={} expr=v3320[1] }
        ?24     = { defs={} expr=v3321[1] }
        ?25     = { defs={} expr=v3322[1] }
        ?26     = { defs={} expr=v3323[1] }
        ?27     = { defs={} expr=v3324[1] }
        ?28     = { defs={} expr=v3325[1] }
        ?29     = { defs={} expr=v3326[1] }
        ?30     = { defs={} expr=v3327[1] }
        ?31     = { defs={} expr=v3328[1] }
        ip      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db,0x080484de} expr=(ite[32] (invert[1] (zerop[1] (asr[32] 2[5] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32]))))) 0x080484f0[32] 0x080484e0[32]) }
    memory:
        address = { defs={0x080484db} expr=(add[32] v3288[32] -16[32]) }
          value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(asr[32] 2[5] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32]))) }
          flags = { size=4 }
    ip = defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db,0x080484de} expr=(ite[32] (invert[1] (zerop[1] (asr[32] 2[5] (add[32] (add[32] v3286[32] -224[32]) (add[32] (invert[32] (add[32] v3286[32] -224[32])) 1[32]))))) 0x080484f0[32] 0x080484e0[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484e0:add    esp, 0x0c
    registers:
        ax      = { defs={} expr=v3381[32] }
        cx      = { defs={} expr=v3382[32] }
        dx      = { defs={} expr=v3383[32] }
        bx      = { defs={} expr=v3384[32] }
        sp      = { defs={0x080484e0} expr=(add[32] v3385[32] 12[32]) }
        bp      = { defs={} expr=v3386[32] }
        si      = { defs={} expr=v3387[32] }
        di      = { defs={} expr=v3388[32] }
        es      = { defs={} expr=v3389[16] }
        cs      = { defs={} expr=v3390[16] }
        ss      = { defs={} expr=v3391[16] }
        ds      = { defs={} expr=v3392[16] }
        fs      = { defs={} expr=v3393[16] }
        gs      = { defs={} expr=v3394[16] }
        cf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3385[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3385[32]) 12[33]))))) }
        ?1      = { defs={} expr=v3396[1] }
        pf      = { defs={0x080484e0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32]))))))) }
        ?3      = { defs={} expr=v3398[1] }
        af      = { defs={0x080484e0} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3385[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3385[32]) 12[33]))))) }
        ?5      = { defs={} expr=v3400[1] }
        zf      = { defs={0x080484e0} expr=(zerop[1] (add[32] v3385[32] 12[32])) }
        sf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (add[32] v3385[32] 12[32])) }
        tf      = { defs={} expr=v3403[1] }
        if      = { defs={} expr=v3404[1] }
        df      = { defs={} expr=v3405[1] }
        of      = { defs={0x080484e0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3385[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3385[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3385[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3385[32]) 12[33])))))) }
        iopl0   = { defs={} expr=v3407[1] }
        iopl1   = { defs={} expr=v3408[1] }
        nt      = { defs={} expr=v3409[1] }
        ?15     = { defs={} expr=v3410[1] }
        rf      = { defs={} expr=v3411[1] }
        vm      = { defs={} expr=v3412[1] }
        ac      = { defs={} expr=v3413[1] }
        vif     = { defs={} expr=v3414[1] }
        vip     = { defs={} expr=v3415[1] }
        id      = { defs={} expr=v3416[1] }
        ?22     = { defs={} expr=v3417[1] }
        ?23     = { defs={} expr=v3418[1] }
        ?24     = { defs={} expr=v3419[1] }
        ?25     = { defs={} expr=v3420[1] }
        ?26     = { defs={} expr=v3421[1] }
        ?27     = { defs={} expr=v3422[1] }
        ?28     = { defs={} expr=v3423[1] }
        ?29     = { defs={} expr=v3424[1] }
        ?30     = { defs={} expr=v3425[1] }
        ?31     = { defs={} expr=v3426[1] }
        ip      = { defs={0x080484e0} expr=0x080484e3[32] }
    memory:
        (empty)
    ip = defs={0x080484e0} expr=0x080484e3[32]
0x80484e3:pop    ebx
    registers:
        ax      = { defs={} expr=v3381[32] }
        cx      = { defs={} expr=v3382[32] }
        dx      = { defs={} expr=v3383[32] }
        bx      = { defs={0x080484e3} expr=v3427[32] }
        sp      = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] v3385[32] 12[32]) 4[32]) }
        bp      = { defs={} expr=v3386[32] }
        si      = { defs={} expr=v3387[32] }
        di      = { defs={} expr=v3388[32] }
        es      = { defs={} expr=v3389[16] }
        cs      = { defs={} expr=v3390[16] }
        ss      = { defs={} expr=v3391[16] }
        ds      = { defs={} expr=v3392[16] }
        fs      = { defs={} expr=v3393[16] }
        gs      = { defs={} expr=v3394[16] }
        cf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3385[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3385[32]) 12[33]))))) }
        ?1      = { defs={} expr=v3396[1] }
        pf      = { defs={0x080484e0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32]))))))) }
        ?3      = { defs={} expr=v3398[1] }
        af      = { defs={0x080484e0} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3385[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3385[32]) 12[33]))))) }
        ?5      = { defs={} expr=v3400[1] }
        zf      = { defs={0x080484e0} expr=(zerop[1] (add[32] v3385[32] 12[32])) }
        sf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (add[32] v3385[32] 12[32])) }
        tf      = { defs={} expr=v3403[1] }
        if      = { defs={} expr=v3404[1] }
        df      = { defs={} expr=v3405[1] }
        of      = { defs={0x080484e0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3385[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3385[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3385[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3385[32]) 12[33])))))) }
        iopl0   = { defs={} expr=v3407[1] }
        iopl1   = { defs={} expr=v3408[1] }
        nt      = { defs={} expr=v3409[1] }
        ?15     = { defs={} expr=v3410[1] }
        rf      = { defs={} expr=v3411[1] }
        vm      = { defs={} expr=v3412[1] }
        ac      = { defs={} expr=v3413[1] }
        vif     = { defs={} expr=v3414[1] }
        vip     = { defs={} expr=v3415[1] }
        id      = { defs={} expr=v3416[1] }
        ?22     = { defs={} expr=v3417[1] }
        ?23     = { defs={} expr=v3418[1] }
        ?24     = { defs={} expr=v3419[1] }
        ?25     = { defs={} expr=v3420[1] }
        ?26     = { defs={} expr=v3421[1] }
        ?27     = { defs={} expr=v3422[1] }
        ?28     = { defs={} expr=v3423[1] }
        ?29     = { defs={} expr=v3424[1] }
        ?30     = { defs={} expr=v3425[1] }
        ?31     = { defs={} expr=v3426[1] }
        ip      = { defs={0x080484e0,0x080484e3} expr=0x080484e4[32] }
    memory:
        address = { defs={0x080484e0} expr=(add[32] v3385[32] 12[32]) }
          value = { defs={} expr=v3427[32] }
          flags = { size=4; read-only }
    ip = defs={0x080484e0,0x080484e3} expr=0x080484e4[32]
0x80484e4:pop    esi
    registers:
        ax      = { defs={} expr=v3381[32] }
        cx      = { defs={} expr=v3382[32] }
        dx      = { defs={} expr=v3383[32] }
        bx      = { defs={0x080484e3} expr=v3427[32] }
        sp      = { defs={0x080484e0,0x080484e3,0x080484e4} expr=(add[32] (add[32] (add[32] v3385[32] 12[32]) 4[32]) 4[32]) }
        bp      = { defs={} expr=v3386[32] }
        si      = { defs={0x080484e4} expr=v3428[32] }
        di      = { defs={} expr=v3388[32] }
        es      = { defs={} expr=v3389[16] }
        cs      = { defs={} expr=v3390[16] }
        ss      = { defs={} expr=v3391[16] }
        ds      = { defs={} expr=v3392[16] }
        fs      = { defs={} expr=v3393[16] }
        gs      = { defs={} expr=v3394[16] }
        cf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3385[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3385[32]) 12[33]))))) }
        ?1      = { defs={} expr=v3396[1] }
        pf      = { defs={0x080484e0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32]))))))) }
        ?3      = { defs={} expr=v3398[1] }
        af      = { defs={0x080484e0} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3385[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3385[32]) 12[33]))))) }
        ?5      = { defs={} expr=v3400[1] }
        zf      = { defs={0x080484e0} expr=(zerop[1] (add[32] v3385[32] 12[32])) }
        sf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (add[32] v3385[32] 12[32])) }
        tf      = { defs={} expr=v3403[1] }
        if      = { defs={} expr=v3404[1] }
        df      = { defs={} expr=v3405[1] }
        of      = { defs={0x080484e0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3385[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3385[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3385[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3385[32]) 12[33])))))) }
        iopl0   = { defs={} expr=v3407[1] }
        iopl1   = { defs={} expr=v3408[1] }
        nt      = { defs={} expr=v3409[1] }
        ?15     = { defs={} expr=v3410[1] }
        rf      = { defs={} expr=v3411[1] }
        vm      = { defs={} expr=v3412[1] }
        ac      = { defs={} expr=v3413[1] }
        vif     = { defs={} expr=v3414[1] }
        vip     = { defs={} expr=v3415[1] }
        id      = { defs={} expr=v3416[1] }
        ?22     = { defs={} expr=v3417[1] }
        ?23     = { defs={} expr=v3418[1] }
        ?24     = { defs={} expr=v3419[1] }
        ?25     = { defs={} expr=v3420[1] }
        ?26     = { defs={} expr=v3421[1] }
        ?27     = { defs={} expr=v3422[1] }
        ?28     = { defs={} expr=v3423[1] }
        ?29     = { defs={} expr=v3424[1] }
        ?30     = { defs={} expr=v3425[1] }
        ?31     = { defs={} expr=v3426[1] }
        ip      = { defs={0x080484e0,0x080484e3,0x080484e4} expr=0x080484e5[32] }
    memory:
        address = { defs={0x080484e0} expr=(add[32] v3385[32] 12[32]) }
          value = { defs={} expr=v3427[32] }
          flags = { size=4; read-only }
        address = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] v3385[32] 12[32]) 4[32]) }
          value = { defs={} expr=v3428[32] }
          flags = { size=4; read-only }
    ip = defs={0x080484e0,0x080484e3,0x080484e4} expr=0x080484e5[32]
0x80484e5:pop    edi
    registers:
        ax      = { defs={} expr=v3381[32] }
        cx      = { defs={} expr=v3382[32] }
        dx      = { defs={} expr=v3383[32] }
        bx      = { defs={0x080484e3} expr=v3427[32] }
        sp      = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5} expr=(add[32] (add[32] (add[32] (add[32] v3385[32] 12[32]) 4[32]) 4[32]) 4[32]) }
        bp      = { defs={} expr=v3386[32] }
        si      = { defs={0x080484e4} expr=v3428[32] }
        di      = { defs={0x080484e5} expr=v3429[32] }
        es      = { defs={} expr=v3389[16] }
        cs      = { defs={} expr=v3390[16] }
        ss      = { defs={} expr=v3391[16] }
        ds      = { defs={} expr=v3392[16] }
        fs      = { defs={} expr=v3393[16] }
        gs      = { defs={} expr=v3394[16] }
        cf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3385[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3385[32]) 12[33]))))) }
        ?1      = { defs={} expr=v3396[1] }
        pf      = { defs={0x080484e0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32]))))))) }
        ?3      = { defs={} expr=v3398[1] }
        af      = { defs={0x080484e0} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3385[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3385[32]) 12[33]))))) }
        ?5      = { defs={} expr=v3400[1] }
        zf      = { defs={0x080484e0} expr=(zerop[1] (add[32] v3385[32] 12[32])) }
        sf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (add[32] v3385[32] 12[32])) }
        tf      = { defs={} expr=v3403[1] }
        if      = { defs={} expr=v3404[1] }
        df      = { defs={} expr=v3405[1] }
        of      = { defs={0x080484e0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3385[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3385[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3385[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3385[32]) 12[33])))))) }
        iopl0   = { defs={} expr=v3407[1] }
        iopl1   = { defs={} expr=v3408[1] }
        nt      = { defs={} expr=v3409[1] }
        ?15     = { defs={} expr=v3410[1] }
        rf      = { defs={} expr=v3411[1] }
        vm      = { defs={} expr=v3412[1] }
        ac      = { defs={} expr=v3413[1] }
        vif     = { defs={} expr=v3414[1] }
        vip     = { defs={} expr=v3415[1] }
        id      = { defs={} expr=v3416[1] }
        ?22     = { defs={} expr=v3417[1] }
        ?23     = { defs={} expr=v3418[1] }
        ?24     = { defs={} expr=v3419[1] }
        ?25     = { defs={} expr=v3420[1] }
        ?26     = { defs={} expr=v3421[1] }
        ?27     = { defs={} expr=v3422[1] }
        ?28     = { defs={} expr=v3423[1] }
        ?29     = { defs={} expr=v3424[1] }
        ?30     = { defs={} expr=v3425[1] }
        ?31     = { defs={} expr=v3426[1] }
        ip      = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5} expr=0x080484e6[32] }
    memory:
        address = { defs={0x080484e0} expr=(add[32] v3385[32] 12[32]) }
          value = { defs={} expr=v3427[32] }
          flags = { size=4; read-only }
        address = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] v3385[32] 12[32]) 4[32]) }
          value = { defs={} expr=v3428[32] }
          flags = { size=4; read-only }
        address = { defs={0x080484e0,0x080484e3,0x080484e4} expr=(add[32] (add[32] (add[32] v3385[32] 12[32]) 4[32]) 4[32]) }
          value = { defs={} expr=v3429[32] }
          flags = { size=4; read-only }
    ip = defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5} expr=0x080484e6[32]
0x80484e6:pop    ebp
    registers:
        ax      = { defs={} expr=v3381[32] }
        cx      = { defs={} expr=v3382[32] }
        dx      = { defs={} expr=v3383[32] }
        bx      = { defs={0x080484e3} expr=v3427[32] }
        sp      = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v3385[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) }
        bp      = { defs={0x080484e6} expr=v3430[32] }
        si      = { defs={0x080484e4} expr=v3428[32] }
        di      = { defs={0x080484e5} expr=v3429[32] }
        es      = { defs={} expr=v3389[16] }
        cs      = { defs={} expr=v3390[16] }
        ss      = { defs={} expr=v3391[16] }
        ds      = { defs={} expr=v3392[16] }
        fs      = { defs={} expr=v3393[16] }
        gs      = { defs={} expr=v3394[16] }
        cf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3385[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3385[32]) 12[33]))))) }
        ?1      = { defs={} expr=v3396[1] }
        pf      = { defs={0x080484e0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32]))))))) }
        ?3      = { defs={} expr=v3398[1] }
        af      = { defs={0x080484e0} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3385[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3385[32]) 12[33]))))) }
        ?5      = { defs={} expr=v3400[1] }
        zf      = { defs={0x080484e0} expr=(zerop[1] (add[32] v3385[32] 12[32])) }
        sf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (add[32] v3385[32] 12[32])) }
        tf      = { defs={} expr=v3403[1] }
        if      = { defs={} expr=v3404[1] }
        df      = { defs={} expr=v3405[1] }
        of      = { defs={0x080484e0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3385[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3385[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3385[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3385[32]) 12[33])))))) }
        iopl0   = { defs={} expr=v3407[1] }
        iopl1   = { defs={} expr=v3408[1] }
        nt      = { defs={} expr=v3409[1] }
        ?15     = { defs={} expr=v3410[1] }
        rf      = { defs={} expr=v3411[1] }
        vm      = { defs={} expr=v3412[1] }
        ac      = { defs={} expr=v3413[1] }
        vif     = { defs={} expr=v3414[1] }
        vip     = { defs={} expr=v3415[1] }
        id      = { defs={} expr=v3416[1] }
        ?22     = { defs={} expr=v3417[1] }
        ?23     = { defs={} expr=v3418[1] }
        ?24     = { defs={} expr=v3419[1] }
        ?25     = { defs={} expr=v3420[1] }
        ?26     = { defs={} expr=v3421[1] }
        ?27     = { defs={} expr=v3422[1] }
        ?28     = { defs={} expr=v3423[1] }
        ?29     = { defs={} expr=v3424[1] }
        ?30     = { defs={} expr=v3425[1] }
        ?31     = { defs={} expr=v3426[1] }
        ip      = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6} expr=0x080484e7[32] }
    memory:
        address = { defs={0x080484e0} expr=(add[32] v3385[32] 12[32]) }
          value = { defs={} expr=v3427[32] }
          flags = { size=4; read-only }
        address = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] v3385[32] 12[32]) 4[32]) }
          value = { defs={} expr=v3428[32] }
          flags = { size=4; read-only }
        address = { defs={0x080484e0,0x080484e3,0x080484e4} expr=(add[32] (add[32] (add[32] v3385[32] 12[32]) 4[32]) 4[32]) }
          value = { defs={} expr=v3429[32] }
          flags = { size=4; read-only }
        address = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5} expr=(add[32] (add[32] (add[32] (add[32] v3385[32] 12[32]) 4[32]) 4[32]) 4[32]) }
          value = { defs={} expr=v3430[32] }
          flags = { size=4; read-only }
    ip = defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6} expr=0x080484e7[32]
0x80484e7:ret    
    registers:
        ax      = { defs={} expr=v3381[32] }
        cx      = { defs={} expr=v3382[32] }
        dx      = { defs={} expr=v3383[32] }
        bx      = { defs={0x080484e3} expr=v3427[32] }
        sp      = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6,0x080484e7} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v3385[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) 4[32]) }
        bp      = { defs={0x080484e6} expr=v3430[32] }
        si      = { defs={0x080484e4} expr=v3428[32] }
        di      = { defs={0x080484e5} expr=v3429[32] }
        es      = { defs={} expr=v3389[16] }
        cs      = { defs={} expr=v3390[16] }
        ss      = { defs={} expr=v3391[16] }
        ds      = { defs={} expr=v3392[16] }
        fs      = { defs={} expr=v3393[16] }
        gs      = { defs={} expr=v3394[16] }
        cf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3385[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3385[32]) 12[33]))))) }
        ?1      = { defs={} expr=v3396[1] }
        pf      = { defs={0x080484e0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v3385[32] 12[32]))))))) }
        ?3      = { defs={} expr=v3398[1] }
        af      = { defs={0x080484e0} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3385[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3385[32]) 12[33]))))) }
        ?5      = { defs={} expr=v3400[1] }
        zf      = { defs={0x080484e0} expr=(zerop[1] (add[32] v3385[32] 12[32])) }
        sf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (add[32] v3385[32] 12[32])) }
        tf      = { defs={} expr=v3403[1] }
        if      = { defs={} expr=v3404[1] }
        df      = { defs={} expr=v3405[1] }
        of      = { defs={0x080484e0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3385[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3385[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3385[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3385[32]) 12[33])))))) }
        iopl0   = { defs={} expr=v3407[1] }
        iopl1   = { defs={} expr=v3408[1] }
        nt      = { defs={} expr=v3409[1] }
        ?15     = { defs={} expr=v3410[1] }
        rf      = { defs={} expr=v3411[1] }
        vm      = { defs={} expr=v3412[1] }
        ac      = { defs={} expr=v3413[1] }
        vif     = { defs={} expr=v3414[1] }
        vip     = { defs={} expr=v3415[1] }
        id      = { defs={} expr=v3416[1] }
        ?22     = { defs={} expr=v3417[1] }
        ?23     = { defs={} expr=v3418[1] }
        ?24     = { defs={} expr=v3419[1] }
        ?25     = { defs={} expr=v3420[1] }
        ?26     = { defs={} expr=v3421[1] }
        ?27     = { defs={} expr=v3422[1] }
        ?28     = { defs={} expr=v3423[1] }
        ?29     = { defs={} expr=v3424[1] }
        ?30     = { defs={} expr=v3425[1] }
        ?31     = { defs={} expr=v3426[1] }
        ip      = { defs={0x080484e7} expr=v3431[32] }
    memory:
        address = { defs={0x080484e0} expr=(add[32] v3385[32] 12[32]) }
          value = { defs={} expr=v3427[32] }
          flags = { size=4; read-only }
        address = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] v3385[32] 12[32]) 4[32]) }
          value = { defs={} expr=v3428[32] }
          flags = { size=4; read-only }
        address = { defs={0x080484e0,0x080484e3,0x080484e4} expr=(add[32] (add[32] (add[32] v3385[32] 12[32]) 4[32]) 4[32]) }
          value = { defs={} expr=v3429[32] }
          flags = { size=4; read-only }
        address = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5} expr=(add[32] (add[32] (add[32] (add[32] v3385[32] 12[32]) 4[32]) 4[32]) 4[32]) }
          value = { defs={} expr=v3430[32] }
          flags = { size=4; read-only }
        address = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v3385[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) }
          value = { defs={} expr=v3431[32] }
          flags = { size=4; read-only }
    ip = defs={0x080484e7} expr=v3431[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048520:push   ebp
    registers:
        ax      = { defs={} expr=v3480[32] }
        cx      = { defs={} expr=v3481[32] }
        dx      = { defs={} expr=v3482[32] }
        bx      = { defs={} expr=v3483[32] }
        sp      = { defs={0x08048520} expr=(add[32] v3484[32] -4[32]) }
        bp      = { defs={} expr=v3485[32] }
        si      = { defs={} expr=v3486[32] }
        di      = { defs={} expr=v3487[32] }
        es      = { defs={} expr=v3488[16] }
        cs      = { defs={} expr=v3489[16] }
        ss      = { defs={} expr=v3490[16] }
        ds      = { defs={} expr=v3491[16] }
        fs      = { defs={} expr=v3492[16] }
        gs      = { defs={} expr=v3493[16] }
        cf      = { defs={} expr=v3494[1] }
        ?1      = { defs={} expr=v3495[1] }
        pf      = { defs={} expr=v3496[1] }
        ?3      = { defs={} expr=v3497[1] }
        af      = { defs={} expr=v3498[1] }
        ?5      = { defs={} expr=v3499[1] }
        zf      = { defs={} expr=v3500[1] }
        sf      = { defs={} expr=v3501[1] }
        tf      = { defs={} expr=v3502[1] }
        if      = { defs={} expr=v3503[1] }
        df      = { defs={} expr=v3504[1] }
        of      = { defs={} expr=v3505[1] }
        iopl0   = { defs={} expr=v3506[1] }
        iopl1   = { defs={} expr=v3507[1] }
        nt      = { defs={} expr=v3508[1] }
        ?15     = { defs={} expr=v3509[1] }
        rf      = { defs={} expr=v3510[1] }
        vm      = { defs={} expr=v3511[1] }
        ac      = { defs={} expr=v3512[1] }
        vif     = { defs={} expr=v3513[1] }
        vip     = { defs={} expr=v3514[1] }
        id      = { defs={} expr=v3515[1] }
        ?22     = { defs={} expr=v3516[1] }
        ?23     = { defs={} expr=v3517[1] }
        ?24     = { defs={} expr=v3518[1] }
        ?25     = { defs={} expr=v3519[1] }
        ?26     = { defs={} expr=v3520[1] }
        ?27     = { defs={} expr=v3521[1] }
        ?28     = { defs={} expr=v3522[1] }
        ?29     = { defs={} expr=v3523[1] }
        ?30     = { defs={} expr=v3524[1] }
        ?31     = { defs={} expr=v3525[1] }
        ip      = { defs={0x08048520} expr=0x08048521[32] }
    memory:
        address = { defs={0x08048520} expr=(add[32] v3484[32] -4[32]) }
          value = { defs={0x08048520} expr=v3485[32] }
          flags = { size=4 }
    ip = defs={0x08048520} expr=0x08048521[32]
0x8048521:mov    ebp, esp
    registers:
        ax      = { defs={} expr=v3480[32] }
        cx      = { defs={} expr=v3481[32] }
        dx      = { defs={} expr=v3482[32] }
        bx      = { defs={} expr=v3483[32] }
        sp      = { defs={0x08048520} expr=(add[32] v3484[32] -4[32]) }
        bp      = { defs={0x08048520,0x08048521} expr=(add[32] v3484[32] -4[32]) }
        si      = { defs={} expr=v3486[32] }
        di      = { defs={} expr=v3487[32] }
        es      = { defs={} expr=v3488[16] }
        cs      = { defs={} expr=v3489[16] }
        ss      = { defs={} expr=v3490[16] }
        ds      = { defs={} expr=v3491[16] }
        fs      = { defs={} expr=v3492[16] }
        gs      = { defs={} expr=v3493[16] }
        cf      = { defs={} expr=v3494[1] }
        ?1      = { defs={} expr=v3495[1] }
        pf      = { defs={} expr=v3496[1] }
        ?3      = { defs={} expr=v3497[1] }
        af      = { defs={} expr=v3498[1] }
        ?5      = { defs={} expr=v3499[1] }
        zf      = { defs={} expr=v3500[1] }
        sf      = { defs={} expr=v3501[1] }
        tf      = { defs={} expr=v3502[1] }
        if      = { defs={} expr=v3503[1] }
        df      = { defs={} expr=v3504[1] }
        of      = { defs={} expr=v3505[1] }
        iopl0   = { defs={} expr=v3506[1] }
        iopl1   = { defs={} expr=v3507[1] }
        nt      = { defs={} expr=v3508[1] }
        ?15     = { defs={} expr=v3509[1] }
        rf      = { defs={} expr=v3510[1] }
        vm      = { defs={} expr=v3511[1] }
        ac      = { defs={} expr=v3512[1] }
        vif     = { defs={} expr=v3513[1] }
        vip     = { defs={} expr=v3514[1] }
        id      = { defs={} expr=v3515[1] }
        ?22     = { defs={} expr=v3516[1] }
        ?23     = { defs={} expr=v3517[1] }
        ?24     = { defs={} expr=v3518[1] }
        ?25     = { defs={} expr=v3519[1] }
        ?26     = { defs={} expr=v3520[1] }
        ?27     = { defs={} expr=v3521[1] }
        ?28     = { defs={} expr=v3522[1] }
        ?29     = { defs={} expr=v3523[1] }
        ?30     = { defs={} expr=v3524[1] }
        ?31     = { defs={} expr=v3525[1] }
        ip      = { defs={0x08048520,0x08048521} expr=0x08048523[32] }
    memory:
        address = { defs={0x08048520} expr=(add[32] v3484[32] -4[32]) }
          value = { defs={0x08048520} expr=v3485[32] }
          flags = { size=4 }
    ip = defs={0x08048520,0x08048521} expr=0x08048523[32]
0x8048523:push   edi
    registers:
        ax      = { defs={} expr=v3480[32] }
        cx      = { defs={} expr=v3481[32] }
        dx      = { defs={} expr=v3482[32] }
        bx      = { defs={} expr=v3483[32] }
        sp      = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] v3484[32] -4[32]) -4[32]) }
        bp      = { defs={0x08048520,0x08048521} expr=(add[32] v3484[32] -4[32]) }
        si      = { defs={} expr=v3486[32] }
        di      = { defs={} expr=v3487[32] }
        es      = { defs={} expr=v3488[16] }
        cs      = { defs={} expr=v3489[16] }
        ss      = { defs={} expr=v3490[16] }
        ds      = { defs={} expr=v3491[16] }
        fs      = { defs={} expr=v3492[16] }
        gs      = { defs={} expr=v3493[16] }
        cf      = { defs={} expr=v3494[1] }
        ?1      = { defs={} expr=v3495[1] }
        pf      = { defs={} expr=v3496[1] }
        ?3      = { defs={} expr=v3497[1] }
        af      = { defs={} expr=v3498[1] }
        ?5      = { defs={} expr=v3499[1] }
        zf      = { defs={} expr=v3500[1] }
        sf      = { defs={} expr=v3501[1] }
        tf      = { defs={} expr=v3502[1] }
        if      = { defs={} expr=v3503[1] }
        df      = { defs={} expr=v3504[1] }
        of      = { defs={} expr=v3505[1] }
        iopl0   = { defs={} expr=v3506[1] }
        iopl1   = { defs={} expr=v3507[1] }
        nt      = { defs={} expr=v3508[1] }
        ?15     = { defs={} expr=v3509[1] }
        rf      = { defs={} expr=v3510[1] }
        vm      = { defs={} expr=v3511[1] }
        ac      = { defs={} expr=v3512[1] }
        vif     = { defs={} expr=v3513[1] }
        vip     = { defs={} expr=v3514[1] }
        id      = { defs={} expr=v3515[1] }
        ?22     = { defs={} expr=v3516[1] }
        ?23     = { defs={} expr=v3517[1] }
        ?24     = { defs={} expr=v3518[1] }
        ?25     = { defs={} expr=v3519[1] }
        ?26     = { defs={} expr=v3520[1] }
        ?27     = { defs={} expr=v3521[1] }
        ?28     = { defs={} expr=v3522[1] }
        ?29     = { defs={} expr=v3523[1] }
        ?30     = { defs={} expr=v3524[1] }
        ?31     = { defs={} expr=v3525[1] }
        ip      = { defs={0x08048520,0x08048521,0x08048523} expr=0x08048524[32] }
    memory:
        address = { defs={0x08048520} expr=(add[32] v3484[32] -4[32]) }
          value = { defs={0x08048520} expr=v3485[32] }
          flags = { size=4 }
        address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] v3484[32] -4[32]) -4[32]) }
          value = { defs={0x08048523} expr=v3487[32] }
          flags = { size=4 }
    ip = defs={0x08048520,0x08048521,0x08048523} expr=0x08048524[32]
0x8048524:push   esi
    registers:
        ax      = { defs={} expr=v3480[32] }
        cx      = { defs={} expr=v3481[32] }
        dx      = { defs={} expr=v3482[32] }
        bx      = { defs={} expr=v3483[32] }
        sp      = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048520,0x08048521} expr=(add[32] v3484[32] -4[32]) }
        si      = { defs={} expr=v3486[32] }
        di      = { defs={} expr=v3487[32] }
        es      = { defs={} expr=v3488[16] }
        cs      = { defs={} expr=v3489[16] }
        ss      = { defs={} expr=v3490[16] }
        ds      = { defs={} expr=v3491[16] }
        fs      = { defs={} expr=v3492[16] }
        gs      = { defs={} expr=v3493[16] }
        cf      = { defs={} expr=v3494[1] }
        ?1      = { defs={} expr=v3495[1] }
        pf      = { defs={} expr=v3496[1] }
        ?3      = { defs={} expr=v3497[1] }
        af      = { defs={} expr=v3498[1] }
        ?5      = { defs={} expr=v3499[1] }
        zf      = { defs={} expr=v3500[1] }
        sf      = { defs={} expr=v3501[1] }
        tf      = { defs={} expr=v3502[1] }
        if      = { defs={} expr=v3503[1] }
        df      = { defs={} expr=v3504[1] }
        of      = { defs={} expr=v3505[1] }
        iopl0   = { defs={} expr=v3506[1] }
        iopl1   = { defs={} expr=v3507[1] }
        nt      = { defs={} expr=v3508[1] }
        ?15     = { defs={} expr=v3509[1] }
        rf      = { defs={} expr=v3510[1] }
        vm      = { defs={} expr=v3511[1] }
        ac      = { defs={} expr=v3512[1] }
        vif     = { defs={} expr=v3513[1] }
        vip     = { defs={} expr=v3514[1] }
        id      = { defs={} expr=v3515[1] }
        ?22     = { defs={} expr=v3516[1] }
        ?23     = { defs={} expr=v3517[1] }
        ?24     = { defs={} expr=v3518[1] }
        ?25     = { defs={} expr=v3519[1] }
        ?26     = { defs={} expr=v3520[1] }
        ?27     = { defs={} expr=v3521[1] }
        ?28     = { defs={} expr=v3522[1] }
        ?29     = { defs={} expr=v3523[1] }
        ?30     = { defs={} expr=v3524[1] }
        ?31     = { defs={} expr=v3525[1] }
        ip      = { defs={0x08048520,0x08048521,0x08048523,0x08048524} expr=0x08048525[32] }
    memory:
        address = { defs={0x08048520} expr=(add[32] v3484[32] -4[32]) }
          value = { defs={0x08048520} expr=v3485[32] }
          flags = { size=4 }
        address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] v3484[32] -4[32]) -4[32]) }
          value = { defs={0x08048523} expr=v3487[32] }
          flags = { size=4 }
        address = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048524} expr=v3486[32] }
          flags = { size=4 }
    ip = defs={0x08048520,0x08048521,0x08048523,0x08048524} expr=0x08048525[32]
0x8048525:push   ebx
    registers:
        ax      = { defs={} expr=v3480[32] }
        cx      = { defs={} expr=v3481[32] }
        dx      = { defs={} expr=v3482[32] }
        bx      = { defs={} expr=v3483[32] }
        sp      = { defs={0x08048520,0x08048523,0x08048524,0x08048525} expr=(add[32] (add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048520,0x08048521} expr=(add[32] v3484[32] -4[32]) }
        si      = { defs={} expr=v3486[32] }
        di      = { defs={} expr=v3487[32] }
        es      = { defs={} expr=v3488[16] }
        cs      = { defs={} expr=v3489[16] }
        ss      = { defs={} expr=v3490[16] }
        ds      = { defs={} expr=v3491[16] }
        fs      = { defs={} expr=v3492[16] }
        gs      = { defs={} expr=v3493[16] }
        cf      = { defs={} expr=v3494[1] }
        ?1      = { defs={} expr=v3495[1] }
        pf      = { defs={} expr=v3496[1] }
        ?3      = { defs={} expr=v3497[1] }
        af      = { defs={} expr=v3498[1] }
        ?5      = { defs={} expr=v3499[1] }
        zf      = { defs={} expr=v3500[1] }
        sf      = { defs={} expr=v3501[1] }
        tf      = { defs={} expr=v3502[1] }
        if      = { defs={} expr=v3503[1] }
        df      = { defs={} expr=v3504[1] }
        of      = { defs={} expr=v3505[1] }
        iopl0   = { defs={} expr=v3506[1] }
        iopl1   = { defs={} expr=v3507[1] }
        nt      = { defs={} expr=v3508[1] }
        ?15     = { defs={} expr=v3509[1] }
        rf      = { defs={} expr=v3510[1] }
        vm      = { defs={} expr=v3511[1] }
        ac      = { defs={} expr=v3512[1] }
        vif     = { defs={} expr=v3513[1] }
        vip     = { defs={} expr=v3514[1] }
        id      = { defs={} expr=v3515[1] }
        ?22     = { defs={} expr=v3516[1] }
        ?23     = { defs={} expr=v3517[1] }
        ?24     = { defs={} expr=v3518[1] }
        ?25     = { defs={} expr=v3519[1] }
        ?26     = { defs={} expr=v3520[1] }
        ?27     = { defs={} expr=v3521[1] }
        ?28     = { defs={} expr=v3522[1] }
        ?29     = { defs={} expr=v3523[1] }
        ?30     = { defs={} expr=v3524[1] }
        ?31     = { defs={} expr=v3525[1] }
        ip      = { defs={0x08048520,0x08048521,0x08048523,0x08048524,0x08048525} expr=0x08048526[32] }
    memory:
        address = { defs={0x08048520} expr=(add[32] v3484[32] -4[32]) }
          value = { defs={0x08048520} expr=v3485[32] }
          flags = { size=4 }
        address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] v3484[32] -4[32]) -4[32]) }
          value = { defs={0x08048523} expr=v3487[32] }
          flags = { size=4 }
        address = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048524} expr=v3486[32] }
          flags = { size=4 }
        address = { defs={0x08048520,0x08048523,0x08048524,0x08048525} expr=(add[32] (add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048525} expr=v3483[32] }
          flags = { size=4 }
    ip = defs={0x08048520,0x08048521,0x08048523,0x08048524,0x08048525} expr=0x08048526[32]
0x8048526:sub    esp, 0x0c
    registers:
        ax      = { defs={} expr=v3480[32] }
        cx      = { defs={} expr=v3481[32] }
        dx      = { defs={} expr=v3482[32] }
        bx      = { defs={} expr=v3483[32] }
        sp      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) }
        bp      = { defs={0x08048520,0x08048521} expr=(add[32] v3484[32] -4[32]) }
        si      = { defs={} expr=v3486[32] }
        di      = { defs={} expr=v3487[32] }
        es      = { defs={} expr=v3488[16] }
        cs      = { defs={} expr=v3489[16] }
        ss      = { defs={} expr=v3490[16] }
        ds      = { defs={} expr=v3491[16] }
        fs      = { defs={} expr=v3492[16] }
        gs      = { defs={} expr=v3493[16] }
        cf      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
        ?1      = { defs={} expr=v3495[1] }
        pf      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))))) }
        ?3      = { defs={} expr=v3497[1] }
        af      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
        ?5      = { defs={} expr=v3499[1] }
        zf      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(zerop[1] (add[32] (add[32] (add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])) }
        sf      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])) }
        tf      = { defs={} expr=v3502[1] }
        if      = { defs={} expr=v3503[1] }
        df      = { defs={} expr=v3504[1] }
        of      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
        iopl0   = { defs={} expr=v3506[1] }
        iopl1   = { defs={} expr=v3507[1] }
        nt      = { defs={} expr=v3508[1] }
        ?15     = { defs={} expr=v3509[1] }
        rf      = { defs={} expr=v3510[1] }
        vm      = { defs={} expr=v3511[1] }
        ac      = { defs={} expr=v3512[1] }
        vif     = { defs={} expr=v3513[1] }
        vip     = { defs={} expr=v3514[1] }
        id      = { defs={} expr=v3515[1] }
        ?22     = { defs={} expr=v3516[1] }
        ?23     = { defs={} expr=v3517[1] }
        ?24     = { defs={} expr=v3518[1] }
        ?25     = { defs={} expr=v3519[1] }
        ?26     = { defs={} expr=v3520[1] }
        ?27     = { defs={} expr=v3521[1] }
        ?28     = { defs={} expr=v3522[1] }
        ?29     = { defs={} expr=v3523[1] }
        ?30     = { defs={} expr=v3524[1] }
        ?31     = { defs={} expr=v3525[1] }
        ip      = { defs={0x08048520,0x08048521,0x08048523,0x08048524,0x08048525,0x08048526} expr=0x08048529[32] }
    memory:
        address = { defs={0x08048520} expr=(add[32] v3484[32] -4[32]) }
          value = { defs={0x08048520} expr=v3485[32] }
          flags = { size=4 }
        address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] v3484[32] -4[32]) -4[32]) }
          value = { defs={0x08048523} expr=v3487[32] }
          flags = { size=4 }
        address = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048524} expr=v3486[32] }
          flags = { size=4 }
        address = { defs={0x08048520,0x08048523,0x08048524,0x08048525} expr=(add[32] (add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048525} expr=v3483[32] }
          flags = { size=4 }
    ip = defs={0x08048520,0x08048521,0x08048523,0x08048524,0x08048525,0x08048526} expr=0x08048529[32]
0x8048529:call   0x0804852e<<Insn>>
    registers:
        ax      = { defs={} expr=v3480[32] }
        cx      = { defs={} expr=v3481[32] }
        dx      = { defs={} expr=v3482[32] }
        bx      = { defs={} expr=v3483[32] }
        sp      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]) }
        bp      = { defs={0x08048520,0x08048521} expr=(add[32] v3484[32] -4[32]) }
        si      = { defs={} expr=v3486[32] }
        di      = { defs={} expr=v3487[32] }
        es      = { defs={} expr=v3488[16] }
        cs      = { defs={} expr=v3489[16] }
        ss      = { defs={} expr=v3490[16] }
        ds      = { defs={} expr=v3491[16] }
        fs      = { defs={} expr=v3492[16] }
        gs      = { defs={} expr=v3493[16] }
        cf      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
        ?1      = { defs={} expr=v3495[1] }
        pf      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))))) }
        ?3      = { defs={} expr=v3497[1] }
        af      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
        ?5      = { defs={} expr=v3499[1] }
        zf      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(zerop[1] (add[32] (add[32] (add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])) }
        sf      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])) }
        tf      = { defs={} expr=v3502[1] }
        if      = { defs={} expr=v3503[1] }
        df      = { defs={} expr=v3504[1] }
        of      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
        iopl0   = { defs={} expr=v3506[1] }
        iopl1   = { defs={} expr=v3507[1] }
        nt      = { defs={} expr=v3508[1] }
        ?15     = { defs={} expr=v3509[1] }
        rf      = { defs={} expr=v3510[1] }
        vm      = { defs={} expr=v3511[1] }
        ac      = { defs={} expr=v3512[1] }
        vif     = { defs={} expr=v3513[1] }
        vip     = { defs={} expr=v3514[1] }
        id      = { defs={} expr=v3515[1] }
        ?22     = { defs={} expr=v3516[1] }
        ?23     = { defs={} expr=v3517[1] }
        ?24     = { defs={} expr=v3518[1] }
        ?25     = { defs={} expr=v3519[1] }
        ?26     = { defs={} expr=v3520[1] }
        ?27     = { defs={} expr=v3521[1] }
        ?28     = { defs={} expr=v3522[1] }
        ?29     = { defs={} expr=v3523[1] }
        ?30     = { defs={} expr=v3524[1] }
        ?31     = { defs={} expr=v3525[1] }
        ip      = { defs={0x08048529} expr=0x0804852e[32] }
    memory:
        address = { defs={0x08048520} expr=(add[32] v3484[32] -4[32]) }
          value = { defs={0x08048520} expr=v3485[32] }
          flags = { size=4 }
        address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] v3484[32] -4[32]) -4[32]) }
          value = { defs={0x08048523} expr=v3487[32] }
          flags = { size=4 }
        address = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048524} expr=v3486[32] }
          flags = { size=4 }
        address = { defs={0x08048520,0x08048523,0x08048524,0x08048525} expr=(add[32] (add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048525} expr=v3483[32] }
          flags = { size=4 }
        address = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v3484[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]) }
          value = { defs={0x08048520,0x08048521,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529} expr=0x0804852e[32] }
          flags = { size=4 }
    ip = defs={0x08048529} expr=0x0804852e[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804852e:pop    ebx
    registers:
        ax      = { defs={} expr=v3574[32] }
        cx      = { defs={} expr=v3575[32] }
        dx      = { defs={} expr=v3576[32] }
        bx      = { defs={0x0804852e} expr=v3620[32] }
        sp      = { defs={0x0804852e} expr=(add[32] v3578[32] 4[32]) }
        bp      = { defs={} expr=v3579[32] }
        si      = { defs={} expr=v3580[32] }
        di      = { defs={} expr=v3581[32] }
        es      = { defs={} expr=v3582[16] }
        cs      = { defs={} expr=v3583[16] }
        ss      = { defs={} expr=v3584[16] }
        ds      = { defs={} expr=v3585[16] }
        fs      = { defs={} expr=v3586[16] }
        gs      = { defs={} expr=v3587[16] }
        cf      = { defs={} expr=v3588[1] }
        ?1      = { defs={} expr=v3589[1] }
        pf      = { defs={} expr=v3590[1] }
        ?3      = { defs={} expr=v3591[1] }
        af      = { defs={} expr=v3592[1] }
        ?5      = { defs={} expr=v3593[1] }
        zf      = { defs={} expr=v3594[1] }
        sf      = { defs={} expr=v3595[1] }
        tf      = { defs={} expr=v3596[1] }
        if      = { defs={} expr=v3597[1] }
        df      = { defs={} expr=v3598[1] }
        of      = { defs={} expr=v3599[1] }
        iopl0   = { defs={} expr=v3600[1] }
        iopl1   = { defs={} expr=v3601[1] }
        nt      = { defs={} expr=v3602[1] }
        ?15     = { defs={} expr=v3603[1] }
        rf      = { defs={} expr=v3604[1] }
        vm      = { defs={} expr=v3605[1] }
        ac      = { defs={} expr=v3606[1] }
        vif     = { defs={} expr=v3607[1] }
        vip     = { defs={} expr=v3608[1] }
        id      = { defs={} expr=v3609[1] }
        ?22     = { defs={} expr=v3610[1] }
        ?23     = { defs={} expr=v3611[1] }
        ?24     = { defs={} expr=v3612[1] }
        ?25     = { defs={} expr=v3613[1] }
        ?26     = { defs={} expr=v3614[1] }
        ?27     = { defs={} expr=v3615[1] }
        ?28     = { defs={} expr=v3616[1] }
        ?29     = { defs={} expr=v3617[1] }
        ?30     = { defs={} expr=v3618[1] }
        ?31     = { defs={} expr=v3619[1] }
        ip      = { defs={0x0804852e} expr=0x0804852f[32] }
    memory:
        address = { defs={} expr=v3578[32] }
          value = { defs={} expr=v3620[32] }
          flags = { size=4; read-only }
    ip = defs={0x0804852e} expr=0x0804852f[32]
0x804852f:add    ebx, 0x0000119a
    registers:
        ax      = { defs={} expr=v3574[32] }
        cx      = { defs={} expr=v3575[32] }
        dx      = { defs={} expr=v3576[32] }
        bx      = { defs={0x0804852e,0x0804852f} expr=(add[32] v3620[32] 4506[32]) }
        sp      = { defs={0x0804852e} expr=(add[32] v3578[32] 4[32]) }
        bp      = { defs={} expr=v3579[32] }
        si      = { defs={} expr=v3580[32] }
        di      = { defs={} expr=v3581[32] }
        es      = { defs={} expr=v3582[16] }
        cs      = { defs={} expr=v3583[16] }
        ss      = { defs={} expr=v3584[16] }
        ds      = { defs={} expr=v3585[16] }
        fs      = { defs={} expr=v3586[16] }
        gs      = { defs={} expr=v3587[16] }
        cf      = { defs={0x0804852e,0x0804852f} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3620[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v3620[32]) 4506[33]))))) }
        ?1      = { defs={} expr=v3589[1] }
        pf      = { defs={0x0804852e,0x0804852f} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v3620[32] 4506[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v3620[32] 4506[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v3620[32] 4506[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v3620[32] 4506[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v3620[32] 4506[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v3620[32] 4506[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v3620[32] 4506[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v3620[32] 4506[32]))))))) }
        ?3      = { defs={} expr=v3591[1] }
        af      = { defs={0x0804852e,0x0804852f} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3620[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v3620[32]) 4506[33]))))) }
        ?5      = { defs={} expr=v3593[1] }
        zf      = { defs={0x0804852e,0x0804852f} expr=(zerop[1] (add[32] v3620[32] 4506[32])) }
        sf      = { defs={0x0804852e,0x0804852f} expr=(extract[1] 31[32] 32[32] (add[32] v3620[32] 4506[32])) }
        tf      = { defs={} expr=v3596[1] }
        if      = { defs={} expr=v3597[1] }
        df      = { defs={} expr=v3598[1] }
        of      = { defs={0x0804852e,0x0804852f} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3620[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v3620[32]) 4506[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3620[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v3620[32]) 4506[33])))))) }
        iopl0   = { defs={} expr=v3600[1] }
        iopl1   = { defs={} expr=v3601[1] }
        nt      = { defs={} expr=v3602[1] }
        ?15     = { defs={} expr=v3603[1] }
        rf      = { defs={} expr=v3604[1] }
        vm      = { defs={} expr=v3605[1] }
        ac      = { defs={} expr=v3606[1] }
        vif     = { defs={} expr=v3607[1] }
        vip     = { defs={} expr=v3608[1] }
        id      = { defs={} expr=v3609[1] }
        ?22     = { defs={} expr=v3610[1] }
        ?23     = { defs={} expr=v3611[1] }
        ?24     = { defs={} expr=v3612[1] }
        ?25     = { defs={} expr=v3613[1] }
        ?26     = { defs={} expr=v3614[1] }
        ?27     = { defs={} expr=v3615[1] }
        ?28     = { defs={} expr=v3616[1] }
        ?29     = { defs={} expr=v3617[1] }
        ?30     = { defs={} expr=v3618[1] }
        ?31     = { defs={} expr=v3619[1] }
        ip      = { defs={0x0804852e,0x0804852f} expr=0x08048535[32] }
    memory:
        address = { defs={} expr=v3578[32] }
          value = { defs={} expr=v3620[32] }
          flags = { size=4; read-only }
    ip = defs={0x0804852e,0x0804852f} expr=0x08048535[32]
0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
    registers:
        ax      = { defs={0x0804852e,0x0804852f,0x08048535} expr=(add[32] (add[32] v3620[32] 4506[32]) -224[32]) }
        cx      = { defs={} expr=v3575[32] }
        dx      = { defs={} expr=v3576[32] }
        bx      = { defs={0x0804852e,0x0804852f} expr=(add[32] v3620[32] 4506[32]) }
        sp      = { defs={0x0804852e} expr=(add[32] v3578[32] 4[32]) }
        bp      = { defs={} expr=v3579[32] }
        si      = { defs={} expr=v3580[32] }
        di      = { defs={} expr=v3581[32] }
        es      = { defs={} expr=v3582[16] }
        cs      = { defs={} expr=v3583[16] }
        ss      = { defs={} expr=v3584[16] }
        ds      = { defs={} expr=v3585[16] }
        fs      = { defs={} expr=v3586[16] }
        gs      = { defs={} expr=v3587[16] }
        cf      = { defs={0x0804852e,0x0804852f} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3620[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v3620[32]) 4506[33]))))) }
        ?1      = { defs={} expr=v3589[1] }
        pf      = { defs={0x0804852e,0x0804852f} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v3620[32] 4506[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v3620[32] 4506[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v3620[32] 4506[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v3620[32] 4506[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v3620[32] 4506[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v3620[32] 4506[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v3620[32] 4506[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v3620[32] 4506[32]))))))) }
        ?3      = { defs={} expr=v3591[1] }
        af      = { defs={0x0804852e,0x0804852f} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3620[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v3620[32]) 4506[33]))))) }
        ?5      = { defs={} expr=v3593[1] }
        zf      = { defs={0x0804852e,0x0804852f} expr=(zerop[1] (add[32] v3620[32] 4506[32])) }
        sf      = { defs={0x0804852e,0x0804852f} expr=(extract[1] 31[32] 32[32] (add[32] v3620[32] 4506[32])) }
        tf      = { defs={} expr=v3596[1] }
        if      = { defs={} expr=v3597[1] }
        df      = { defs={} expr=v3598[1] }
        of      = { defs={0x0804852e,0x0804852f} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3620[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v3620[32]) 4506[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3620[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v3620[32]) 4506[33])))))) }
        iopl0   = { defs={} expr=v3600[1] }
        iopl1   = { defs={} expr=v3601[1] }
        nt      = { defs={} expr=v3602[1] }
        ?15     = { defs={} expr=v3603[1] }
        rf      = { defs={} expr=v3604[1] }
        vm      = { defs={} expr=v3605[1] }
        ac      = { defs={} expr=v3606[1] }
        vif     = { defs={} expr=v3607[1] }
        vip     = { defs={} expr=v3608[1] }
        id      = { defs={} expr=v3609[1] }
        ?22     = { defs={} expr=v3610[1] }
        ?23     = { defs={} expr=v3611[1] }
        ?24     = { defs={} expr=v3612[1] }
        ?25     = { defs={} expr=v3613[1] }
        ?26     = { defs={} expr=v3614[1] }
        ?27     = { defs={} expr=v3615[1] }
        ?28     = { defs={} expr=v3616[1] }
        ?29     = { defs={} expr=v3617[1] }
        ?30     = { defs={} expr=v3618[1] }
        ?31     = { defs={} expr=v3619[1] }
        ip      = { defs={0x0804852e,0x0804852f,0x08048535} expr=0x0804853b[32] }
    memory:
        address = { defs={} expr=v3578[32] }
          value = { defs={} expr=v3620[32] }
          flags = { size=4; read-only }
    ip = defs={0x0804852e,0x0804852f,0x08048535} expr=0x0804853b[32]
0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
    registers:
        ax      = { defs={0x0804852e,0x0804852f,0x08048535} expr=(add[32] (add[32] v3620[32] 4506[32]) -224[32]) }
        cx      = { defs={} expr=v3575[32] }
        dx      = { defs={0x0804852e,0x0804852f,0x0804853b} expr=(add[32] (add[32] v3620[32] 4506[32]) -224[32]) }
        bx      = { defs={0x0804852e,0x0804852f} expr=(add[32] v3620[32] 4506[32]) }
        sp      = { defs={0x0804852e} expr=(add[32] v3578[32] 4[32]) }
        bp      = { defs={} expr=v3579[32] }
        si      = { defs={} expr=v3580[32] }
        di      = { defs={} expr=v3581[32] }
        es      = { defs={} expr=v3582[16] }
        cs      = { defs={} expr=v3583[16] }
        ss      = { defs={} expr=v3584[16] }
        ds      = { defs={} expr=v3585[16] }
        fs      = { defs={} expr=v3586[16] }
        gs      = { defs={} expr=v3587[16] }
        cf      = { defs={0x0804852e,0x0804852f} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3620[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v3620[32]) 4506[33]))))) }
        ?1      = { defs={} expr=v3589[1] }
        pf      = { defs={0x0804852e,0x0804852f} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v3620[32] 4506[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v3620[32] 4506[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v3620[32] 4506[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v3620[32] 4506[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v3620[32] 4506[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v3620[32] 4506[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v3620[32] 4506[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v3620[32] 4506[32]))))))) }
        ?3      = { defs={} expr=v3591[1] }
        af      = { defs={0x0804852e,0x0804852f} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3620[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v3620[32]) 4506[33]))))) }
        ?5      = { defs={} expr=v3593[1] }
        zf      = { defs={0x0804852e,0x0804852f} expr=(zerop[1] (add[32] v3620[32] 4506[32])) }
        sf      = { defs={0x0804852e,0x0804852f} expr=(extract[1] 31[32] 32[32] (add[32] v3620[32] 4506[32])) }
        tf      = { defs={} expr=v3596[1] }
        if      = { defs={} expr=v3597[1] }
        df      = { defs={} expr=v3598[1] }
        of      = { defs={0x0804852e,0x0804852f} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3620[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v3620[32]) 4506[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3620[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v3620[32]) 4506[33])))))) }
        iopl0   = { defs={} expr=v3600[1] }
        iopl1   = { defs={} expr=v3601[1] }
        nt      = { defs={} expr=v3602[1] }
        ?15     = { defs={} expr=v3603[1] }
        rf      = { defs={} expr=v3604[1] }
        vm      = { defs={} expr=v3605[1] }
        ac      = { defs={} expr=v3606[1] }
        vif     = { defs={} expr=v3607[1] }
        vip     = { defs={} expr=v3608[1] }
        id      = { defs={} expr=v3609[1] }
        ?22     = { defs={} expr=v3610[1] }
        ?23     = { defs={} expr=v3611[1] }
        ?24     = { defs={} expr=v3612[1] }
        ?25     = { defs={} expr=v3613[1] }
        ?26     = { defs={} expr=v3614[1] }
        ?27     = { defs={} expr=v3615[1] }
        ?28     = { defs={} expr=v3616[1] }
        ?29     = { defs={} expr=v3617[1] }
        ?30     = { defs={} expr=v3618[1] }
        ?31     = { defs={} expr=v3619[1] }
        ip      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b} expr=0x08048541[32] }
    memory:
        address = { defs={} expr=v3578[32] }
          value = { defs={} expr=v3620[32] }
          flags = { size=4; read-only }
    ip = defs={0x0804852e,0x0804852f,0x08048535,0x0804853b} expr=0x08048541[32]
0x8048541:sub    eax, edx
    registers:
        ax      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541} expr=(add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32])) }
        cx      = { defs={} expr=v3575[32] }
        dx      = { defs={0x0804852e,0x0804852f,0x0804853b} expr=(add[32] (add[32] v3620[32] 4506[32]) -224[32]) }
        bx      = { defs={0x0804852e,0x0804852f} expr=(add[32] v3620[32] 4506[32]) }
        sp      = { defs={0x0804852e} expr=(add[32] v3578[32] 4[32]) }
        bp      = { defs={} expr=v3579[32] }
        si      = { defs={} expr=v3580[32] }
        di      = { defs={} expr=v3581[32] }
        es      = { defs={} expr=v3582[16] }
        cs      = { defs={} expr=v3583[16] }
        ss      = { defs={} expr=v3584[16] }
        ds      = { defs={} expr=v3585[16] }
        fs      = { defs={} expr=v3586[16] }
        gs      = { defs={} expr=v3587[16] }
        cf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]))) (add[33] (uextend[33] 33[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]))) 1[33]))))))) }
        ?1      = { defs={} expr=v3589[1] }
        pf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32])))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32])))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32])))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32])))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32])))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32])))))))) }
        ?3      = { defs={} expr=v3591[1] }
        af      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]))) (add[33] (uextend[33] 33[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]))) 1[33]))))))) }
        ?5      = { defs={} expr=v3593[1] }
        zf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541} expr=(zerop[1] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) }
        sf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) }
        tf      = { defs={} expr=v3596[1] }
        if      = { defs={} expr=v3597[1] }
        df      = { defs={} expr=v3598[1] }
        of      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]))) (add[33] (uextend[33] 33[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]))) 1[33])))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]))) (add[33] (uextend[33] 33[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]))) 1[33]))))))) }
        iopl0   = { defs={} expr=v3600[1] }
        iopl1   = { defs={} expr=v3601[1] }
        nt      = { defs={} expr=v3602[1] }
        ?15     = { defs={} expr=v3603[1] }
        rf      = { defs={} expr=v3604[1] }
        vm      = { defs={} expr=v3605[1] }
        ac      = { defs={} expr=v3606[1] }
        vif     = { defs={} expr=v3607[1] }
        vip     = { defs={} expr=v3608[1] }
        id      = { defs={} expr=v3609[1] }
        ?22     = { defs={} expr=v3610[1] }
        ?23     = { defs={} expr=v3611[1] }
        ?24     = { defs={} expr=v3612[1] }
        ?25     = { defs={} expr=v3613[1] }
        ?26     = { defs={} expr=v3614[1] }
        ?27     = { defs={} expr=v3615[1] }
        ?28     = { defs={} expr=v3616[1] }
        ?29     = { defs={} expr=v3617[1] }
        ?30     = { defs={} expr=v3618[1] }
        ?31     = { defs={} expr=v3619[1] }
        ip      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541} expr=0x08048543[32] }
    memory:
        address = { defs={} expr=v3578[32] }
          value = { defs={} expr=v3620[32] }
          flags = { size=4; read-only }
    ip = defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541} expr=0x08048543[32]
0x8048543:sar    eax, 0x02
    registers:
        ax      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) }
        cx      = { defs={} expr=v3575[32] }
        dx      = { defs={0x0804852e,0x0804852f,0x0804853b} expr=(add[32] (add[32] v3620[32] 4506[32]) -224[32]) }
        bx      = { defs={0x0804852e,0x0804852f} expr=(add[32] v3620[32] 4506[32]) }
        sp      = { defs={0x0804852e} expr=(add[32] v3578[32] 4[32]) }
        bp      = { defs={} expr=v3579[32] }
        si      = { defs={} expr=v3580[32] }
        di      = { defs={} expr=v3581[32] }
        es      = { defs={} expr=v3582[16] }
        cs      = { defs={} expr=v3583[16] }
        ss      = { defs={} expr=v3584[16] }
        ds      = { defs={} expr=v3585[16] }
        fs      = { defs={} expr=v3586[16] }
        gs      = { defs={} expr=v3587[16] }
        cf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32])))) }
        ?1      = { defs={} expr=v3589[1] }
        pf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))))))))) }
        ?3      = { defs={} expr=v3591[1] }
        af      = { defs={0x08048543} expr=v3622[1] }
        ?5      = { defs={} expr=v3593[1] }
        zf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(zerop[1] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32])))) }
        sf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32])))) }
        tf      = { defs={} expr=v3596[1] }
        if      = { defs={} expr=v3597[1] }
        df      = { defs={} expr=v3598[1] }
        of      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]))) (add[33] (uextend[33] 33[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]))) 1[33])))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]))) (add[33] (uextend[33] 33[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]))) 1[33]))))))) }
        iopl0   = { defs={} expr=v3600[1] }
        iopl1   = { defs={} expr=v3601[1] }
        nt      = { defs={} expr=v3602[1] }
        ?15     = { defs={} expr=v3603[1] }
        rf      = { defs={} expr=v3604[1] }
        vm      = { defs={} expr=v3605[1] }
        ac      = { defs={} expr=v3606[1] }
        vif     = { defs={} expr=v3607[1] }
        vip     = { defs={} expr=v3608[1] }
        id      = { defs={} expr=v3609[1] }
        ?22     = { defs={} expr=v3610[1] }
        ?23     = { defs={} expr=v3611[1] }
        ?24     = { defs={} expr=v3612[1] }
        ?25     = { defs={} expr=v3613[1] }
        ?26     = { defs={} expr=v3614[1] }
        ?27     = { defs={} expr=v3615[1] }
        ?28     = { defs={} expr=v3616[1] }
        ?29     = { defs={} expr=v3617[1] }
        ?30     = { defs={} expr=v3618[1] }
        ?31     = { defs={} expr=v3619[1] }
        ip      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=0x08048546[32] }
    memory:
        address = { defs={} expr=v3578[32] }
          value = { defs={} expr=v3620[32] }
          flags = { size=4; read-only }
    ip = defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=0x08048546[32]
0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
    registers:
        ax      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) }
        cx      = { defs={} expr=v3575[32] }
        dx      = { defs={0x0804852e,0x0804852f,0x0804853b} expr=(add[32] (add[32] v3620[32] 4506[32]) -224[32]) }
        bx      = { defs={0x0804852e,0x0804852f} expr=(add[32] v3620[32] 4506[32]) }
        sp      = { defs={0x0804852e} expr=(add[32] v3578[32] 4[32]) }
        bp      = { defs={} expr=v3579[32] }
        si      = { defs={} expr=v3580[32] }
        di      = { defs={} expr=v3581[32] }
        es      = { defs={} expr=v3582[16] }
        cs      = { defs={} expr=v3583[16] }
        ss      = { defs={} expr=v3584[16] }
        ds      = { defs={} expr=v3585[16] }
        fs      = { defs={} expr=v3586[16] }
        gs      = { defs={} expr=v3587[16] }
        cf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32])))) }
        ?1      = { defs={} expr=v3589[1] }
        pf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))))))))) }
        ?3      = { defs={} expr=v3591[1] }
        af      = { defs={0x08048543} expr=v3622[1] }
        ?5      = { defs={} expr=v3593[1] }
        zf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(zerop[1] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32])))) }
        sf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32])))) }
        tf      = { defs={} expr=v3596[1] }
        if      = { defs={} expr=v3597[1] }
        df      = { defs={} expr=v3598[1] }
        of      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]))) (add[33] (uextend[33] 33[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]))) 1[33])))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]))) (add[33] (uextend[33] 33[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]))) 1[33]))))))) }
        iopl0   = { defs={} expr=v3600[1] }
        iopl1   = { defs={} expr=v3601[1] }
        nt      = { defs={} expr=v3602[1] }
        ?15     = { defs={} expr=v3603[1] }
        rf      = { defs={} expr=v3604[1] }
        vm      = { defs={} expr=v3605[1] }
        ac      = { defs={} expr=v3606[1] }
        vif     = { defs={} expr=v3607[1] }
        vip     = { defs={} expr=v3608[1] }
        id      = { defs={} expr=v3609[1] }
        ?22     = { defs={} expr=v3610[1] }
        ?23     = { defs={} expr=v3611[1] }
        ?24     = { defs={} expr=v3612[1] }
        ?25     = { defs={} expr=v3613[1] }
        ?26     = { defs={} expr=v3614[1] }
        ?27     = { defs={} expr=v3615[1] }
        ?28     = { defs={} expr=v3616[1] }
        ?29     = { defs={} expr=v3617[1] }
        ?30     = { defs={} expr=v3618[1] }
        ?31     = { defs={} expr=v3619[1] }
        ip      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=0x08048549[32] }
    memory:
        address = { defs={} expr=v3578[32] }
          value = { defs={} expr=v3620[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048546} expr=(add[32] v3579[32] -16[32]) }
          value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) }
          flags = { size=4 }
    ip = defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=0x08048549[32]
0x8048549:dec    eax
    registers:
        ax      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549} expr=(add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32]) }
        cx      = { defs={} expr=v3575[32] }
        dx      = { defs={0x0804852e,0x0804852f,0x0804853b} expr=(add[32] (add[32] v3620[32] 4506[32]) -224[32]) }
        bx      = { defs={0x0804852e,0x0804852f} expr=(add[32] v3620[32] 4506[32]) }
        sp      = { defs={0x0804852e} expr=(add[32] v3578[32] 4[32]) }
        bp      = { defs={} expr=v3579[32] }
        si      = { defs={} expr=v3580[32] }
        di      = { defs={} expr=v3581[32] }
        es      = { defs={} expr=v3582[16] }
        cs      = { defs={} expr=v3583[16] }
        ss      = { defs={} expr=v3584[16] }
        ds      = { defs={} expr=v3585[16] }
        fs      = { defs={} expr=v3586[16] }
        gs      = { defs={} expr=v3587[16] }
        cf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32])))) }
        ?1      = { defs={} expr=v3589[1] }
        pf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32]))))))) }
        ?3      = { defs={} expr=v3591[1] }
        af      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32])))) (bv-xor[33] 4294967295[33] (add[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32])))) 4294967295[33])))))) }
        ?5      = { defs={} expr=v3593[1] }
        zf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549} expr=(zerop[1] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32])) }
        sf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549} expr=(extract[1] 31[32] 32[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32])) }
        tf      = { defs={} expr=v3596[1] }
        if      = { defs={} expr=v3597[1] }
        df      = { defs={} expr=v3598[1] }
        of      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32])))) (bv-xor[33] 4294967295[33] (add[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32])))) 4294967295[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32])))) (bv-xor[33] 4294967295[33] (add[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32])))) 4294967295[33])))))) }
        iopl0   = { defs={} expr=v3600[1] }
        iopl1   = { defs={} expr=v3601[1] }
        nt      = { defs={} expr=v3602[1] }
        ?15     = { defs={} expr=v3603[1] }
        rf      = { defs={} expr=v3604[1] }
        vm      = { defs={} expr=v3605[1] }
        ac      = { defs={} expr=v3606[1] }
        vif     = { defs={} expr=v3607[1] }
        vip     = { defs={} expr=v3608[1] }
        id      = { defs={} expr=v3609[1] }
        ?22     = { defs={} expr=v3610[1] }
        ?23     = { defs={} expr=v3611[1] }
        ?24     = { defs={} expr=v3612[1] }
        ?25     = { defs={} expr=v3613[1] }
        ?26     = { defs={} expr=v3614[1] }
        ?27     = { defs={} expr=v3615[1] }
        ?28     = { defs={} expr=v3616[1] }
        ?29     = { defs={} expr=v3617[1] }
        ?30     = { defs={} expr=v3618[1] }
        ?31     = { defs={} expr=v3619[1] }
        ip      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546,0x08048549} expr=0x0804854a[32] }
    memory:
        address = { defs={} expr=v3578[32] }
          value = { defs={} expr=v3620[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048546} expr=(add[32] v3579[32] -16[32]) }
          value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) }
          flags = { size=4 }
    ip = defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546,0x08048549} expr=0x0804854a[32]
0x804854a:cmp    eax, 0xff<-0x01>
    registers:
        ax      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549} expr=(add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32]) }
        cx      = { defs={} expr=v3575[32] }
        dx      = { defs={0x0804852e,0x0804852f,0x0804853b} expr=(add[32] (add[32] v3620[32] 4506[32]) -224[32]) }
        bx      = { defs={0x0804852e,0x0804852f} expr=(add[32] v3620[32] 4506[32]) }
        sp      = { defs={0x0804852e} expr=(add[32] v3578[32] 4[32]) }
        bp      = { defs={} expr=v3579[32] }
        si      = { defs={} expr=v3580[32] }
        di      = { defs={} expr=v3581[32] }
        es      = { defs={} expr=v3582[16] }
        cs      = { defs={} expr=v3583[16] }
        ss      = { defs={} expr=v3584[16] }
        ds      = { defs={} expr=v3585[16] }
        fs      = { defs={} expr=v3586[16] }
        gs      = { defs={} expr=v3587[16] }
        cf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33])))))) }
        ?1      = { defs={} expr=v3589[1] }
        pf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))))))) }
        ?3      = { defs={} expr=v3591[1] }
        af      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33])))))) }
        ?5      = { defs={} expr=v3593[1] }
        zf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(zerop[1] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])) }
        sf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])) }
        tf      = { defs={} expr=v3596[1] }
        if      = { defs={} expr=v3597[1] }
        df      = { defs={} expr=v3598[1] }
        of      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33])))))) }
        iopl0   = { defs={} expr=v3600[1] }
        iopl1   = { defs={} expr=v3601[1] }
        nt      = { defs={} expr=v3602[1] }
        ?15     = { defs={} expr=v3603[1] }
        rf      = { defs={} expr=v3604[1] }
        vm      = { defs={} expr=v3605[1] }
        ac      = { defs={} expr=v3606[1] }
        vif     = { defs={} expr=v3607[1] }
        vip     = { defs={} expr=v3608[1] }
        id      = { defs={} expr=v3609[1] }
        ?22     = { defs={} expr=v3610[1] }
        ?23     = { defs={} expr=v3611[1] }
        ?24     = { defs={} expr=v3612[1] }
        ?25     = { defs={} expr=v3613[1] }
        ?26     = { defs={} expr=v3614[1] }
        ?27     = { defs={} expr=v3615[1] }
        ?28     = { defs={} expr=v3616[1] }
        ?29     = { defs={} expr=v3617[1] }
        ?30     = { defs={} expr=v3618[1] }
        ?31     = { defs={} expr=v3619[1] }
        ip      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546,0x08048549,0x0804854a} expr=0x0804854d[32] }
    memory:
        address = { defs={} expr=v3578[32] }
          value = { defs={} expr=v3620[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048546} expr=(add[32] v3579[32] -16[32]) }
          value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) }
          flags = { size=4 }
    ip = defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546,0x08048549,0x0804854a} expr=0x0804854d[32]
0x804854d:je     0x0804856b<<Insn>>
    registers:
        ax      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549} expr=(add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32]) }
        cx      = { defs={} expr=v3575[32] }
        dx      = { defs={0x0804852e,0x0804852f,0x0804853b} expr=(add[32] (add[32] v3620[32] 4506[32]) -224[32]) }
        bx      = { defs={0x0804852e,0x0804852f} expr=(add[32] v3620[32] 4506[32]) }
        sp      = { defs={0x0804852e} expr=(add[32] v3578[32] 4[32]) }
        bp      = { defs={} expr=v3579[32] }
        si      = { defs={} expr=v3580[32] }
        di      = { defs={} expr=v3581[32] }
        es      = { defs={} expr=v3582[16] }
        cs      = { defs={} expr=v3583[16] }
        ss      = { defs={} expr=v3584[16] }
        ds      = { defs={} expr=v3585[16] }
        fs      = { defs={} expr=v3586[16] }
        gs      = { defs={} expr=v3587[16] }
        cf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33])))))) }
        ?1      = { defs={} expr=v3589[1] }
        pf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))))))) }
        ?3      = { defs={} expr=v3591[1] }
        af      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33])))))) }
        ?5      = { defs={} expr=v3593[1] }
        zf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(zerop[1] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])) }
        sf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])) }
        tf      = { defs={} expr=v3596[1] }
        if      = { defs={} expr=v3597[1] }
        df      = { defs={} expr=v3598[1] }
        of      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33])))))) }
        iopl0   = { defs={} expr=v3600[1] }
        iopl1   = { defs={} expr=v3601[1] }
        nt      = { defs={} expr=v3602[1] }
        ?15     = { defs={} expr=v3603[1] }
        rf      = { defs={} expr=v3604[1] }
        vm      = { defs={} expr=v3605[1] }
        ac      = { defs={} expr=v3606[1] }
        vif     = { defs={} expr=v3607[1] }
        vip     = { defs={} expr=v3608[1] }
        id      = { defs={} expr=v3609[1] }
        ?22     = { defs={} expr=v3610[1] }
        ?23     = { defs={} expr=v3611[1] }
        ?24     = { defs={} expr=v3612[1] }
        ?25     = { defs={} expr=v3613[1] }
        ?26     = { defs={} expr=v3614[1] }
        ?27     = { defs={} expr=v3615[1] }
        ?28     = { defs={} expr=v3616[1] }
        ?29     = { defs={} expr=v3617[1] }
        ?30     = { defs={} expr=v3618[1] }
        ?31     = { defs={} expr=v3619[1] }
        ip      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546,0x08048549,0x0804854a,0x0804854d} expr=(ite[32] (zerop[1] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])) 0x0804856b[32] 0x0804854f[32]) }
    memory:
        address = { defs={} expr=v3578[32] }
          value = { defs={} expr=v3620[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048546} expr=(add[32] v3579[32] -16[32]) }
          value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) }
          flags = { size=4 }
    ip = defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546,0x08048549,0x0804854a,0x0804854d} expr=(ite[32] (zerop[1] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v3620[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])) 0x0804856b[32] 0x0804854f[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804854f:lea    esi, [edx + eax*0x04]
    registers:
        ax      = { defs={} expr=v3673[32] }
        cx      = { defs={} expr=v3674[32] }
        dx      = { defs={} expr=v3675[32] }
        bx      = { defs={} expr=v3676[32] }
        sp      = { defs={} expr=v3677[32] }
        bp      = { defs={} expr=v3678[32] }
        si      = { defs={0x0804854f} expr=(add[32] v3675[32] (extract[32] 0[32] 32[32] (umul[40] v3673[32] 4[8]))) }
        di      = { defs={} expr=v3680[32] }
        es      = { defs={} expr=v3681[16] }
        cs      = { defs={} expr=v3682[16] }
        ss      = { defs={} expr=v3683[16] }
        ds      = { defs={} expr=v3684[16] }
        fs      = { defs={} expr=v3685[16] }
        gs      = { defs={} expr=v3686[16] }
        cf      = { defs={} expr=v3687[1] }
        ?1      = { defs={} expr=v3688[1] }
        pf      = { defs={} expr=v3689[1] }
        ?3      = { defs={} expr=v3690[1] }
        af      = { defs={} expr=v3691[1] }
        ?5      = { defs={} expr=v3692[1] }
        zf      = { defs={} expr=v3693[1] }
        sf      = { defs={} expr=v3694[1] }
        tf      = { defs={} expr=v3695[1] }
        if      = { defs={} expr=v3696[1] }
        df      = { defs={} expr=v3697[1] }
        of      = { defs={} expr=v3698[1] }
        iopl0   = { defs={} expr=v3699[1] }
        iopl1   = { defs={} expr=v3700[1] }
        nt      = { defs={} expr=v3701[1] }
        ?15     = { defs={} expr=v3702[1] }
        rf      = { defs={} expr=v3703[1] }
        vm      = { defs={} expr=v3704[1] }
        ac      = { defs={} expr=v3705[1] }
        vif     = { defs={} expr=v3706[1] }
        vip     = { defs={} expr=v3707[1] }
        id      = { defs={} expr=v3708[1] }
        ?22     = { defs={} expr=v3709[1] }
        ?23     = { defs={} expr=v3710[1] }
        ?24     = { defs={} expr=v3711[1] }
        ?25     = { defs={} expr=v3712[1] }
        ?26     = { defs={} expr=v3713[1] }
        ?27     = { defs={} expr=v3714[1] }
        ?28     = { defs={} expr=v3715[1] }
        ?29     = { defs={} expr=v3716[1] }
        ?30     = { defs={} expr=v3717[1] }
        ?31     = { defs={} expr=v3718[1] }
        ip      = { defs={0x0804854f} expr=0x08048552[32] }
    memory:
        (empty)
    ip = defs={0x0804854f} expr=0x08048552[32]
0x8048552:xor    edi, edi
    registers:
        ax      = { defs={} expr=v3673[32] }
        cx      = { defs={} expr=v3674[32] }
        dx      = { defs={} expr=v3675[32] }
        bx      = { defs={} expr=v3676[32] }
        sp      = { defs={} expr=v3677[32] }
        bp      = { defs={} expr=v3678[32] }
        si      = { defs={0x0804854f} expr=(add[32] v3675[32] (extract[32] 0[32] 32[32] (umul[40] v3673[32] 4[8]))) }
        di      = { defs={0x08048552} expr=0[32] }
        es      = { defs={} expr=v3681[16] }
        cs      = { defs={} expr=v3682[16] }
        ss      = { defs={} expr=v3683[16] }
        ds      = { defs={} expr=v3684[16] }
        fs      = { defs={} expr=v3685[16] }
        gs      = { defs={} expr=v3686[16] }
        cf      = { defs={0x08048552} expr=0[1] }
        ?1      = { defs={} expr=v3688[1] }
        pf      = { defs={0x08048552} expr=1[1] }
        ?3      = { defs={} expr=v3690[1] }
        af      = { defs={0x08048552} expr=v3719[1] }
        ?5      = { defs={} expr=v3692[1] }
        zf      = { defs={0x08048552} expr=1[1] }
        sf      = { defs={0x08048552} expr=0[1] }
        tf      = { defs={} expr=v3695[1] }
        if      = { defs={} expr=v3696[1] }
        df      = { defs={} expr=v3697[1] }
        of      = { defs={0x08048552} expr=0[1] }
        iopl0   = { defs={} expr=v3699[1] }
        iopl1   = { defs={} expr=v3700[1] }
        nt      = { defs={} expr=v3701[1] }
        ?15     = { defs={} expr=v3702[1] }
        rf      = { defs={} expr=v3703[1] }
        vm      = { defs={} expr=v3704[1] }
        ac      = { defs={} expr=v3705[1] }
        vif     = { defs={} expr=v3706[1] }
        vip     = { defs={} expr=v3707[1] }
        id      = { defs={} expr=v3708[1] }
        ?22     = { defs={} expr=v3709[1] }
        ?23     = { defs={} expr=v3710[1] }
        ?24     = { defs={} expr=v3711[1] }
        ?25     = { defs={} expr=v3712[1] }
        ?26     = { defs={} expr=v3713[1] }
        ?27     = { defs={} expr=v3714[1] }
        ?28     = { defs={} expr=v3715[1] }
        ?29     = { defs={} expr=v3716[1] }
        ?30     = { defs={} expr=v3717[1] }
        ?31     = { defs={} expr=v3718[1] }
        ip      = { defs={0x0804854f,0x08048552} expr=0x08048554[32] }
    memory:
        (empty)
    ip = defs={0x0804854f,0x08048552} expr=0x08048554[32]
0x8048554:lea    esi, [esi + 0x00000000]
    registers:
        ax      = { defs={} expr=v3673[32] }
        cx      = { defs={} expr=v3674[32] }
        dx      = { defs={} expr=v3675[32] }
        bx      = { defs={} expr=v3676[32] }
        sp      = { defs={} expr=v3677[32] }
        bp      = { defs={} expr=v3678[32] }
        si      = { defs={0x0804854f,0x08048554} expr=(add[32] v3675[32] (extract[32] 0[32] 32[32] (umul[40] v3673[32] 4[8]))) }
        di      = { defs={0x08048552} expr=0[32] }
        es      = { defs={} expr=v3681[16] }
        cs      = { defs={} expr=v3682[16] }
        ss      = { defs={} expr=v3683[16] }
        ds      = { defs={} expr=v3684[16] }
        fs      = { defs={} expr=v3685[16] }
        gs      = { defs={} expr=v3686[16] }
        cf      = { defs={0x08048552} expr=0[1] }
        ?1      = { defs={} expr=v3688[1] }
        pf      = { defs={0x08048552} expr=1[1] }
        ?3      = { defs={} expr=v3690[1] }
        af      = { defs={0x08048552} expr=v3719[1] }
        ?5      = { defs={} expr=v3692[1] }
        zf      = { defs={0x08048552} expr=1[1] }
        sf      = { defs={0x08048552} expr=0[1] }
        tf      = { defs={} expr=v3695[1] }
        if      = { defs={} expr=v3696[1] }
        df      = { defs={} expr=v3697[1] }
        of      = { defs={0x08048552} expr=0[1] }
        iopl0   = { defs={} expr=v3699[1] }
        iopl1   = { defs={} expr=v3700[1] }
        nt      = { defs={} expr=v3701[1] }
        ?15     = { defs={} expr=v3702[1] }
        rf      = { defs={} expr=v3703[1] }
        vm      = { defs={} expr=v3704[1] }
        ac      = { defs={} expr=v3705[1] }
        vif     = { defs={} expr=v3706[1] }
        vip     = { defs={} expr=v3707[1] }
        id      = { defs={} expr=v3708[1] }
        ?22     = { defs={} expr=v3709[1] }
        ?23     = { defs={} expr=v3710[1] }
        ?24     = { defs={} expr=v3711[1] }
        ?25     = { defs={} expr=v3712[1] }
        ?26     = { defs={} expr=v3713[1] }
        ?27     = { defs={} expr=v3714[1] }
        ?28     = { defs={} expr=v3715[1] }
        ?29     = { defs={} expr=v3716[1] }
        ?30     = { defs={} expr=v3717[1] }
        ?31     = { defs={} expr=v3718[1] }
        ip      = { defs={0x0804854f,0x08048552,0x08048554} expr=0x0804855a[32] }
    memory:
        (empty)
    ip = defs={0x0804854f,0x08048552,0x08048554} expr=0x0804855a[32]
0x804855a:lea    edi, [edi + 0x00000000]
    registers:
        ax      = { defs={} expr=v3673[32] }
        cx      = { defs={} expr=v3674[32] }
        dx      = { defs={} expr=v3675[32] }
        bx      = { defs={} expr=v3676[32] }
        sp      = { defs={} expr=v3677[32] }
        bp      = { defs={} expr=v3678[32] }
        si      = { defs={0x0804854f,0x08048554} expr=(add[32] v3675[32] (extract[32] 0[32] 32[32] (umul[40] v3673[32] 4[8]))) }
        di      = { defs={0x08048552,0x0804855a} expr=0[32] }
        es      = { defs={} expr=v3681[16] }
        cs      = { defs={} expr=v3682[16] }
        ss      = { defs={} expr=v3683[16] }
        ds      = { defs={} expr=v3684[16] }
        fs      = { defs={} expr=v3685[16] }
        gs      = { defs={} expr=v3686[16] }
        cf      = { defs={0x08048552} expr=0[1] }
        ?1      = { defs={} expr=v3688[1] }
        pf      = { defs={0x08048552} expr=1[1] }
        ?3      = { defs={} expr=v3690[1] }
        af      = { defs={0x08048552} expr=v3719[1] }
        ?5      = { defs={} expr=v3692[1] }
        zf      = { defs={0x08048552} expr=1[1] }
        sf      = { defs={0x08048552} expr=0[1] }
        tf      = { defs={} expr=v3695[1] }
        if      = { defs={} expr=v3696[1] }
        df      = { defs={} expr=v3697[1] }
        of      = { defs={0x08048552} expr=0[1] }
        iopl0   = { defs={} expr=v3699[1] }
        iopl1   = { defs={} expr=v3700[1] }
        nt      = { defs={} expr=v3701[1] }
        ?15     = { defs={} expr=v3702[1] }
        rf      = { defs={} expr=v3703[1] }
        vm      = { defs={} expr=v3704[1] }
        ac      = { defs={} expr=v3705[1] }
        vif     = { defs={} expr=v3706[1] }
        vip     = { defs={} expr=v3707[1] }
        id      = { defs={} expr=v3708[1] }
        ?22     = { defs={} expr=v3709[1] }
        ?23     = { defs={} expr=v3710[1] }
        ?24     = { defs={} expr=v3711[1] }
        ?25     = { defs={} expr=v3712[1] }
        ?26     = { defs={} expr=v3713[1] }
        ?27     = { defs={} expr=v3714[1] }
        ?28     = { defs={} expr=v3715[1] }
        ?29     = { defs={} expr=v3716[1] }
        ?30     = { defs={} expr=v3717[1] }
        ?31     = { defs={} expr=v3718[1] }
        ip      = { defs={0x0804854f,0x08048552,0x08048554,0x0804855a} expr=0x08048560[32] }
    memory:
        (empty)
    ip = defs={0x0804854f,0x08048552,0x08048554,0x0804855a} expr=0x08048560[32]
0x8048560:call   DWORD PTR ds:[esi]
    registers:
        ax      = { defs={} expr=v3673[32] }
        cx      = { defs={} expr=v3674[32] }
        dx      = { defs={} expr=v3675[32] }
        bx      = { defs={} expr=v3676[32] }
        sp      = { defs={0x08048560} expr=(add[32] v3677[32] -4[32]) }
        bp      = { defs={} expr=v3678[32] }
        si      = { defs={0x0804854f,0x08048554} expr=(add[32] v3675[32] (extract[32] 0[32] 32[32] (umul[40] v3673[32] 4[8]))) }
        di      = { defs={0x08048552,0x0804855a} expr=0[32] }
        es      = { defs={} expr=v3681[16] }
        cs      = { defs={} expr=v3682[16] }
        ss      = { defs={} expr=v3683[16] }
        ds      = { defs={} expr=v3684[16] }
        fs      = { defs={} expr=v3685[16] }
        gs      = { defs={} expr=v3686[16] }
        cf      = { defs={0x08048552} expr=0[1] }
        ?1      = { defs={} expr=v3688[1] }
        pf      = { defs={0x08048552} expr=1[1] }
        ?3      = { defs={} expr=v3690[1] }
        af      = { defs={0x08048552} expr=v3719[1] }
        ?5      = { defs={} expr=v3692[1] }
        zf      = { defs={0x08048552} expr=1[1] }
        sf      = { defs={0x08048552} expr=0[1] }
        tf      = { defs={} expr=v3695[1] }
        if      = { defs={} expr=v3696[1] }
        df      = { defs={} expr=v3697[1] }
        of      = { defs={0x08048552} expr=0[1] }
        iopl0   = { defs={} expr=v3699[1] }
        iopl1   = { defs={} expr=v3700[1] }
        nt      = { defs={} expr=v3701[1] }
        ?15     = { defs={} expr=v3702[1] }
        rf      = { defs={} expr=v3703[1] }
        vm      = { defs={} expr=v3704[1] }
        ac      = { defs={} expr=v3705[1] }
        vif     = { defs={} expr=v3706[1] }
        vip     = { defs={} expr=v3707[1] }
        id      = { defs={} expr=v3708[1] }
        ?22     = { defs={} expr=v3709[1] }
        ?23     = { defs={} expr=v3710[1] }
        ?24     = { defs={} expr=v3711[1] }
        ?25     = { defs={} expr=v3712[1] }
        ?26     = { defs={} expr=v3713[1] }
        ?27     = { defs={} expr=v3714[1] }
        ?28     = { defs={} expr=v3715[1] }
        ?29     = { defs={} expr=v3716[1] }
        ?30     = { defs={} expr=v3717[1] }
        ?31     = { defs={} expr=v3718[1] }
        ip      = { defs={0x08048560} expr=v3720[32] }
    memory:
        address = { defs={0x08048560} expr=(add[32] v3677[32] -4[32]) }
          value = { defs={0x0804854f,0x08048552,0x08048554,0x0804855a,0x08048560} expr=0x08048562[32] }
          flags = { size=4 }
        address = { defs={0x0804854f,0x08048554} expr=(add[32] v3675[32] (extract[32] 0[32] 32[32] (umul[40] v3673[32] 4[8]))) }
          value = { defs={} expr=v3720[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048560} expr=v3720[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048562:inc    edi
    registers:
        ax      = { defs={} expr=v3769[32] }
        cx      = { defs={} expr=v3770[32] }
        dx      = { defs={} expr=v3771[32] }
        bx      = { defs={} expr=v3772[32] }
        sp      = { defs={} expr=v3773[32] }
        bp      = { defs={} expr=v3774[32] }
        si      = { defs={} expr=v3775[32] }
        di      = { defs={0x08048562} expr=(add[32] v3776[32] 1[32]) }
        es      = { defs={} expr=v3777[16] }
        cs      = { defs={} expr=v3778[16] }
        ss      = { defs={} expr=v3779[16] }
        ds      = { defs={} expr=v3780[16] }
        fs      = { defs={} expr=v3781[16] }
        gs      = { defs={} expr=v3782[16] }
        cf      = { defs={} expr=v3783[1] }
        ?1      = { defs={} expr=v3784[1] }
        pf      = { defs={0x08048562} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v3776[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v3776[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v3776[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v3776[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v3776[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v3776[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v3776[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v3776[32] 1[32]))))))) }
        ?3      = { defs={} expr=v3786[1] }
        af      = { defs={0x08048562} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3776[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v3776[32]) 1[33]))))) }
        ?5      = { defs={} expr=v3788[1] }
        zf      = { defs={0x08048562} expr=(zerop[1] (add[32] v3776[32] 1[32])) }
        sf      = { defs={0x08048562} expr=(extract[1] 31[32] 32[32] (add[32] v3776[32] 1[32])) }
        tf      = { defs={} expr=v3791[1] }
        if      = { defs={} expr=v3792[1] }
        df      = { defs={} expr=v3793[1] }
        of      = { defs={0x08048562} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3776[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v3776[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3776[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v3776[32]) 1[33])))))) }
        iopl0   = { defs={} expr=v3795[1] }
        iopl1   = { defs={} expr=v3796[1] }
        nt      = { defs={} expr=v3797[1] }
        ?15     = { defs={} expr=v3798[1] }
        rf      = { defs={} expr=v3799[1] }
        vm      = { defs={} expr=v3800[1] }
        ac      = { defs={} expr=v3801[1] }
        vif     = { defs={} expr=v3802[1] }
        vip     = { defs={} expr=v3803[1] }
        id      = { defs={} expr=v3804[1] }
        ?22     = { defs={} expr=v3805[1] }
        ?23     = { defs={} expr=v3806[1] }
        ?24     = { defs={} expr=v3807[1] }
        ?25     = { defs={} expr=v3808[1] }
        ?26     = { defs={} expr=v3809[1] }
        ?27     = { defs={} expr=v3810[1] }
        ?28     = { defs={} expr=v3811[1] }
        ?29     = { defs={} expr=v3812[1] }
        ?30     = { defs={} expr=v3813[1] }
        ?31     = { defs={} expr=v3814[1] }
        ip      = { defs={0x08048562} expr=0x08048563[32] }
    memory:
        (empty)
    ip = defs={0x08048562} expr=0x08048563[32]
0x8048563:sub    esi, 0x04
    registers:
        ax      = { defs={} expr=v3769[32] }
        cx      = { defs={} expr=v3770[32] }
        dx      = { defs={} expr=v3771[32] }
        bx      = { defs={} expr=v3772[32] }
        sp      = { defs={} expr=v3773[32] }
        bp      = { defs={} expr=v3774[32] }
        si      = { defs={0x08048563} expr=(add[32] v3775[32] -4[32]) }
        di      = { defs={0x08048562} expr=(add[32] v3776[32] 1[32]) }
        es      = { defs={} expr=v3777[16] }
        cs      = { defs={} expr=v3778[16] }
        ss      = { defs={} expr=v3779[16] }
        ds      = { defs={} expr=v3780[16] }
        fs      = { defs={} expr=v3781[16] }
        gs      = { defs={} expr=v3782[16] }
        cf      = { defs={0x08048563} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3775[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v3775[32]) 4294967292[33])))))) }
        ?1      = { defs={} expr=v3784[1] }
        pf      = { defs={0x08048563} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v3775[32] -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v3775[32] -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v3775[32] -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v3775[32] -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v3775[32] -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v3775[32] -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v3775[32] -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v3775[32] -4[32]))))))) }
        ?3      = { defs={} expr=v3786[1] }
        af      = { defs={0x08048563} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3775[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v3775[32]) 4294967292[33])))))) }
        ?5      = { defs={} expr=v3788[1] }
        zf      = { defs={0x08048563} expr=(zerop[1] (add[32] v3775[32] -4[32])) }
        sf      = { defs={0x08048563} expr=(extract[1] 31[32] 32[32] (add[32] v3775[32] -4[32])) }
        tf      = { defs={} expr=v3791[1] }
        if      = { defs={} expr=v3792[1] }
        df      = { defs={} expr=v3793[1] }
        of      = { defs={0x08048563} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3775[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v3775[32]) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3775[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v3775[32]) 4294967292[33])))))) }
        iopl0   = { defs={} expr=v3795[1] }
        iopl1   = { defs={} expr=v3796[1] }
        nt      = { defs={} expr=v3797[1] }
        ?15     = { defs={} expr=v3798[1] }
        rf      = { defs={} expr=v3799[1] }
        vm      = { defs={} expr=v3800[1] }
        ac      = { defs={} expr=v3801[1] }
        vif     = { defs={} expr=v3802[1] }
        vip     = { defs={} expr=v3803[1] }
        id      = { defs={} expr=v3804[1] }
        ?22     = { defs={} expr=v3805[1] }
        ?23     = { defs={} expr=v3806[1] }
        ?24     = { defs={} expr=v3807[1] }
        ?25     = { defs={} expr=v3808[1] }
        ?26     = { defs={} expr=v3809[1] }
        ?27     = { defs={} expr=v3810[1] }
        ?28     = { defs={} expr=v3811[1] }
        ?29     = { defs={} expr=v3812[1] }
        ?30     = { defs={} expr=v3813[1] }
        ?31     = { defs={} expr=v3814[1] }
        ip      = { defs={0x08048562,0x08048563} expr=0x08048566[32] }
    memory:
        (empty)
    ip = defs={0x08048562,0x08048563} expr=0x08048566[32]
0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi
    registers:
        ax      = { defs={} expr=v3769[32] }
        cx      = { defs={} expr=v3770[32] }
        dx      = { defs={} expr=v3771[32] }
        bx      = { defs={} expr=v3772[32] }
        sp      = { defs={} expr=v3773[32] }
        bp      = { defs={} expr=v3774[32] }
        si      = { defs={0x08048563} expr=(add[32] v3775[32] -4[32]) }
        di      = { defs={0x08048562} expr=(add[32] v3776[32] 1[32]) }
        es      = { defs={} expr=v3777[16] }
        cs      = { defs={} expr=v3778[16] }
        ss      = { defs={} expr=v3779[16] }
        ds      = { defs={} expr=v3780[16] }
        fs      = { defs={} expr=v3781[16] }
        gs      = { defs={} expr=v3782[16] }
        cf      = { defs={0x08048562,0x08048566} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3815[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v3776[32] 1[32]))) (add[33] (uextend[33] 33[32] v3815[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v3776[32] 1[32]))) 1[33]))))))) }
        ?1      = { defs={} expr=v3784[1] }
        pf      = { defs={0x08048562,0x08048566} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v3815[32] (add[32] (invert[32] (add[32] v3776[32] 1[32])) 1[32])))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v3815[32] (add[32] (invert[32] (add[32] v3776[32] 1[32])) 1[32]))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v3815[32] (add[32] (invert[32] (add[32] v3776[32] 1[32])) 1[32])))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v3815[32] (add[32] (invert[32] (add[32] v3776[32] 1[32])) 1[32])))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v3815[32] (add[32] (invert[32] (add[32] v3776[32] 1[32])) 1[32])))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v3815[32] (add[32] (invert[32] (add[32] v3776[32] 1[32])) 1[32]))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v3815[32] (add[32] (invert[32] (add[32] v3776[32] 1[32])) 1[32])))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v3815[32] (add[32] (invert[32] (add[32] v3776[32] 1[32])) 1[32])))))))) }
        ?3      = { defs={} expr=v3786[1] }
        af      = { defs={0x08048562,0x08048566} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3815[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v3776[32] 1[32]))) (add[33] (uextend[33] 33[32] v3815[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v3776[32] 1[32]))) 1[33]))))))) }
        ?5      = { defs={} expr=v3788[1] }
        zf      = { defs={0x08048562,0x08048566} expr=(zerop[1] (add[32] v3815[32] (add[32] (invert[32] (add[32] v3776[32] 1[32])) 1[32]))) }
        sf      = { defs={0x08048562,0x08048566} expr=(extract[1] 31[32] 32[32] (add[32] v3815[32] (add[32] (invert[32] (add[32] v3776[32] 1[32])) 1[32]))) }
        tf      = { defs={} expr=v3791[1] }
        if      = { defs={} expr=v3792[1] }
        df      = { defs={} expr=v3793[1] }
        of      = { defs={0x08048562,0x08048566} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3815[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v3776[32] 1[32]))) (add[33] (uextend[33] 33[32] v3815[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v3776[32] 1[32]))) 1[33])))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3815[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v3776[32] 1[32]))) (add[33] (uextend[33] 33[32] v3815[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v3776[32] 1[32]))) 1[33]))))))) }
        iopl0   = { defs={} expr=v3795[1] }
        iopl1   = { defs={} expr=v3796[1] }
        nt      = { defs={} expr=v3797[1] }
        ?15     = { defs={} expr=v3798[1] }
        rf      = { defs={} expr=v3799[1] }
        vm      = { defs={} expr=v3800[1] }
        ac      = { defs={} expr=v3801[1] }
        vif     = { defs={} expr=v3802[1] }
        vip     = { defs={} expr=v3803[1] }
        id      = { defs={} expr=v3804[1] }
        ?22     = { defs={} expr=v3805[1] }
        ?23     = { defs={} expr=v3806[1] }
        ?24     = { defs={} expr=v3807[1] }
        ?25     = { defs={} expr=v3808[1] }
        ?26     = { defs={} expr=v3809[1] }
        ?27     = { defs={} expr=v3810[1] }
        ?28     = { defs={} expr=v3811[1] }
        ?29     = { defs={} expr=v3812[1] }
        ?30     = { defs={} expr=v3813[1] }
        ?31     = { defs={} expr=v3814[1] }
        ip      = { defs={0x08048562,0x08048563,0x08048566} expr=0x08048569[32] }
    memory:
        address = { defs={0x08048566} expr=(add[32] v3774[32] -16[32]) }
          value = { defs={} expr=v3815[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048562,0x08048563,0x08048566} expr=0x08048569[32]
0x8048569:jne    0x08048560<<Insn>>
    registers:
        ax      = { defs={} expr=v3769[32] }
        cx      = { defs={} expr=v3770[32] }
        dx      = { defs={} expr=v3771[32] }
        bx      = { defs={} expr=v3772[32] }
        sp      = { defs={} expr=v3773[32] }
        bp      = { defs={} expr=v3774[32] }
        si      = { defs={0x08048563} expr=(add[32] v3775[32] -4[32]) }
        di      = { defs={0x08048562} expr=(add[32] v3776[32] 1[32]) }
        es      = { defs={} expr=v3777[16] }
        cs      = { defs={} expr=v3778[16] }
        ss      = { defs={} expr=v3779[16] }
        ds      = { defs={} expr=v3780[16] }
        fs      = { defs={} expr=v3781[16] }
        gs      = { defs={} expr=v3782[16] }
        cf      = { defs={0x08048562,0x08048566} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3815[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v3776[32] 1[32]))) (add[33] (uextend[33] 33[32] v3815[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v3776[32] 1[32]))) 1[33]))))))) }
        ?1      = { defs={} expr=v3784[1] }
        pf      = { defs={0x08048562,0x08048566} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v3815[32] (add[32] (invert[32] (add[32] v3776[32] 1[32])) 1[32])))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v3815[32] (add[32] (invert[32] (add[32] v3776[32] 1[32])) 1[32]))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v3815[32] (add[32] (invert[32] (add[32] v3776[32] 1[32])) 1[32])))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v3815[32] (add[32] (invert[32] (add[32] v3776[32] 1[32])) 1[32])))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v3815[32] (add[32] (invert[32] (add[32] v3776[32] 1[32])) 1[32])))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v3815[32] (add[32] (invert[32] (add[32] v3776[32] 1[32])) 1[32]))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v3815[32] (add[32] (invert[32] (add[32] v3776[32] 1[32])) 1[32])))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v3815[32] (add[32] (invert[32] (add[32] v3776[32] 1[32])) 1[32])))))))) }
        ?3      = { defs={} expr=v3786[1] }
        af      = { defs={0x08048562,0x08048566} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3815[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v3776[32] 1[32]))) (add[33] (uextend[33] 33[32] v3815[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v3776[32] 1[32]))) 1[33]))))))) }
        ?5      = { defs={} expr=v3788[1] }
        zf      = { defs={0x08048562,0x08048566} expr=(zerop[1] (add[32] v3815[32] (add[32] (invert[32] (add[32] v3776[32] 1[32])) 1[32]))) }
        sf      = { defs={0x08048562,0x08048566} expr=(extract[1] 31[32] 32[32] (add[32] v3815[32] (add[32] (invert[32] (add[32] v3776[32] 1[32])) 1[32]))) }
        tf      = { defs={} expr=v3791[1] }
        if      = { defs={} expr=v3792[1] }
        df      = { defs={} expr=v3793[1] }
        of      = { defs={0x08048562,0x08048566} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3815[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v3776[32] 1[32]))) (add[33] (uextend[33] 33[32] v3815[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v3776[32] 1[32]))) 1[33])))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3815[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v3776[32] 1[32]))) (add[33] (uextend[33] 33[32] v3815[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v3776[32] 1[32]))) 1[33]))))))) }
        iopl0   = { defs={} expr=v3795[1] }
        iopl1   = { defs={} expr=v3796[1] }
        nt      = { defs={} expr=v3797[1] }
        ?15     = { defs={} expr=v3798[1] }
        rf      = { defs={} expr=v3799[1] }
        vm      = { defs={} expr=v3800[1] }
        ac      = { defs={} expr=v3801[1] }
        vif     = { defs={} expr=v3802[1] }
        vip     = { defs={} expr=v3803[1] }
        id      = { defs={} expr=v3804[1] }
        ?22     = { defs={} expr=v3805[1] }
        ?23     = { defs={} expr=v3806[1] }
        ?24     = { defs={} expr=v3807[1] }
        ?25     = { defs={} expr=v3808[1] }
        ?26     = { defs={} expr=v3809[1] }
        ?27     = { defs={} expr=v3810[1] }
        ?28     = { defs={} expr=v3811[1] }
        ?29     = { defs={} expr=v3812[1] }
        ?30     = { defs={} expr=v3813[1] }
        ?31     = { defs={} expr=v3814[1] }
        ip      = { defs={0x08048562,0x08048563,0x08048566,0x08048569} expr=(ite[32] (invert[1] (zerop[1] (add[32] v3815[32] (add[32] (invert[32] (add[32] v3776[32] 1[32])) 1[32])))) 0x08048560[32] 0x0804856b[32]) }
    memory:
        address = { defs={0x08048566} expr=(add[32] v3774[32] -16[32]) }
          value = { defs={} expr=v3815[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048562,0x08048563,0x08048566,0x08048569} expr=(ite[32] (invert[1] (zerop[1] (add[32] v3815[32] (add[32] (invert[32] (add[32] v3776[32] 1[32])) 1[32])))) 0x08048560[32] 0x0804856b[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804856b:call   0x080485b0<_fini>
    registers:
        ax      = { defs={} expr=v3864[32] }
        cx      = { defs={} expr=v3865[32] }
        dx      = { defs={} expr=v3866[32] }
        bx      = { defs={} expr=v3867[32] }
        sp      = { defs={0x0804856b} expr=(add[32] v3868[32] -4[32]) }
        bp      = { defs={} expr=v3869[32] }
        si      = { defs={} expr=v3870[32] }
        di      = { defs={} expr=v3871[32] }
        es      = { defs={} expr=v3872[16] }
        cs      = { defs={} expr=v3873[16] }
        ss      = { defs={} expr=v3874[16] }
        ds      = { defs={} expr=v3875[16] }
        fs      = { defs={} expr=v3876[16] }
        gs      = { defs={} expr=v3877[16] }
        cf      = { defs={} expr=v3878[1] }
        ?1      = { defs={} expr=v3879[1] }
        pf      = { defs={} expr=v3880[1] }
        ?3      = { defs={} expr=v3881[1] }
        af      = { defs={} expr=v3882[1] }
        ?5      = { defs={} expr=v3883[1] }
        zf      = { defs={} expr=v3884[1] }
        sf      = { defs={} expr=v3885[1] }
        tf      = { defs={} expr=v3886[1] }
        if      = { defs={} expr=v3887[1] }
        df      = { defs={} expr=v3888[1] }
        of      = { defs={} expr=v3889[1] }
        iopl0   = { defs={} expr=v3890[1] }
        iopl1   = { defs={} expr=v3891[1] }
        nt      = { defs={} expr=v3892[1] }
        ?15     = { defs={} expr=v3893[1] }
        rf      = { defs={} expr=v3894[1] }
        vm      = { defs={} expr=v3895[1] }
        ac      = { defs={} expr=v3896[1] }
        vif     = { defs={} expr=v3897[1] }
        vip     = { defs={} expr=v3898[1] }
        id      = { defs={} expr=v3899[1] }
        ?22     = { defs={} expr=v3900[1] }
        ?23     = { defs={} expr=v3901[1] }
        ?24     = { defs={} expr=v3902[1] }
        ?25     = { defs={} expr=v3903[1] }
        ?26     = { defs={} expr=v3904[1] }
        ?27     = { defs={} expr=v3905[1] }
        ?28     = { defs={} expr=v3906[1] }
        ?29     = { defs={} expr=v3907[1] }
        ?30     = { defs={} expr=v3908[1] }
        ?31     = { defs={} expr=v3909[1] }
        ip      = { defs={0x0804856b} expr=0x080485b0[32] }
    memory:
        address = { defs={0x0804856b} expr=(add[32] v3868[32] -4[32]) }
          value = { defs={0x0804856b} expr=0x08048570[32] }
          flags = { size=4 }
    ip = defs={0x0804856b} expr=0x080485b0[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048570:add    esp, 0x0c
    registers:
        ax      = { defs={} expr=v3958[32] }
        cx      = { defs={} expr=v3959[32] }
        dx      = { defs={} expr=v3960[32] }
        bx      = { defs={} expr=v3961[32] }
        sp      = { defs={0x08048570} expr=(add[32] v3962[32] 12[32]) }
        bp      = { defs={} expr=v3963[32] }
        si      = { defs={} expr=v3964[32] }
        di      = { defs={} expr=v3965[32] }
        es      = { defs={} expr=v3966[16] }
        cs      = { defs={} expr=v3967[16] }
        ss      = { defs={} expr=v3968[16] }
        ds      = { defs={} expr=v3969[16] }
        fs      = { defs={} expr=v3970[16] }
        gs      = { defs={} expr=v3971[16] }
        cf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3962[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3962[32]) 12[33]))))) }
        ?1      = { defs={} expr=v3973[1] }
        pf      = { defs={0x08048570} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32]))))))) }
        ?3      = { defs={} expr=v3975[1] }
        af      = { defs={0x08048570} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3962[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3962[32]) 12[33]))))) }
        ?5      = { defs={} expr=v3977[1] }
        zf      = { defs={0x08048570} expr=(zerop[1] (add[32] v3962[32] 12[32])) }
        sf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (add[32] v3962[32] 12[32])) }
        tf      = { defs={} expr=v3980[1] }
        if      = { defs={} expr=v3981[1] }
        df      = { defs={} expr=v3982[1] }
        of      = { defs={0x08048570} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3962[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3962[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3962[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3962[32]) 12[33])))))) }
        iopl0   = { defs={} expr=v3984[1] }
        iopl1   = { defs={} expr=v3985[1] }
        nt      = { defs={} expr=v3986[1] }
        ?15     = { defs={} expr=v3987[1] }
        rf      = { defs={} expr=v3988[1] }
        vm      = { defs={} expr=v3989[1] }
        ac      = { defs={} expr=v3990[1] }
        vif     = { defs={} expr=v3991[1] }
        vip     = { defs={} expr=v3992[1] }
        id      = { defs={} expr=v3993[1] }
        ?22     = { defs={} expr=v3994[1] }
        ?23     = { defs={} expr=v3995[1] }
        ?24     = { defs={} expr=v3996[1] }
        ?25     = { defs={} expr=v3997[1] }
        ?26     = { defs={} expr=v3998[1] }
        ?27     = { defs={} expr=v3999[1] }
        ?28     = { defs={} expr=v4000[1] }
        ?29     = { defs={} expr=v4001[1] }
        ?30     = { defs={} expr=v4002[1] }
        ?31     = { defs={} expr=v4003[1] }
        ip      = { defs={0x08048570} expr=0x08048573[32] }
    memory:
        (empty)
    ip = defs={0x08048570} expr=0x08048573[32]
0x8048573:pop    ebx
    registers:
        ax      = { defs={} expr=v3958[32] }
        cx      = { defs={} expr=v3959[32] }
        dx      = { defs={} expr=v3960[32] }
        bx      = { defs={0x08048573} expr=v4004[32] }
        sp      = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] v3962[32] 12[32]) 4[32]) }
        bp      = { defs={} expr=v3963[32] }
        si      = { defs={} expr=v3964[32] }
        di      = { defs={} expr=v3965[32] }
        es      = { defs={} expr=v3966[16] }
        cs      = { defs={} expr=v3967[16] }
        ss      = { defs={} expr=v3968[16] }
        ds      = { defs={} expr=v3969[16] }
        fs      = { defs={} expr=v3970[16] }
        gs      = { defs={} expr=v3971[16] }
        cf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3962[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3962[32]) 12[33]))))) }
        ?1      = { defs={} expr=v3973[1] }
        pf      = { defs={0x08048570} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32]))))))) }
        ?3      = { defs={} expr=v3975[1] }
        af      = { defs={0x08048570} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3962[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3962[32]) 12[33]))))) }
        ?5      = { defs={} expr=v3977[1] }
        zf      = { defs={0x08048570} expr=(zerop[1] (add[32] v3962[32] 12[32])) }
        sf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (add[32] v3962[32] 12[32])) }
        tf      = { defs={} expr=v3980[1] }
        if      = { defs={} expr=v3981[1] }
        df      = { defs={} expr=v3982[1] }
        of      = { defs={0x08048570} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3962[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3962[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3962[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3962[32]) 12[33])))))) }
        iopl0   = { defs={} expr=v3984[1] }
        iopl1   = { defs={} expr=v3985[1] }
        nt      = { defs={} expr=v3986[1] }
        ?15     = { defs={} expr=v3987[1] }
        rf      = { defs={} expr=v3988[1] }
        vm      = { defs={} expr=v3989[1] }
        ac      = { defs={} expr=v3990[1] }
        vif     = { defs={} expr=v3991[1] }
        vip     = { defs={} expr=v3992[1] }
        id      = { defs={} expr=v3993[1] }
        ?22     = { defs={} expr=v3994[1] }
        ?23     = { defs={} expr=v3995[1] }
        ?24     = { defs={} expr=v3996[1] }
        ?25     = { defs={} expr=v3997[1] }
        ?26     = { defs={} expr=v3998[1] }
        ?27     = { defs={} expr=v3999[1] }
        ?28     = { defs={} expr=v4000[1] }
        ?29     = { defs={} expr=v4001[1] }
        ?30     = { defs={} expr=v4002[1] }
        ?31     = { defs={} expr=v4003[1] }
        ip      = { defs={0x08048570,0x08048573} expr=0x08048574[32] }
    memory:
        address = { defs={0x08048570} expr=(add[32] v3962[32] 12[32]) }
          value = { defs={} expr=v4004[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048570,0x08048573} expr=0x08048574[32]
0x8048574:pop    esi
    registers:
        ax      = { defs={} expr=v3958[32] }
        cx      = { defs={} expr=v3959[32] }
        dx      = { defs={} expr=v3960[32] }
        bx      = { defs={0x08048573} expr=v4004[32] }
        sp      = { defs={0x08048570,0x08048573,0x08048574} expr=(add[32] (add[32] (add[32] v3962[32] 12[32]) 4[32]) 4[32]) }
        bp      = { defs={} expr=v3963[32] }
        si      = { defs={0x08048574} expr=v4005[32] }
        di      = { defs={} expr=v3965[32] }
        es      = { defs={} expr=v3966[16] }
        cs      = { defs={} expr=v3967[16] }
        ss      = { defs={} expr=v3968[16] }
        ds      = { defs={} expr=v3969[16] }
        fs      = { defs={} expr=v3970[16] }
        gs      = { defs={} expr=v3971[16] }
        cf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3962[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3962[32]) 12[33]))))) }
        ?1      = { defs={} expr=v3973[1] }
        pf      = { defs={0x08048570} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32]))))))) }
        ?3      = { defs={} expr=v3975[1] }
        af      = { defs={0x08048570} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3962[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3962[32]) 12[33]))))) }
        ?5      = { defs={} expr=v3977[1] }
        zf      = { defs={0x08048570} expr=(zerop[1] (add[32] v3962[32] 12[32])) }
        sf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (add[32] v3962[32] 12[32])) }
        tf      = { defs={} expr=v3980[1] }
        if      = { defs={} expr=v3981[1] }
        df      = { defs={} expr=v3982[1] }
        of      = { defs={0x08048570} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3962[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3962[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3962[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3962[32]) 12[33])))))) }
        iopl0   = { defs={} expr=v3984[1] }
        iopl1   = { defs={} expr=v3985[1] }
        nt      = { defs={} expr=v3986[1] }
        ?15     = { defs={} expr=v3987[1] }
        rf      = { defs={} expr=v3988[1] }
        vm      = { defs={} expr=v3989[1] }
        ac      = { defs={} expr=v3990[1] }
        vif     = { defs={} expr=v3991[1] }
        vip     = { defs={} expr=v3992[1] }
        id      = { defs={} expr=v3993[1] }
        ?22     = { defs={} expr=v3994[1] }
        ?23     = { defs={} expr=v3995[1] }
        ?24     = { defs={} expr=v3996[1] }
        ?25     = { defs={} expr=v3997[1] }
        ?26     = { defs={} expr=v3998[1] }
        ?27     = { defs={} expr=v3999[1] }
        ?28     = { defs={} expr=v4000[1] }
        ?29     = { defs={} expr=v4001[1] }
        ?30     = { defs={} expr=v4002[1] }
        ?31     = { defs={} expr=v4003[1] }
        ip      = { defs={0x08048570,0x08048573,0x08048574} expr=0x08048575[32] }
    memory:
        address = { defs={0x08048570} expr=(add[32] v3962[32] 12[32]) }
          value = { defs={} expr=v4004[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] v3962[32] 12[32]) 4[32]) }
          value = { defs={} expr=v4005[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048570,0x08048573,0x08048574} expr=0x08048575[32]
0x8048575:pop    edi
    registers:
        ax      = { defs={} expr=v3958[32] }
        cx      = { defs={} expr=v3959[32] }
        dx      = { defs={} expr=v3960[32] }
        bx      = { defs={0x08048573} expr=v4004[32] }
        sp      = { defs={0x08048570,0x08048573,0x08048574,0x08048575} expr=(add[32] (add[32] (add[32] (add[32] v3962[32] 12[32]) 4[32]) 4[32]) 4[32]) }
        bp      = { defs={} expr=v3963[32] }
        si      = { defs={0x08048574} expr=v4005[32] }
        di      = { defs={0x08048575} expr=v4006[32] }
        es      = { defs={} expr=v3966[16] }
        cs      = { defs={} expr=v3967[16] }
        ss      = { defs={} expr=v3968[16] }
        ds      = { defs={} expr=v3969[16] }
        fs      = { defs={} expr=v3970[16] }
        gs      = { defs={} expr=v3971[16] }
        cf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3962[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3962[32]) 12[33]))))) }
        ?1      = { defs={} expr=v3973[1] }
        pf      = { defs={0x08048570} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32]))))))) }
        ?3      = { defs={} expr=v3975[1] }
        af      = { defs={0x08048570} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3962[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3962[32]) 12[33]))))) }
        ?5      = { defs={} expr=v3977[1] }
        zf      = { defs={0x08048570} expr=(zerop[1] (add[32] v3962[32] 12[32])) }
        sf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (add[32] v3962[32] 12[32])) }
        tf      = { defs={} expr=v3980[1] }
        if      = { defs={} expr=v3981[1] }
        df      = { defs={} expr=v3982[1] }
        of      = { defs={0x08048570} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3962[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3962[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3962[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3962[32]) 12[33])))))) }
        iopl0   = { defs={} expr=v3984[1] }
        iopl1   = { defs={} expr=v3985[1] }
        nt      = { defs={} expr=v3986[1] }
        ?15     = { defs={} expr=v3987[1] }
        rf      = { defs={} expr=v3988[1] }
        vm      = { defs={} expr=v3989[1] }
        ac      = { defs={} expr=v3990[1] }
        vif     = { defs={} expr=v3991[1] }
        vip     = { defs={} expr=v3992[1] }
        id      = { defs={} expr=v3993[1] }
        ?22     = { defs={} expr=v3994[1] }
        ?23     = { defs={} expr=v3995[1] }
        ?24     = { defs={} expr=v3996[1] }
        ?25     = { defs={} expr=v3997[1] }
        ?26     = { defs={} expr=v3998[1] }
        ?27     = { defs={} expr=v3999[1] }
        ?28     = { defs={} expr=v4000[1] }
        ?29     = { defs={} expr=v4001[1] }
        ?30     = { defs={} expr=v4002[1] }
        ?31     = { defs={} expr=v4003[1] }
        ip      = { defs={0x08048570,0x08048573,0x08048574,0x08048575} expr=0x08048576[32] }
    memory:
        address = { defs={0x08048570} expr=(add[32] v3962[32] 12[32]) }
          value = { defs={} expr=v4004[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] v3962[32] 12[32]) 4[32]) }
          value = { defs={} expr=v4005[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048570,0x08048573,0x08048574} expr=(add[32] (add[32] (add[32] v3962[32] 12[32]) 4[32]) 4[32]) }
          value = { defs={} expr=v4006[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048570,0x08048573,0x08048574,0x08048575} expr=0x08048576[32]
0x8048576:pop    ebp
    registers:
        ax      = { defs={} expr=v3958[32] }
        cx      = { defs={} expr=v3959[32] }
        dx      = { defs={} expr=v3960[32] }
        bx      = { defs={0x08048573} expr=v4004[32] }
        sp      = { defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v3962[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) }
        bp      = { defs={0x08048576} expr=v4007[32] }
        si      = { defs={0x08048574} expr=v4005[32] }
        di      = { defs={0x08048575} expr=v4006[32] }
        es      = { defs={} expr=v3966[16] }
        cs      = { defs={} expr=v3967[16] }
        ss      = { defs={} expr=v3968[16] }
        ds      = { defs={} expr=v3969[16] }
        fs      = { defs={} expr=v3970[16] }
        gs      = { defs={} expr=v3971[16] }
        cf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3962[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3962[32]) 12[33]))))) }
        ?1      = { defs={} expr=v3973[1] }
        pf      = { defs={0x08048570} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32]))))))) }
        ?3      = { defs={} expr=v3975[1] }
        af      = { defs={0x08048570} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3962[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3962[32]) 12[33]))))) }
        ?5      = { defs={} expr=v3977[1] }
        zf      = { defs={0x08048570} expr=(zerop[1] (add[32] v3962[32] 12[32])) }
        sf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (add[32] v3962[32] 12[32])) }
        tf      = { defs={} expr=v3980[1] }
        if      = { defs={} expr=v3981[1] }
        df      = { defs={} expr=v3982[1] }
        of      = { defs={0x08048570} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3962[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3962[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3962[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3962[32]) 12[33])))))) }
        iopl0   = { defs={} expr=v3984[1] }
        iopl1   = { defs={} expr=v3985[1] }
        nt      = { defs={} expr=v3986[1] }
        ?15     = { defs={} expr=v3987[1] }
        rf      = { defs={} expr=v3988[1] }
        vm      = { defs={} expr=v3989[1] }
        ac      = { defs={} expr=v3990[1] }
        vif     = { defs={} expr=v3991[1] }
        vip     = { defs={} expr=v3992[1] }
        id      = { defs={} expr=v3993[1] }
        ?22     = { defs={} expr=v3994[1] }
        ?23     = { defs={} expr=v3995[1] }
        ?24     = { defs={} expr=v3996[1] }
        ?25     = { defs={} expr=v3997[1] }
        ?26     = { defs={} expr=v3998[1] }
        ?27     = { defs={} expr=v3999[1] }
        ?28     = { defs={} expr=v4000[1] }
        ?29     = { defs={} expr=v4001[1] }
        ?30     = { defs={} expr=v4002[1] }
        ?31     = { defs={} expr=v4003[1] }
        ip      = { defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576} expr=0x08048577[32] }
    memory:
        address = { defs={0x08048570} expr=(add[32] v3962[32] 12[32]) }
          value = { defs={} expr=v4004[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] v3962[32] 12[32]) 4[32]) }
          value = { defs={} expr=v4005[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048570,0x08048573,0x08048574} expr=(add[32] (add[32] (add[32] v3962[32] 12[32]) 4[32]) 4[32]) }
          value = { defs={} expr=v4006[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048570,0x08048573,0x08048574,0x08048575} expr=(add[32] (add[32] (add[32] (add[32] v3962[32] 12[32]) 4[32]) 4[32]) 4[32]) }
          value = { defs={} expr=v4007[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576} expr=0x08048577[32]
0x8048577:ret    
    registers:
        ax      = { defs={} expr=v3958[32] }
        cx      = { defs={} expr=v3959[32] }
        dx      = { defs={} expr=v3960[32] }
        bx      = { defs={0x08048573} expr=v4004[32] }
        sp      = { defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576,0x08048577} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v3962[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) 4[32]) }
        bp      = { defs={0x08048576} expr=v4007[32] }
        si      = { defs={0x08048574} expr=v4005[32] }
        di      = { defs={0x08048575} expr=v4006[32] }
        es      = { defs={} expr=v3966[16] }
        cs      = { defs={} expr=v3967[16] }
        ss      = { defs={} expr=v3968[16] }
        ds      = { defs={} expr=v3969[16] }
        fs      = { defs={} expr=v3970[16] }
        gs      = { defs={} expr=v3971[16] }
        cf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3962[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3962[32]) 12[33]))))) }
        ?1      = { defs={} expr=v3973[1] }
        pf      = { defs={0x08048570} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v3962[32] 12[32]))))))) }
        ?3      = { defs={} expr=v3975[1] }
        af      = { defs={0x08048570} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3962[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3962[32]) 12[33]))))) }
        ?5      = { defs={} expr=v3977[1] }
        zf      = { defs={0x08048570} expr=(zerop[1] (add[32] v3962[32] 12[32])) }
        sf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (add[32] v3962[32] 12[32])) }
        tf      = { defs={} expr=v3980[1] }
        if      = { defs={} expr=v3981[1] }
        df      = { defs={} expr=v3982[1] }
        of      = { defs={0x08048570} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3962[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3962[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3962[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v3962[32]) 12[33])))))) }
        iopl0   = { defs={} expr=v3984[1] }
        iopl1   = { defs={} expr=v3985[1] }
        nt      = { defs={} expr=v3986[1] }
        ?15     = { defs={} expr=v3987[1] }
        rf      = { defs={} expr=v3988[1] }
        vm      = { defs={} expr=v3989[1] }
        ac      = { defs={} expr=v3990[1] }
        vif     = { defs={} expr=v3991[1] }
        vip     = { defs={} expr=v3992[1] }
        id      = { defs={} expr=v3993[1] }
        ?22     = { defs={} expr=v3994[1] }
        ?23     = { defs={} expr=v3995[1] }
        ?24     = { defs={} expr=v3996[1] }
        ?25     = { defs={} expr=v3997[1] }
        ?26     = { defs={} expr=v3998[1] }
        ?27     = { defs={} expr=v3999[1] }
        ?28     = { defs={} expr=v4000[1] }
        ?29     = { defs={} expr=v4001[1] }
        ?30     = { defs={} expr=v4002[1] }
        ?31     = { defs={} expr=v4003[1] }
        ip      = { defs={0x08048577} expr=v4008[32] }
    memory:
        address = { defs={0x08048570} expr=(add[32] v3962[32] 12[32]) }
          value = { defs={} expr=v4004[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] v3962[32] 12[32]) 4[32]) }
          value = { defs={} expr=v4005[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048570,0x08048573,0x08048574} expr=(add[32] (add[32] (add[32] v3962[32] 12[32]) 4[32]) 4[32]) }
          value = { defs={} expr=v4006[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048570,0x08048573,0x08048574,0x08048575} expr=(add[32] (add[32] (add[32] (add[32] v3962[32] 12[32]) 4[32]) 4[32]) 4[32]) }
          value = { defs={} expr=v4007[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v3962[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) }
          value = { defs={} expr=v4008[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048577} expr=v4008[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048580:push   ebp
    registers:
        ax      = { defs={} expr=v4057[32] }
        cx      = { defs={} expr=v4058[32] }
        dx      = { defs={} expr=v4059[32] }
        bx      = { defs={} expr=v4060[32] }
        sp      = { defs={0x08048580} expr=(add[32] v4061[32] -4[32]) }
        bp      = { defs={} expr=v4062[32] }
        si      = { defs={} expr=v4063[32] }
        di      = { defs={} expr=v4064[32] }
        es      = { defs={} expr=v4065[16] }
        cs      = { defs={} expr=v4066[16] }
        ss      = { defs={} expr=v4067[16] }
        ds      = { defs={} expr=v4068[16] }
        fs      = { defs={} expr=v4069[16] }
        gs      = { defs={} expr=v4070[16] }
        cf      = { defs={} expr=v4071[1] }
        ?1      = { defs={} expr=v4072[1] }
        pf      = { defs={} expr=v4073[1] }
        ?3      = { defs={} expr=v4074[1] }
        af      = { defs={} expr=v4075[1] }
        ?5      = { defs={} expr=v4076[1] }
        zf      = { defs={} expr=v4077[1] }
        sf      = { defs={} expr=v4078[1] }
        tf      = { defs={} expr=v4079[1] }
        if      = { defs={} expr=v4080[1] }
        df      = { defs={} expr=v4081[1] }
        of      = { defs={} expr=v4082[1] }
        iopl0   = { defs={} expr=v4083[1] }
        iopl1   = { defs={} expr=v4084[1] }
        nt      = { defs={} expr=v4085[1] }
        ?15     = { defs={} expr=v4086[1] }
        rf      = { defs={} expr=v4087[1] }
        vm      = { defs={} expr=v4088[1] }
        ac      = { defs={} expr=v4089[1] }
        vif     = { defs={} expr=v4090[1] }
        vip     = { defs={} expr=v4091[1] }
        id      = { defs={} expr=v4092[1] }
        ?22     = { defs={} expr=v4093[1] }
        ?23     = { defs={} expr=v4094[1] }
        ?24     = { defs={} expr=v4095[1] }
        ?25     = { defs={} expr=v4096[1] }
        ?26     = { defs={} expr=v4097[1] }
        ?27     = { defs={} expr=v4098[1] }
        ?28     = { defs={} expr=v4099[1] }
        ?29     = { defs={} expr=v4100[1] }
        ?30     = { defs={} expr=v4101[1] }
        ?31     = { defs={} expr=v4102[1] }
        ip      = { defs={0x08048580} expr=0x08048581[32] }
    memory:
        address = { defs={0x08048580} expr=(add[32] v4061[32] -4[32]) }
          value = { defs={0x08048580} expr=v4062[32] }
          flags = { size=4 }
    ip = defs={0x08048580} expr=0x08048581[32]
0x8048581:mov    ebp, esp
    registers:
        ax      = { defs={} expr=v4057[32] }
        cx      = { defs={} expr=v4058[32] }
        dx      = { defs={} expr=v4059[32] }
        bx      = { defs={} expr=v4060[32] }
        sp      = { defs={0x08048580} expr=(add[32] v4061[32] -4[32]) }
        bp      = { defs={0x08048580,0x08048581} expr=(add[32] v4061[32] -4[32]) }
        si      = { defs={} expr=v4063[32] }
        di      = { defs={} expr=v4064[32] }
        es      = { defs={} expr=v4065[16] }
        cs      = { defs={} expr=v4066[16] }
        ss      = { defs={} expr=v4067[16] }
        ds      = { defs={} expr=v4068[16] }
        fs      = { defs={} expr=v4069[16] }
        gs      = { defs={} expr=v4070[16] }
        cf      = { defs={} expr=v4071[1] }
        ?1      = { defs={} expr=v4072[1] }
        pf      = { defs={} expr=v4073[1] }
        ?3      = { defs={} expr=v4074[1] }
        af      = { defs={} expr=v4075[1] }
        ?5      = { defs={} expr=v4076[1] }
        zf      = { defs={} expr=v4077[1] }
        sf      = { defs={} expr=v4078[1] }
        tf      = { defs={} expr=v4079[1] }
        if      = { defs={} expr=v4080[1] }
        df      = { defs={} expr=v4081[1] }
        of      = { defs={} expr=v4082[1] }
        iopl0   = { defs={} expr=v4083[1] }
        iopl1   = { defs={} expr=v4084[1] }
        nt      = { defs={} expr=v4085[1] }
        ?15     = { defs={} expr=v4086[1] }
        rf      = { defs={} expr=v4087[1] }
        vm      = { defs={} expr=v4088[1] }
        ac      = { defs={} expr=v4089[1] }
        vif     = { defs={} expr=v4090[1] }
        vip     = { defs={} expr=v4091[1] }
        id      = { defs={} expr=v4092[1] }
        ?22     = { defs={} expr=v4093[1] }
        ?23     = { defs={} expr=v4094[1] }
        ?24     = { defs={} expr=v4095[1] }
        ?25     = { defs={} expr=v4096[1] }
        ?26     = { defs={} expr=v4097[1] }
        ?27     = { defs={} expr=v4098[1] }
        ?28     = { defs={} expr=v4099[1] }
        ?29     = { defs={} expr=v4100[1] }
        ?30     = { defs={} expr=v4101[1] }
        ?31     = { defs={} expr=v4102[1] }
        ip      = { defs={0x08048580,0x08048581} expr=0x08048583[32] }
    memory:
        address = { defs={0x08048580} expr=(add[32] v4061[32] -4[32]) }
          value = { defs={0x08048580} expr=v4062[32] }
          flags = { size=4 }
    ip = defs={0x08048580,0x08048581} expr=0x08048583[32]
0x8048583:push   ebx
    registers:
        ax      = { defs={} expr=v4057[32] }
        cx      = { defs={} expr=v4058[32] }
        dx      = { defs={} expr=v4059[32] }
        bx      = { defs={} expr=v4060[32] }
        sp      = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] v4061[32] -4[32]) -4[32]) }
        bp      = { defs={0x08048580,0x08048581} expr=(add[32] v4061[32] -4[32]) }
        si      = { defs={} expr=v4063[32] }
        di      = { defs={} expr=v4064[32] }
        es      = { defs={} expr=v4065[16] }
        cs      = { defs={} expr=v4066[16] }
        ss      = { defs={} expr=v4067[16] }
        ds      = { defs={} expr=v4068[16] }
        fs      = { defs={} expr=v4069[16] }
        gs      = { defs={} expr=v4070[16] }
        cf      = { defs={} expr=v4071[1] }
        ?1      = { defs={} expr=v4072[1] }
        pf      = { defs={} expr=v4073[1] }
        ?3      = { defs={} expr=v4074[1] }
        af      = { defs={} expr=v4075[1] }
        ?5      = { defs={} expr=v4076[1] }
        zf      = { defs={} expr=v4077[1] }
        sf      = { defs={} expr=v4078[1] }
        tf      = { defs={} expr=v4079[1] }
        if      = { defs={} expr=v4080[1] }
        df      = { defs={} expr=v4081[1] }
        of      = { defs={} expr=v4082[1] }
        iopl0   = { defs={} expr=v4083[1] }
        iopl1   = { defs={} expr=v4084[1] }
        nt      = { defs={} expr=v4085[1] }
        ?15     = { defs={} expr=v4086[1] }
        rf      = { defs={} expr=v4087[1] }
        vm      = { defs={} expr=v4088[1] }
        ac      = { defs={} expr=v4089[1] }
        vif     = { defs={} expr=v4090[1] }
        vip     = { defs={} expr=v4091[1] }
        id      = { defs={} expr=v4092[1] }
        ?22     = { defs={} expr=v4093[1] }
        ?23     = { defs={} expr=v4094[1] }
        ?24     = { defs={} expr=v4095[1] }
        ?25     = { defs={} expr=v4096[1] }
        ?26     = { defs={} expr=v4097[1] }
        ?27     = { defs={} expr=v4098[1] }
        ?28     = { defs={} expr=v4099[1] }
        ?29     = { defs={} expr=v4100[1] }
        ?30     = { defs={} expr=v4101[1] }
        ?31     = { defs={} expr=v4102[1] }
        ip      = { defs={0x08048580,0x08048581,0x08048583} expr=0x08048584[32] }
    memory:
        address = { defs={0x08048580} expr=(add[32] v4061[32] -4[32]) }
          value = { defs={0x08048580} expr=v4062[32] }
          flags = { size=4 }
        address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] v4061[32] -4[32]) -4[32]) }
          value = { defs={0x08048583} expr=v4060[32] }
          flags = { size=4 }
    ip = defs={0x08048580,0x08048581,0x08048583} expr=0x08048584[32]
0x8048584:sub    esp, 0x04
    registers:
        ax      = { defs={} expr=v4057[32] }
        cx      = { defs={} expr=v4058[32] }
        dx      = { defs={} expr=v4059[32] }
        bx      = { defs={} expr=v4060[32] }
        sp      = { defs={0x08048580,0x08048583,0x08048584} expr=(add[32] (add[32] (add[32] v4061[32] -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048580,0x08048581} expr=(add[32] v4061[32] -4[32]) }
        si      = { defs={} expr=v4063[32] }
        di      = { defs={} expr=v4064[32] }
        es      = { defs={} expr=v4065[16] }
        cs      = { defs={} expr=v4066[16] }
        ss      = { defs={} expr=v4067[16] }
        ds      = { defs={} expr=v4068[16] }
        fs      = { defs={} expr=v4069[16] }
        gs      = { defs={} expr=v4070[16] }
        cf      = { defs={0x08048580,0x08048583,0x08048584} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v4061[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v4061[32] -4[32]) -4[32])) 4294967292[33])))))) }
        ?1      = { defs={} expr=v4072[1] }
        pf      = { defs={0x08048580,0x08048583,0x08048584} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v4061[32] -4[32]) -4[32]) -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v4061[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v4061[32] -4[32]) -4[32]) -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v4061[32] -4[32]) -4[32]) -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v4061[32] -4[32]) -4[32]) -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v4061[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v4061[32] -4[32]) -4[32]) -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v4061[32] -4[32]) -4[32]) -4[32]))))))) }
        ?3      = { defs={} expr=v4074[1] }
        af      = { defs={0x08048580,0x08048583,0x08048584} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v4061[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v4061[32] -4[32]) -4[32])) 4294967292[33])))))) }
        ?5      = { defs={} expr=v4076[1] }
        zf      = { defs={0x08048580,0x08048583,0x08048584} expr=(zerop[1] (add[32] (add[32] (add[32] v4061[32] -4[32]) -4[32]) -4[32])) }
        sf      = { defs={0x08048580,0x08048583,0x08048584} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] v4061[32] -4[32]) -4[32]) -4[32])) }
        tf      = { defs={} expr=v4079[1] }
        if      = { defs={} expr=v4080[1] }
        df      = { defs={} expr=v4081[1] }
        of      = { defs={0x08048580,0x08048583,0x08048584} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v4061[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v4061[32] -4[32]) -4[32])) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v4061[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v4061[32] -4[32]) -4[32])) 4294967292[33])))))) }
        iopl0   = { defs={} expr=v4083[1] }
        iopl1   = { defs={} expr=v4084[1] }
        nt      = { defs={} expr=v4085[1] }
        ?15     = { defs={} expr=v4086[1] }
        rf      = { defs={} expr=v4087[1] }
        vm      = { defs={} expr=v4088[1] }
        ac      = { defs={} expr=v4089[1] }
        vif     = { defs={} expr=v4090[1] }
        vip     = { defs={} expr=v4091[1] }
        id      = { defs={} expr=v4092[1] }
        ?22     = { defs={} expr=v4093[1] }
        ?23     = { defs={} expr=v4094[1] }
        ?24     = { defs={} expr=v4095[1] }
        ?25     = { defs={} expr=v4096[1] }
        ?26     = { defs={} expr=v4097[1] }
        ?27     = { defs={} expr=v4098[1] }
        ?28     = { defs={} expr=v4099[1] }
        ?29     = { defs={} expr=v4100[1] }
        ?30     = { defs={} expr=v4101[1] }
        ?31     = { defs={} expr=v4102[1] }
        ip      = { defs={0x08048580,0x08048581,0x08048583,0x08048584} expr=0x08048587[32] }
    memory:
        address = { defs={0x08048580} expr=(add[32] v4061[32] -4[32]) }
          value = { defs={0x08048580} expr=v4062[32] }
          flags = { size=4 }
        address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] v4061[32] -4[32]) -4[32]) }
          value = { defs={0x08048583} expr=v4060[32] }
          flags = { size=4 }
    ip = defs={0x08048580,0x08048581,0x08048583,0x08048584} expr=0x08048587[32]
0x8048587:mov    ebx, 0x080495e8<.ctors>
    registers:
        ax      = { defs={} expr=v4057[32] }
        cx      = { defs={} expr=v4058[32] }
        dx      = { defs={} expr=v4059[32] }
        bx      = { defs={0x08048587} expr=0x080495e8[32] }
        sp      = { defs={0x08048580,0x08048583,0x08048584} expr=(add[32] (add[32] (add[32] v4061[32] -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048580,0x08048581} expr=(add[32] v4061[32] -4[32]) }
        si      = { defs={} expr=v4063[32] }
        di      = { defs={} expr=v4064[32] }
        es      = { defs={} expr=v4065[16] }
        cs      = { defs={} expr=v4066[16] }
        ss      = { defs={} expr=v4067[16] }
        ds      = { defs={} expr=v4068[16] }
        fs      = { defs={} expr=v4069[16] }
        gs      = { defs={} expr=v4070[16] }
        cf      = { defs={0x08048580,0x08048583,0x08048584} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v4061[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v4061[32] -4[32]) -4[32])) 4294967292[33])))))) }
        ?1      = { defs={} expr=v4072[1] }
        pf      = { defs={0x08048580,0x08048583,0x08048584} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v4061[32] -4[32]) -4[32]) -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v4061[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v4061[32] -4[32]) -4[32]) -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v4061[32] -4[32]) -4[32]) -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v4061[32] -4[32]) -4[32]) -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v4061[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v4061[32] -4[32]) -4[32]) -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v4061[32] -4[32]) -4[32]) -4[32]))))))) }
        ?3      = { defs={} expr=v4074[1] }
        af      = { defs={0x08048580,0x08048583,0x08048584} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v4061[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v4061[32] -4[32]) -4[32])) 4294967292[33])))))) }
        ?5      = { defs={} expr=v4076[1] }
        zf      = { defs={0x08048580,0x08048583,0x08048584} expr=(zerop[1] (add[32] (add[32] (add[32] v4061[32] -4[32]) -4[32]) -4[32])) }
        sf      = { defs={0x08048580,0x08048583,0x08048584} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] v4061[32] -4[32]) -4[32]) -4[32])) }
        tf      = { defs={} expr=v4079[1] }
        if      = { defs={} expr=v4080[1] }
        df      = { defs={} expr=v4081[1] }
        of      = { defs={0x08048580,0x08048583,0x08048584} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v4061[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v4061[32] -4[32]) -4[32])) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v4061[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v4061[32] -4[32]) -4[32])) 4294967292[33])))))) }
        iopl0   = { defs={} expr=v4083[1] }
        iopl1   = { defs={} expr=v4084[1] }
        nt      = { defs={} expr=v4085[1] }
        ?15     = { defs={} expr=v4086[1] }
        rf      = { defs={} expr=v4087[1] }
        vm      = { defs={} expr=v4088[1] }
        ac      = { defs={} expr=v4089[1] }
        vif     = { defs={} expr=v4090[1] }
        vip     = { defs={} expr=v4091[1] }
        id      = { defs={} expr=v4092[1] }
        ?22     = { defs={} expr=v4093[1] }
        ?23     = { defs={} expr=v4094[1] }
        ?24     = { defs={} expr=v4095[1] }
        ?25     = { defs={} expr=v4096[1] }
        ?26     = { defs={} expr=v4097[1] }
        ?27     = { defs={} expr=v4098[1] }
        ?28     = { defs={} expr=v4099[1] }
        ?29     = { defs={} expr=v4100[1] }
        ?30     = { defs={} expr=v4101[1] }
        ?31     = { defs={} expr=v4102[1] }
        ip      = { defs={0x08048580,0x08048581,0x08048583,0x08048584,0x08048587} expr=0x0804858c[32] }
    memory:
        address = { defs={0x08048580} expr=(add[32] v4061[32] -4[32]) }
          value = { defs={0x08048580} expr=v4062[32] }
          flags = { size=4 }
        address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] v4061[32] -4[32]) -4[32]) }
          value = { defs={0x08048583} expr=v4060[32] }
          flags = { size=4 }
    ip = defs={0x08048580,0x08048581,0x08048583,0x08048584,0x08048587} expr=0x0804858c[32]
0x804858c:mov    eax, DWORD PTR ds:[0x080495e8<.ctors>]
    registers:
        ax      = { defs={0x0804858c} expr=v4103[32] }
        cx      = { defs={} expr=v4058[32] }
        dx      = { defs={} expr=v4059[32] }
        bx      = { defs={0x08048587} expr=0x080495e8[32] }
        sp      = { defs={0x08048580,0x08048583,0x08048584} expr=(add[32] (add[32] (add[32] v4061[32] -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048580,0x08048581} expr=(add[32] v4061[32] -4[32]) }
        si      = { defs={} expr=v4063[32] }
        di      = { defs={} expr=v4064[32] }
        es      = { defs={} expr=v4065[16] }
        cs      = { defs={} expr=v4066[16] }
        ss      = { defs={} expr=v4067[16] }
        ds      = { defs={} expr=v4068[16] }
        fs      = { defs={} expr=v4069[16] }
        gs      = { defs={} expr=v4070[16] }
        cf      = { defs={0x08048580,0x08048583,0x08048584} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v4061[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v4061[32] -4[32]) -4[32])) 4294967292[33])))))) }
        ?1      = { defs={} expr=v4072[1] }
        pf      = { defs={0x08048580,0x08048583,0x08048584} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v4061[32] -4[32]) -4[32]) -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v4061[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v4061[32] -4[32]) -4[32]) -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v4061[32] -4[32]) -4[32]) -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v4061[32] -4[32]) -4[32]) -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v4061[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v4061[32] -4[32]) -4[32]) -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v4061[32] -4[32]) -4[32]) -4[32]))))))) }
        ?3      = { defs={} expr=v4074[1] }
        af      = { defs={0x08048580,0x08048583,0x08048584} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v4061[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v4061[32] -4[32]) -4[32])) 4294967292[33])))))) }
        ?5      = { defs={} expr=v4076[1] }
        zf      = { defs={0x08048580,0x08048583,0x08048584} expr=(zerop[1] (add[32] (add[32] (add[32] v4061[32] -4[32]) -4[32]) -4[32])) }
        sf      = { defs={0x08048580,0x08048583,0x08048584} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] v4061[32] -4[32]) -4[32]) -4[32])) }
        tf      = { defs={} expr=v4079[1] }
        if      = { defs={} expr=v4080[1] }
        df      = { defs={} expr=v4081[1] }
        of      = { defs={0x08048580,0x08048583,0x08048584} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v4061[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v4061[32] -4[32]) -4[32])) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v4061[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v4061[32] -4[32]) -4[32])) 4294967292[33])))))) }
        iopl0   = { defs={} expr=v4083[1] }
        iopl1   = { defs={} expr=v4084[1] }
        nt      = { defs={} expr=v4085[1] }
        ?15     = { defs={} expr=v4086[1] }
        rf      = { defs={} expr=v4087[1] }
        vm      = { defs={} expr=v4088[1] }
        ac      = { defs={} expr=v4089[1] }
        vif     = { defs={} expr=v4090[1] }
        vip     = { defs={} expr=v4091[1] }
        id      = { defs={} expr=v4092[1] }
        ?22     = { defs={} expr=v4093[1] }
        ?23     = { defs={} expr=v4094[1] }
        ?24     = { defs={} expr=v4095[1] }
        ?25     = { defs={} expr=v4096[1] }
        ?26     = { defs={} expr=v4097[1] }
        ?27     = { defs={} expr=v4098[1] }
        ?28     = { defs={} expr=v4099[1] }
        ?29     = { defs={} expr=v4100[1] }
        ?30     = { defs={} expr=v4101[1] }
        ?31     = { defs={} expr=v4102[1] }
        ip      = { defs={0x08048580,0x08048581,0x08048583,0x08048584,0x08048587,0x0804858c} expr=0x08048591[32] }
    memory:
        address = { defs={0x08048580} expr=(add[32] v4061[32] -4[32]) }
          value = { defs={0x08048580} expr=v4062[32] }
          flags = { size=4 }
        address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] v4061[32] -4[32]) -4[32]) }
          value = { defs={0x08048583} expr=v4060[32] }
          flags = { size=4 }
        address = { defs={0x0804858c} expr=0x080495e8[32] }
          value = { defs={} expr=v4103[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048580,0x08048581,0x08048583,0x08048584,0x08048587,0x0804858c} expr=0x08048591[32]
0x8048591:cmp    eax, 0xff<-0x01>
    registers:
        ax      = { defs={0x0804858c} expr=v4103[32] }
        cx      = { defs={} expr=v4058[32] }
        dx      = { defs={} expr=v4059[32] }
        bx      = { defs={0x08048587} expr=0x080495e8[32] }
        sp      = { defs={0x08048580,0x08048583,0x08048584} expr=(add[32] (add[32] (add[32] v4061[32] -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048580,0x08048581} expr=(add[32] v4061[32] -4[32]) }
        si      = { defs={} expr=v4063[32] }
        di      = { defs={} expr=v4064[32] }
        es      = { defs={} expr=v4065[16] }
        cs      = { defs={} expr=v4066[16] }
        ss      = { defs={} expr=v4067[16] }
        ds      = { defs={} expr=v4068[16] }
        fs      = { defs={} expr=v4069[16] }
        gs      = { defs={} expr=v4070[16] }
        cf      = { defs={0x0804858c,0x08048591} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v4103[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v4103[32]) 1[33])))))) }
        ?1      = { defs={} expr=v4072[1] }
        pf      = { defs={0x0804858c,0x08048591} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v4103[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v4103[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v4103[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v4103[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v4103[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v4103[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v4103[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v4103[32] 1[32]))))))) }
        ?3      = { defs={} expr=v4074[1] }
        af      = { defs={0x0804858c,0x08048591} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v4103[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v4103[32]) 1[33])))))) }
        ?5      = { defs={} expr=v4076[1] }
        zf      = { defs={0x0804858c,0x08048591} expr=(zerop[1] (add[32] v4103[32] 1[32])) }
        sf      = { defs={0x0804858c,0x08048591} expr=(extract[1] 31[32] 32[32] (add[32] v4103[32] 1[32])) }
        tf      = { defs={} expr=v4079[1] }
        if      = { defs={} expr=v4080[1] }
        df      = { defs={} expr=v4081[1] }
        of      = { defs={0x0804858c,0x08048591} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v4103[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v4103[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v4103[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v4103[32]) 1[33])))))) }
        iopl0   = { defs={} expr=v4083[1] }
        iopl1   = { defs={} expr=v4084[1] }
        nt      = { defs={} expr=v4085[1] }
        ?15     = { defs={} expr=v4086[1] }
        rf      = { defs={} expr=v4087[1] }
        vm      = { defs={} expr=v4088[1] }
        ac      = { defs={} expr=v4089[1] }
        vif     = { defs={} expr=v4090[1] }
        vip     = { defs={} expr=v4091[1] }
        id      = { defs={} expr=v4092[1] }
        ?22     = { defs={} expr=v4093[1] }
        ?23     = { defs={} expr=v4094[1] }
        ?24     = { defs={} expr=v4095[1] }
        ?25     = { defs={} expr=v4096[1] }
        ?26     = { defs={} expr=v4097[1] }
        ?27     = { defs={} expr=v4098[1] }
        ?28     = { defs={} expr=v4099[1] }
        ?29     = { defs={} expr=v4100[1] }
        ?30     = { defs={} expr=v4101[1] }
        ?31     = { defs={} expr=v4102[1] }
        ip      = { defs={0x08048580,0x08048581,0x08048583,0x08048584,0x08048587,0x0804858c,0x08048591} expr=0x08048594[32] }
    memory:
        address = { defs={0x08048580} expr=(add[32] v4061[32] -4[32]) }
          value = { defs={0x08048580} expr=v4062[32] }
          flags = { size=4 }
        address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] v4061[32] -4[32]) -4[32]) }
          value = { defs={0x08048583} expr=v4060[32] }
          flags = { size=4 }
        address = { defs={0x0804858c} expr=0x080495e8[32] }
          value = { defs={} expr=v4103[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048580,0x08048581,0x08048583,0x08048584,0x08048587,0x0804858c,0x08048591} expr=0x08048594[32]
0x8048594:je     0x080485ac<<Insn>>
    registers:
        ax      = { defs={0x0804858c} expr=v4103[32] }
        cx      = { defs={} expr=v4058[32] }
        dx      = { defs={} expr=v4059[32] }
        bx      = { defs={0x08048587} expr=0x080495e8[32] }
        sp      = { defs={0x08048580,0x08048583,0x08048584} expr=(add[32] (add[32] (add[32] v4061[32] -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048580,0x08048581} expr=(add[32] v4061[32] -4[32]) }
        si      = { defs={} expr=v4063[32] }
        di      = { defs={} expr=v4064[32] }
        es      = { defs={} expr=v4065[16] }
        cs      = { defs={} expr=v4066[16] }
        ss      = { defs={} expr=v4067[16] }
        ds      = { defs={} expr=v4068[16] }
        fs      = { defs={} expr=v4069[16] }
        gs      = { defs={} expr=v4070[16] }
        cf      = { defs={0x0804858c,0x08048591} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v4103[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v4103[32]) 1[33])))))) }
        ?1      = { defs={} expr=v4072[1] }
        pf      = { defs={0x0804858c,0x08048591} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v4103[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v4103[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v4103[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v4103[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v4103[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v4103[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v4103[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v4103[32] 1[32]))))))) }
        ?3      = { defs={} expr=v4074[1] }
        af      = { defs={0x0804858c,0x08048591} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v4103[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v4103[32]) 1[33])))))) }
        ?5      = { defs={} expr=v4076[1] }
        zf      = { defs={0x0804858c,0x08048591} expr=(zerop[1] (add[32] v4103[32] 1[32])) }
        sf      = { defs={0x0804858c,0x08048591} expr=(extract[1] 31[32] 32[32] (add[32] v4103[32] 1[32])) }
        tf      = { defs={} expr=v4079[1] }
        if      = { defs={} expr=v4080[1] }
        df      = { defs={} expr=v4081[1] }
        of      = { defs={0x0804858c,0x08048591} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v4103[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v4103[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v4103[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v4103[32]) 1[33])))))) }
        iopl0   = { defs={} expr=v4083[1] }
        iopl1   = { defs={} expr=v4084[1] }
        nt      = { defs={} expr=v4085[1] }
        ?15     = { defs={} expr=v4086[1] }
        rf      = { defs={} expr=v4087[1] }
        vm      = { defs={} expr=v4088[1] }
        ac      = { defs={} expr=v4089[1] }
        vif     = { defs={} expr=v4090[1] }
        vip     = { defs={} expr=v4091[1] }
        id      = { defs={} expr=v4092[1] }
        ?22     = { defs={} expr=v4093[1] }
        ?23     = { defs={} expr=v4094[1] }
        ?24     = { defs={} expr=v4095[1] }
        ?25     = { defs={} expr=v4096[1] }
        ?26     = { defs={} expr=v4097[1] }
        ?27     = { defs={} expr=v4098[1] }
        ?28     = { defs={} expr=v4099[1] }
        ?29     = { defs={} expr=v4100[1] }
        ?30     = { defs={} expr=v4101[1] }
        ?31     = { defs={} expr=v4102[1] }
        ip      = { defs={0x08048580,0x08048581,0x08048583,0x08048584,0x08048587,0x0804858c,0x08048591,0x08048594} expr=(ite[32] (zerop[1] (add[32] v4103[32] 1[32])) 0x080485ac[32] 0x08048596[32]) }
    memory:
        address = { defs={0x08048580} expr=(add[32] v4061[32] -4[32]) }
          value = { defs={0x08048580} expr=v4062[32] }
          flags = { size=4 }
        address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] v4061[32] -4[32]) -4[32]) }
          value = { defs={0x08048583} expr=v4060[32] }
          flags = { size=4 }
        address = { defs={0x0804858c} expr=0x080495e8[32] }
          value = { defs={} expr=v4103[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048580,0x08048581,0x08048583,0x08048584,0x08048587,0x0804858c,0x08048591,0x08048594} expr=(ite[32] (zerop[1] (add[32] v4103[32] 1[32])) 0x080485ac[32] 0x08048596[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048596:lea    esi, [esi + 0x00]
    registers:
        ax      = { defs={} expr=v4152[32] }
        cx      = { defs={} expr=v4153[32] }
        dx      = { defs={} expr=v4154[32] }
        bx      = { defs={} expr=v4155[32] }
        sp      = { defs={} expr=v4156[32] }
        bp      = { defs={} expr=v4157[32] }
        si      = { defs={0x08048596} expr=v4158[32] }
        di      = { defs={} expr=v4159[32] }
        es      = { defs={} expr=v4160[16] }
        cs      = { defs={} expr=v4161[16] }
        ss      = { defs={} expr=v4162[16] }
        ds      = { defs={} expr=v4163[16] }
        fs      = { defs={} expr=v4164[16] }
        gs      = { defs={} expr=v4165[16] }
        cf      = { defs={} expr=v4166[1] }
        ?1      = { defs={} expr=v4167[1] }
        pf      = { defs={} expr=v4168[1] }
        ?3      = { defs={} expr=v4169[1] }
        af      = { defs={} expr=v4170[1] }
        ?5      = { defs={} expr=v4171[1] }
        zf      = { defs={} expr=v4172[1] }
        sf      = { defs={} expr=v4173[1] }
        tf      = { defs={} expr=v4174[1] }
        if      = { defs={} expr=v4175[1] }
        df      = { defs={} expr=v4176[1] }
        of      = { defs={} expr=v4177[1] }
        iopl0   = { defs={} expr=v4178[1] }
        iopl1   = { defs={} expr=v4179[1] }
        nt      = { defs={} expr=v4180[1] }
        ?15     = { defs={} expr=v4181[1] }
        rf      = { defs={} expr=v4182[1] }
        vm      = { defs={} expr=v4183[1] }
        ac      = { defs={} expr=v4184[1] }
        vif     = { defs={} expr=v4185[1] }
        vip     = { defs={} expr=v4186[1] }
        id      = { defs={} expr=v4187[1] }
        ?22     = { defs={} expr=v4188[1] }
        ?23     = { defs={} expr=v4189[1] }
        ?24     = { defs={} expr=v4190[1] }
        ?25     = { defs={} expr=v4191[1] }
        ?26     = { defs={} expr=v4192[1] }
        ?27     = { defs={} expr=v4193[1] }
        ?28     = { defs={} expr=v4194[1] }
        ?29     = { defs={} expr=v4195[1] }
        ?30     = { defs={} expr=v4196[1] }
        ?31     = { defs={} expr=v4197[1] }
        ip      = { defs={0x08048596} expr=0x08048599[32] }
    memory:
        (empty)
    ip = defs={0x08048596} expr=0x08048599[32]
0x8048599:lea    edi, [edi + 0x00000000]
    registers:
        ax      = { defs={} expr=v4152[32] }
        cx      = { defs={} expr=v4153[32] }
        dx      = { defs={} expr=v4154[32] }
        bx      = { defs={} expr=v4155[32] }
        sp      = { defs={} expr=v4156[32] }
        bp      = { defs={} expr=v4157[32] }
        si      = { defs={0x08048596} expr=v4158[32] }
        di      = { defs={0x08048599} expr=v4159[32] }
        es      = { defs={} expr=v4160[16] }
        cs      = { defs={} expr=v4161[16] }
        ss      = { defs={} expr=v4162[16] }
        ds      = { defs={} expr=v4163[16] }
        fs      = { defs={} expr=v4164[16] }
        gs      = { defs={} expr=v4165[16] }
        cf      = { defs={} expr=v4166[1] }
        ?1      = { defs={} expr=v4167[1] }
        pf      = { defs={} expr=v4168[1] }
        ?3      = { defs={} expr=v4169[1] }
        af      = { defs={} expr=v4170[1] }
        ?5      = { defs={} expr=v4171[1] }
        zf      = { defs={} expr=v4172[1] }
        sf      = { defs={} expr=v4173[1] }
        tf      = { defs={} expr=v4174[1] }
        if      = { defs={} expr=v4175[1] }
        df      = { defs={} expr=v4176[1] }
        of      = { defs={} expr=v4177[1] }
        iopl0   = { defs={} expr=v4178[1] }
        iopl1   = { defs={} expr=v4179[1] }
        nt      = { defs={} expr=v4180[1] }
        ?15     = { defs={} expr=v4181[1] }
        rf      = { defs={} expr=v4182[1] }
        vm      = { defs={} expr=v4183[1] }
        ac      = { defs={} expr=v4184[1] }
        vif     = { defs={} expr=v4185[1] }
        vip     = { defs={} expr=v4186[1] }
        id      = { defs={} expr=v4187[1] }
        ?22     = { defs={} expr=v4188[1] }
        ?23     = { defs={} expr=v4189[1] }
        ?24     = { defs={} expr=v4190[1] }
        ?25     = { defs={} expr=v4191[1] }
        ?26     = { defs={} expr=v4192[1] }
        ?27     = { defs={} expr=v4193[1] }
        ?28     = { defs={} expr=v4194[1] }
        ?29     = { defs={} expr=v4195[1] }
        ?30     = { defs={} expr=v4196[1] }
        ?31     = { defs={} expr=v4197[1] }
        ip      = { defs={0x08048596,0x08048599} expr=0x080485a0[32] }
    memory:
        (empty)
    ip = defs={0x08048596,0x08048599} expr=0x080485a0[32]
0x80485a0:sub    ebx, 0x04
    registers:
        ax      = { defs={} expr=v4152[32] }
        cx      = { defs={} expr=v4153[32] }
        dx      = { defs={} expr=v4154[32] }
        bx      = { defs={0x080485a0} expr=(add[32] v4155[32] -4[32]) }
        sp      = { defs={} expr=v4156[32] }
        bp      = { defs={} expr=v4157[32] }
        si      = { defs={0x08048596} expr=v4158[32] }
        di      = { defs={0x08048599} expr=v4159[32] }
        es      = { defs={} expr=v4160[16] }
        cs      = { defs={} expr=v4161[16] }
        ss      = { defs={} expr=v4162[16] }
        ds      = { defs={} expr=v4163[16] }
        fs      = { defs={} expr=v4164[16] }
        gs      = { defs={} expr=v4165[16] }
        cf      = { defs={0x080485a0} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v4155[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v4155[32]) 4294967292[33])))))) }
        ?1      = { defs={} expr=v4167[1] }
        pf      = { defs={0x080485a0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v4155[32] -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v4155[32] -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v4155[32] -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v4155[32] -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v4155[32] -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v4155[32] -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v4155[32] -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v4155[32] -4[32]))))))) }
        ?3      = { defs={} expr=v4169[1] }
        af      = { defs={0x080485a0} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v4155[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v4155[32]) 4294967292[33])))))) }
        ?5      = { defs={} expr=v4171[1] }
        zf      = { defs={0x080485a0} expr=(zerop[1] (add[32] v4155[32] -4[32])) }
        sf      = { defs={0x080485a0} expr=(extract[1] 31[32] 32[32] (add[32] v4155[32] -4[32])) }
        tf      = { defs={} expr=v4174[1] }
        if      = { defs={} expr=v4175[1] }
        df      = { defs={} expr=v4176[1] }
        of      = { defs={0x080485a0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v4155[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v4155[32]) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v4155[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v4155[32]) 4294967292[33])))))) }
        iopl0   = { defs={} expr=v4178[1] }
        iopl1   = { defs={} expr=v4179[1] }
        nt      = { defs={} expr=v4180[1] }
        ?15     = { defs={} expr=v4181[1] }
        rf      = { defs={} expr=v4182[1] }
        vm      = { defs={} expr=v4183[1] }
        ac      = { defs={} expr=v4184[1] }
        vif     = { defs={} expr=v4185[1] }
        vip     = { defs={} expr=v4186[1] }
        id      = { defs={} expr=v4187[1] }
        ?22     = { defs={} expr=v4188[1] }
        ?23     = { defs={} expr=v4189[1] }
        ?24     = { defs={} expr=v4190[1] }
        ?25     = { defs={} expr=v4191[1] }
        ?26     = { defs={} expr=v4192[1] }
        ?27     = { defs={} expr=v4193[1] }
        ?28     = { defs={} expr=v4194[1] }
        ?29     = { defs={} expr=v4195[1] }
        ?30     = { defs={} expr=v4196[1] }
        ?31     = { defs={} expr=v4197[1] }
        ip      = { defs={0x08048596,0x08048599,0x080485a0} expr=0x080485a3[32] }
    memory:
        (empty)
    ip = defs={0x08048596,0x08048599,0x080485a0} expr=0x080485a3[32]
0x80485a3:call   eax
    registers:
        ax      = { defs={} expr=v4152[32] }
        cx      = { defs={} expr=v4153[32] }
        dx      = { defs={} expr=v4154[32] }
        bx      = { defs={0x080485a0} expr=(add[32] v4155[32] -4[32]) }
        sp      = { defs={0x080485a3} expr=(add[32] v4156[32] -4[32]) }
        bp      = { defs={} expr=v4157[32] }
        si      = { defs={0x08048596} expr=v4158[32] }
        di      = { defs={0x08048599} expr=v4159[32] }
        es      = { defs={} expr=v4160[16] }
        cs      = { defs={} expr=v4161[16] }
        ss      = { defs={} expr=v4162[16] }
        ds      = { defs={} expr=v4163[16] }
        fs      = { defs={} expr=v4164[16] }
        gs      = { defs={} expr=v4165[16] }
        cf      = { defs={0x080485a0} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v4155[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v4155[32]) 4294967292[33])))))) }
        ?1      = { defs={} expr=v4167[1] }
        pf      = { defs={0x080485a0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v4155[32] -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v4155[32] -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v4155[32] -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v4155[32] -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v4155[32] -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v4155[32] -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v4155[32] -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v4155[32] -4[32]))))))) }
        ?3      = { defs={} expr=v4169[1] }
        af      = { defs={0x080485a0} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v4155[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v4155[32]) 4294967292[33])))))) }
        ?5      = { defs={} expr=v4171[1] }
        zf      = { defs={0x080485a0} expr=(zerop[1] (add[32] v4155[32] -4[32])) }
        sf      = { defs={0x080485a0} expr=(extract[1] 31[32] 32[32] (add[32] v4155[32] -4[32])) }
        tf      = { defs={} expr=v4174[1] }
        if      = { defs={} expr=v4175[1] }
        df      = { defs={} expr=v4176[1] }
        of      = { defs={0x080485a0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v4155[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v4155[32]) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v4155[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v4155[32]) 4294967292[33])))))) }
        iopl0   = { defs={} expr=v4178[1] }
        iopl1   = { defs={} expr=v4179[1] }
        nt      = { defs={} expr=v4180[1] }
        ?15     = { defs={} expr=v4181[1] }
        rf      = { defs={} expr=v4182[1] }
        vm      = { defs={} expr=v4183[1] }
        ac      = { defs={} expr=v4184[1] }
        vif     = { defs={} expr=v4185[1] }
        vip     = { defs={} expr=v4186[1] }
        id      = { defs={} expr=v4187[1] }
        ?22     = { defs={} expr=v4188[1] }
        ?23     = { defs={} expr=v4189[1] }
        ?24     = { defs={} expr=v4190[1] }
        ?25     = { defs={} expr=v4191[1] }
        ?26     = { defs={} expr=v4192[1] }
        ?27     = { defs={} expr=v4193[1] }
        ?28     = { defs={} expr=v4194[1] }
        ?29     = { defs={} expr=v4195[1] }
        ?30     = { defs={} expr=v4196[1] }
        ?31     = { defs={} expr=v4197[1] }
        ip      = { defs={0x080485a3} expr=v4152[32] }
    memory:
        address = { defs={0x080485a3} expr=(add[32] v4156[32] -4[32]) }
          value = { defs={0x08048596,0x08048599,0x080485a0,0x080485a3} expr=0x080485a5[32] }
          flags = { size=4 }
    ip = defs={0x080485a3} expr=v4152[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485a5:mov    eax, DWORD PTR ds:[ebx]
    registers:
        ax      = { defs={0x080485a5} expr=v4292[32] }
        cx      = { defs={} expr=v4247[32] }
        dx      = { defs={} expr=v4248[32] }
        bx      = { defs={} expr=v4249[32] }
        sp      = { defs={} expr=v4250[32] }
        bp      = { defs={} expr=v4251[32] }
        si      = { defs={} expr=v4252[32] }
        di      = { defs={} expr=v4253[32] }
        es      = { defs={} expr=v4254[16] }
        cs      = { defs={} expr=v4255[16] }
        ss      = { defs={} expr=v4256[16] }
        ds      = { defs={} expr=v4257[16] }
        fs      = { defs={} expr=v4258[16] }
        gs      = { defs={} expr=v4259[16] }
        cf      = { defs={} expr=v4260[1] }
        ?1      = { defs={} expr=v4261[1] }
        pf      = { defs={} expr=v4262[1] }
        ?3      = { defs={} expr=v4263[1] }
        af      = { defs={} expr=v4264[1] }
        ?5      = { defs={} expr=v4265[1] }
        zf      = { defs={} expr=v4266[1] }
        sf      = { defs={} expr=v4267[1] }
        tf      = { defs={} expr=v4268[1] }
        if      = { defs={} expr=v4269[1] }
        df      = { defs={} expr=v4270[1] }
        of      = { defs={} expr=v4271[1] }
        iopl0   = { defs={} expr=v4272[1] }
        iopl1   = { defs={} expr=v4273[1] }
        nt      = { defs={} expr=v4274[1] }
        ?15     = { defs={} expr=v4275[1] }
        rf      = { defs={} expr=v4276[1] }
        vm      = { defs={} expr=v4277[1] }
        ac      = { defs={} expr=v4278[1] }
        vif     = { defs={} expr=v4279[1] }
        vip     = { defs={} expr=v4280[1] }
        id      = { defs={} expr=v4281[1] }
        ?22     = { defs={} expr=v4282[1] }
        ?23     = { defs={} expr=v4283[1] }
        ?24     = { defs={} expr=v4284[1] }
        ?25     = { defs={} expr=v4285[1] }
        ?26     = { defs={} expr=v4286[1] }
        ?27     = { defs={} expr=v4287[1] }
        ?28     = { defs={} expr=v4288[1] }
        ?29     = { defs={} expr=v4289[1] }
        ?30     = { defs={} expr=v4290[1] }
        ?31     = { defs={} expr=v4291[1] }
        ip      = { defs={0x080485a5} expr=0x080485a7[32] }
    memory:
        address = { defs={} expr=v4249[32] }
          value = { defs={} expr=v4292[32] }
          flags = { size=4; read-only }
    ip = defs={0x080485a5} expr=0x080485a7[32]
0x80485a7:cmp    eax, 0xff<-0x01>
    registers:
        ax      = { defs={0x080485a5} expr=v4292[32] }
        cx      = { defs={} expr=v4247[32] }
        dx      = { defs={} expr=v4248[32] }
        bx      = { defs={} expr=v4249[32] }
        sp      = { defs={} expr=v4250[32] }
        bp      = { defs={} expr=v4251[32] }
        si      = { defs={} expr=v4252[32] }
        di      = { defs={} expr=v4253[32] }
        es      = { defs={} expr=v4254[16] }
        cs      = { defs={} expr=v4255[16] }
        ss      = { defs={} expr=v4256[16] }
        ds      = { defs={} expr=v4257[16] }
        fs      = { defs={} expr=v4258[16] }
        gs      = { defs={} expr=v4259[16] }
        cf      = { defs={0x080485a5,0x080485a7} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v4292[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v4292[32]) 1[33])))))) }
        ?1      = { defs={} expr=v4261[1] }
        pf      = { defs={0x080485a5,0x080485a7} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v4292[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v4292[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v4292[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v4292[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v4292[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v4292[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v4292[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v4292[32] 1[32]))))))) }
        ?3      = { defs={} expr=v4263[1] }
        af      = { defs={0x080485a5,0x080485a7} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v4292[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v4292[32]) 1[33])))))) }
        ?5      = { defs={} expr=v4265[1] }
        zf      = { defs={0x080485a5,0x080485a7} expr=(zerop[1] (add[32] v4292[32] 1[32])) }
        sf      = { defs={0x080485a5,0x080485a7} expr=(extract[1] 31[32] 32[32] (add[32] v4292[32] 1[32])) }
        tf      = { defs={} expr=v4268[1] }
        if      = { defs={} expr=v4269[1] }
        df      = { defs={} expr=v4270[1] }
        of      = { defs={0x080485a5,0x080485a7} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v4292[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v4292[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v4292[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v4292[32]) 1[33])))))) }
        iopl0   = { defs={} expr=v4272[1] }
        iopl1   = { defs={} expr=v4273[1] }
        nt      = { defs={} expr=v4274[1] }
        ?15     = { defs={} expr=v4275[1] }
        rf      = { defs={} expr=v4276[1] }
        vm      = { defs={} expr=v4277[1] }
        ac      = { defs={} expr=v4278[1] }
        vif     = { defs={} expr=v4279[1] }
        vip     = { defs={} expr=v4280[1] }
        id      = { defs={} expr=v4281[1] }
        ?22     = { defs={} expr=v4282[1] }
        ?23     = { defs={} expr=v4283[1] }
        ?24     = { defs={} expr=v4284[1] }
        ?25     = { defs={} expr=v4285[1] }
        ?26     = { defs={} expr=v4286[1] }
        ?27     = { defs={} expr=v4287[1] }
        ?28     = { defs={} expr=v4288[1] }
        ?29     = { defs={} expr=v4289[1] }
        ?30     = { defs={} expr=v4290[1] }
        ?31     = { defs={} expr=v4291[1] }
        ip      = { defs={0x080485a5,0x080485a7} expr=0x080485aa[32] }
    memory:
        address = { defs={} expr=v4249[32] }
          value = { defs={} expr=v4292[32] }
          flags = { size=4; read-only }
    ip = defs={0x080485a5,0x080485a7} expr=0x080485aa[32]
0x80485aa:jne    0x080485a0<<Insn>>
    registers:
        ax      = { defs={0x080485a5} expr=v4292[32] }
        cx      = { defs={} expr=v4247[32] }
        dx      = { defs={} expr=v4248[32] }
        bx      = { defs={} expr=v4249[32] }
        sp      = { defs={} expr=v4250[32] }
        bp      = { defs={} expr=v4251[32] }
        si      = { defs={} expr=v4252[32] }
        di      = { defs={} expr=v4253[32] }
        es      = { defs={} expr=v4254[16] }
        cs      = { defs={} expr=v4255[16] }
        ss      = { defs={} expr=v4256[16] }
        ds      = { defs={} expr=v4257[16] }
        fs      = { defs={} expr=v4258[16] }
        gs      = { defs={} expr=v4259[16] }
        cf      = { defs={0x080485a5,0x080485a7} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v4292[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v4292[32]) 1[33])))))) }
        ?1      = { defs={} expr=v4261[1] }
        pf      = { defs={0x080485a5,0x080485a7} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v4292[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v4292[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v4292[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v4292[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v4292[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v4292[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v4292[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v4292[32] 1[32]))))))) }
        ?3      = { defs={} expr=v4263[1] }
        af      = { defs={0x080485a5,0x080485a7} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v4292[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v4292[32]) 1[33])))))) }
        ?5      = { defs={} expr=v4265[1] }
        zf      = { defs={0x080485a5,0x080485a7} expr=(zerop[1] (add[32] v4292[32] 1[32])) }
        sf      = { defs={0x080485a5,0x080485a7} expr=(extract[1] 31[32] 32[32] (add[32] v4292[32] 1[32])) }
        tf      = { defs={} expr=v4268[1] }
        if      = { defs={} expr=v4269[1] }
        df      = { defs={} expr=v4270[1] }
        of      = { defs={0x080485a5,0x080485a7} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v4292[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v4292[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v4292[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v4292[32]) 1[33])))))) }
        iopl0   = { defs={} expr=v4272[1] }
        iopl1   = { defs={} expr=v4273[1] }
        nt      = { defs={} expr=v4274[1] }
        ?15     = { defs={} expr=v4275[1] }
        rf      = { defs={} expr=v4276[1] }
        vm      = { defs={} expr=v4277[1] }
        ac      = { defs={} expr=v4278[1] }
        vif     = { defs={} expr=v4279[1] }
        vip     = { defs={} expr=v4280[1] }
        id      = { defs={} expr=v4281[1] }
        ?22     = { defs={} expr=v4282[1] }
        ?23     = { defs={} expr=v4283[1] }
        ?24     = { defs={} expr=v4284[1] }
        ?25     = { defs={} expr=v4285[1] }
        ?26     = { defs={} expr=v4286[1] }
        ?27     = { defs={} expr=v4287[1] }
        ?28     = { defs={} expr=v4288[1] }
        ?29     = { defs={} expr=v4289[1] }
        ?30     = { defs={} expr=v4290[1] }
        ?31     = { defs={} expr=v4291[1] }
        ip      = { defs={0x080485a5,0x080485a7,0x080485aa} expr=(ite[32] (invert[1] (zerop[1] (add[32] v4292[32] 1[32]))) 0x080485a0[32] 0x080485ac[32]) }
    memory:
        address = { defs={} expr=v4249[32] }
          value = { defs={} expr=v4292[32] }
          flags = { size=4; read-only }
    ip = defs={0x080485a5,0x080485a7,0x080485aa} expr=(ite[32] (invert[1] (zerop[1] (add[32] v4292[32] 1[32]))) 0x080485a0[32] 0x080485ac[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485ac:pop    eax
    registers:
        ax      = { defs={0x080485ac} expr=v4387[32] }
        cx      = { defs={} expr=v4342[32] }
        dx      = { defs={} expr=v4343[32] }
        bx      = { defs={} expr=v4344[32] }
        sp      = { defs={0x080485ac} expr=(add[32] v4345[32] 4[32]) }
        bp      = { defs={} expr=v4346[32] }
        si      = { defs={} expr=v4347[32] }
        di      = { defs={} expr=v4348[32] }
        es      = { defs={} expr=v4349[16] }
        cs      = { defs={} expr=v4350[16] }
        ss      = { defs={} expr=v4351[16] }
        ds      = { defs={} expr=v4352[16] }
        fs      = { defs={} expr=v4353[16] }
        gs      = { defs={} expr=v4354[16] }
        cf      = { defs={} expr=v4355[1] }
        ?1      = { defs={} expr=v4356[1] }
        pf      = { defs={} expr=v4357[1] }
        ?3      = { defs={} expr=v4358[1] }
        af      = { defs={} expr=v4359[1] }
        ?5      = { defs={} expr=v4360[1] }
        zf      = { defs={} expr=v4361[1] }
        sf      = { defs={} expr=v4362[1] }
        tf      = { defs={} expr=v4363[1] }
        if      = { defs={} expr=v4364[1] }
        df      = { defs={} expr=v4365[1] }
        of      = { defs={} expr=v4366[1] }
        iopl0   = { defs={} expr=v4367[1] }
        iopl1   = { defs={} expr=v4368[1] }
        nt      = { defs={} expr=v4369[1] }
        ?15     = { defs={} expr=v4370[1] }
        rf      = { defs={} expr=v4371[1] }
        vm      = { defs={} expr=v4372[1] }
        ac      = { defs={} expr=v4373[1] }
        vif     = { defs={} expr=v4374[1] }
        vip     = { defs={} expr=v4375[1] }
        id      = { defs={} expr=v4376[1] }
        ?22     = { defs={} expr=v4377[1] }
        ?23     = { defs={} expr=v4378[1] }
        ?24     = { defs={} expr=v4379[1] }
        ?25     = { defs={} expr=v4380[1] }
        ?26     = { defs={} expr=v4381[1] }
        ?27     = { defs={} expr=v4382[1] }
        ?28     = { defs={} expr=v4383[1] }
        ?29     = { defs={} expr=v4384[1] }
        ?30     = { defs={} expr=v4385[1] }
        ?31     = { defs={} expr=v4386[1] }
        ip      = { defs={0x080485ac} expr=0x080485ad[32] }
    memory:
        address = { defs={} expr=v4345[32] }
          value = { defs={} expr=v4387[32] }
          flags = { size=4; read-only }
    ip = defs={0x080485ac} expr=0x080485ad[32]
0x80485ad:pop    ebx
    registers:
        ax      = { defs={0x080485ac} expr=v4387[32] }
        cx      = { defs={} expr=v4342[32] }
        dx      = { defs={} expr=v4343[32] }
        bx      = { defs={0x080485ad} expr=v4388[32] }
        sp      = { defs={0x080485ac,0x080485ad} expr=(add[32] (add[32] v4345[32] 4[32]) 4[32]) }
        bp      = { defs={} expr=v4346[32] }
        si      = { defs={} expr=v4347[32] }
        di      = { defs={} expr=v4348[32] }
        es      = { defs={} expr=v4349[16] }
        cs      = { defs={} expr=v4350[16] }
        ss      = { defs={} expr=v4351[16] }
        ds      = { defs={} expr=v4352[16] }
        fs      = { defs={} expr=v4353[16] }
        gs      = { defs={} expr=v4354[16] }
        cf      = { defs={} expr=v4355[1] }
        ?1      = { defs={} expr=v4356[1] }
        pf      = { defs={} expr=v4357[1] }
        ?3      = { defs={} expr=v4358[1] }
        af      = { defs={} expr=v4359[1] }
        ?5      = { defs={} expr=v4360[1] }
        zf      = { defs={} expr=v4361[1] }
        sf      = { defs={} expr=v4362[1] }
        tf      = { defs={} expr=v4363[1] }
        if      = { defs={} expr=v4364[1] }
        df      = { defs={} expr=v4365[1] }
        of      = { defs={} expr=v4366[1] }
        iopl0   = { defs={} expr=v4367[1] }
        iopl1   = { defs={} expr=v4368[1] }
        nt      = { defs={} expr=v4369[1] }
        ?15     = { defs={} expr=v4370[1] }
        rf      = { defs={} expr=v4371[1] }
        vm      = { defs={} expr=v4372[1] }
        ac      = { defs={} expr=v4373[1] }
        vif     = { defs={} expr=v4374[1] }
        vip     = { defs={} expr=v4375[1] }
        id      = { defs={} expr=v4376[1] }
        ?22     = { defs={} expr=v4377[1] }
        ?23     = { defs={} expr=v4378[1] }
        ?24     = { defs={} expr=v4379[1] }
        ?25     = { defs={} expr=v4380[1] }
        ?26     = { defs={} expr=v4381[1] }
        ?27     = { defs={} expr=v4382[1] }
        ?28     = { defs={} expr=v4383[1] }
        ?29     = { defs={} expr=v4384[1] }
        ?30     = { defs={} expr=v4385[1] }
        ?31     = { defs={} expr=v4386[1] }
        ip      = { defs={0x080485ac,0x080485ad} expr=0x080485ae[32] }
    memory:
        address = { defs={} expr=v4345[32] }
          value = { defs={} expr=v4387[32] }
          flags = { size=4; read-only }
        address = { defs={0x080485ac} expr=(add[32] v4345[32] 4[32]) }
          value = { defs={} expr=v4388[32] }
          flags = { size=4; read-only }
    ip = defs={0x080485ac,0x080485ad} expr=0x080485ae[32]
0x80485ae:pop    ebp
    registers:
        ax      = { defs={0x080485ac} expr=v4387[32] }
        cx      = { defs={} expr=v4342[32] }
        dx      = { defs={} expr=v4343[32] }
        bx      = { defs={0x080485ad} expr=v4388[32] }
        sp      = { defs={0x080485ac,0x080485ad,0x080485ae} expr=(add[32] (add[32] (add[32] v4345[32] 4[32]) 4[32]) 4[32]) }
        bp      = { defs={0x080485ae} expr=v4389[32] }
        si      = { defs={} expr=v4347[32] }
        di      = { defs={} expr=v4348[32] }
        es      = { defs={} expr=v4349[16] }
        cs      = { defs={} expr=v4350[16] }
        ss      = { defs={} expr=v4351[16] }
        ds      = { defs={} expr=v4352[16] }
        fs      = { defs={} expr=v4353[16] }
        gs      = { defs={} expr=v4354[16] }
        cf      = { defs={} expr=v4355[1] }
        ?1      = { defs={} expr=v4356[1] }
        pf      = { defs={} expr=v4357[1] }
        ?3      = { defs={} expr=v4358[1] }
        af      = { defs={} expr=v4359[1] }
        ?5      = { defs={} expr=v4360[1] }
        zf      = { defs={} expr=v4361[1] }
        sf      = { defs={} expr=v4362[1] }
        tf      = { defs={} expr=v4363[1] }
        if      = { defs={} expr=v4364[1] }
        df      = { defs={} expr=v4365[1] }
        of      = { defs={} expr=v4366[1] }
        iopl0   = { defs={} expr=v4367[1] }
        iopl1   = { defs={} expr=v4368[1] }
        nt      = { defs={} expr=v4369[1] }
        ?15     = { defs={} expr=v4370[1] }
        rf      = { defs={} expr=v4371[1] }
        vm      = { defs={} expr=v4372[1] }
        ac      = { defs={} expr=v4373[1] }
        vif     = { defs={} expr=v4374[1] }
        vip     = { defs={} expr=v4375[1] }
        id      = { defs={} expr=v4376[1] }
        ?22     = { defs={} expr=v4377[1] }
        ?23     = { defs={} expr=v4378[1] }
        ?24     = { defs={} expr=v4379[1] }
        ?25     = { defs={} expr=v4380[1] }
        ?26     = { defs={} expr=v4381[1] }
        ?27     = { defs={} expr=v4382[1] }
        ?28     = { defs={} expr=v4383[1] }
        ?29     = { defs={} expr=v4384[1] }
        ?30     = { defs={} expr=v4385[1] }
        ?31     = { defs={} expr=v4386[1] }
        ip      = { defs={0x080485ac,0x080485ad,0x080485ae} expr=0x080485af[32] }
    memory:
        address = { defs={} expr=v4345[32] }
          value = { defs={} expr=v4387[32] }
          flags = { size=4; read-only }
        address = { defs={0x080485ac} expr=(add[32] v4345[32] 4[32]) }
          value = { defs={} expr=v4388[32] }
          flags = { size=4; read-only }
        address = { defs={0x080485ac,0x080485ad} expr=(add[32] (add[32] v4345[32] 4[32]) 4[32]) }
          value = { defs={} expr=v4389[32] }
          flags = { size=4; read-only }
    ip = defs={0x080485ac,0x080485ad,0x080485ae} expr=0x080485af[32]
0x80485af:ret    
    registers:
        ax      = { defs={0x080485ac} expr=v4387[32] }
        cx      = { defs={} expr=v4342[32] }
        dx      = { defs={} expr=v4343[32] }
        bx      = { defs={0x080485ad} expr=v4388[32] }
        sp      = { defs={0x080485ac,0x080485ad,0x080485ae,0x080485af} expr=(add[32] (add[32] (add[32] (add[32] v4345[32] 4[32]) 4[32]) 4[32]) 4[32]) }
        bp      = { defs={0x080485ae} expr=v4389[32] }
        si      = { defs={} expr=v4347[32] }
        di      = { defs={} expr=v4348[32] }
        es      = { defs={} expr=v4349[16] }
        cs      = { defs={} expr=v4350[16] }
        ss      = { defs={} expr=v4351[16] }
        ds      = { defs={} expr=v4352[16] }
        fs      = { defs={} expr=v4353[16] }
        gs      = { defs={} expr=v4354[16] }
        cf      = { defs={} expr=v4355[1] }
        ?1      = { defs={} expr=v4356[1] }
        pf      = { defs={} expr=v4357[1] }
        ?3      = { defs={} expr=v4358[1] }
        af      = { defs={} expr=v4359[1] }
        ?5      = { defs={} expr=v4360[1] }
        zf      = { defs={} expr=v4361[1] }
        sf      = { defs={} expr=v4362[1] }
        tf      = { defs={} expr=v4363[1] }
        if      = { defs={} expr=v4364[1] }
        df      = { defs={} expr=v4365[1] }
        of      = { defs={} expr=v4366[1] }
        iopl0   = { defs={} expr=v4367[1] }
        iopl1   = { defs={} expr=v4368[1] }
        nt      = { defs={} expr=v4369[1] }
        ?15     = { defs={} expr=v4370[1] }
        rf      = { defs={} expr=v4371[1] }
        vm      = { defs={} expr=v4372[1] }
        ac      = { defs={} expr=v4373[1] }
        vif     = { defs={} expr=v4374[1] }
        vip     = { defs={} expr=v4375[1] }
        id      = { defs={} expr=v4376[1] }
        ?22     = { defs={} expr=v4377[1] }
        ?23     = { defs={} expr=v4378[1] }
        ?24     = { defs={} expr=v4379[1] }
        ?25     = { defs={} expr=v4380[1] }
        ?26     = { defs={} expr=v4381[1] }
        ?27     = { defs={} expr=v4382[1] }
        ?28     = { defs={} expr=v4383[1] }
        ?29     = { defs={} expr=v4384[1] }
        ?30     = { defs={} expr=v4385[1] }
        ?31     = { defs={} expr=v4386[1] }
        ip      = { defs={0x080485af} expr=v4390[32] }
    memory:
        address = { defs={} expr=v4345[32] }
          value = { defs={} expr=v4387[32] }
          flags = { size=4; read-only }
        address = { defs={0x080485ac} expr=(add[32] v4345[32] 4[32]) }
          value = { defs={} expr=v4388[32] }
          flags = { size=4; read-only }
        address = { defs={0x080485ac,0x080485ad} expr=(add[32] (add[32] v4345[32] 4[32]) 4[32]) }
          value = { defs={} expr=v4389[32] }
          flags = { size=4; read-only }
        address = { defs={0x080485ac,0x080485ad,0x080485ae} expr=(add[32] (add[32] (add[32] v4345[32] 4[32]) 4[32]) 4[32]) }
          value = { defs={} expr=v4390[32] }
          flags = { size=4; read-only }
    ip = defs={0x080485af} expr=v4390[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485b0:push   ebp
    registers:
        ax      = { defs={} expr=v4439[32] }
        cx      = { defs={} expr=v4440[32] }
        dx      = { defs={} expr=v4441[32] }
        bx      = { defs={} expr=v4442[32] }
        sp      = { defs={0x080485b0} expr=(add[32] v4443[32] -4[32]) }
        bp      = { defs={} expr=v4444[32] }
        si      = { defs={} expr=v4445[32] }
        di      = { defs={} expr=v4446[32] }
        es      = { defs={} expr=v4447[16] }
        cs      = { defs={} expr=v4448[16] }
        ss      = { defs={} expr=v4449[16] }
        ds      = { defs={} expr=v4450[16] }
        fs      = { defs={} expr=v4451[16] }
        gs      = { defs={} expr=v4452[16] }
        cf      = { defs={} expr=v4453[1] }
        ?1      = { defs={} expr=v4454[1] }
        pf      = { defs={} expr=v4455[1] }
        ?3      = { defs={} expr=v4456[1] }
        af      = { defs={} expr=v4457[1] }
        ?5      = { defs={} expr=v4458[1] }
        zf      = { defs={} expr=v4459[1] }
        sf      = { defs={} expr=v4460[1] }
        tf      = { defs={} expr=v4461[1] }
        if      = { defs={} expr=v4462[1] }
        df      = { defs={} expr=v4463[1] }
        of      = { defs={} expr=v4464[1] }
        iopl0   = { defs={} expr=v4465[1] }
        iopl1   = { defs={} expr=v4466[1] }
        nt      = { defs={} expr=v4467[1] }
        ?15     = { defs={} expr=v4468[1] }
        rf      = { defs={} expr=v4469[1] }
        vm      = { defs={} expr=v4470[1] }
        ac      = { defs={} expr=v4471[1] }
        vif     = { defs={} expr=v4472[1] }
        vip     = { defs={} expr=v4473[1] }
        id      = { defs={} expr=v4474[1] }
        ?22     = { defs={} expr=v4475[1] }
        ?23     = { defs={} expr=v4476[1] }
        ?24     = { defs={} expr=v4477[1] }
        ?25     = { defs={} expr=v4478[1] }
        ?26     = { defs={} expr=v4479[1] }
        ?27     = { defs={} expr=v4480[1] }
        ?28     = { defs={} expr=v4481[1] }
        ?29     = { defs={} expr=v4482[1] }
        ?30     = { defs={} expr=v4483[1] }
        ?31     = { defs={} expr=v4484[1] }
        ip      = { defs={0x080485b0} expr=0x080485b1[32] }
    memory:
        address = { defs={0x080485b0} expr=(add[32] v4443[32] -4[32]) }
          value = { defs={0x080485b0} expr=v4444[32] }
          flags = { size=4 }
    ip = defs={0x080485b0} expr=0x080485b1[32]
0x80485b1:mov    ebp, esp
    registers:
        ax      = { defs={} expr=v4439[32] }
        cx      = { defs={} expr=v4440[32] }
        dx      = { defs={} expr=v4441[32] }
        bx      = { defs={} expr=v4442[32] }
        sp      = { defs={0x080485b0} expr=(add[32] v4443[32] -4[32]) }
        bp      = { defs={0x080485b0,0x080485b1} expr=(add[32] v4443[32] -4[32]) }
        si      = { defs={} expr=v4445[32] }
        di      = { defs={} expr=v4446[32] }
        es      = { defs={} expr=v4447[16] }
        cs      = { defs={} expr=v4448[16] }
        ss      = { defs={} expr=v4449[16] }
        ds      = { defs={} expr=v4450[16] }
        fs      = { defs={} expr=v4451[16] }
        gs      = { defs={} expr=v4452[16] }
        cf      = { defs={} expr=v4453[1] }
        ?1      = { defs={} expr=v4454[1] }
        pf      = { defs={} expr=v4455[1] }
        ?3      = { defs={} expr=v4456[1] }
        af      = { defs={} expr=v4457[1] }
        ?5      = { defs={} expr=v4458[1] }
        zf      = { defs={} expr=v4459[1] }
        sf      = { defs={} expr=v4460[1] }
        tf      = { defs={} expr=v4461[1] }
        if      = { defs={} expr=v4462[1] }
        df      = { defs={} expr=v4463[1] }
        of      = { defs={} expr=v4464[1] }
        iopl0   = { defs={} expr=v4465[1] }
        iopl1   = { defs={} expr=v4466[1] }
        nt      = { defs={} expr=v4467[1] }
        ?15     = { defs={} expr=v4468[1] }
        rf      = { defs={} expr=v4469[1] }
        vm      = { defs={} expr=v4470[1] }
        ac      = { defs={} expr=v4471[1] }
        vif     = { defs={} expr=v4472[1] }
        vip     = { defs={} expr=v4473[1] }
        id      = { defs={} expr=v4474[1] }
        ?22     = { defs={} expr=v4475[1] }
        ?23     = { defs={} expr=v4476[1] }
        ?24     = { defs={} expr=v4477[1] }
        ?25     = { defs={} expr=v4478[1] }
        ?26     = { defs={} expr=v4479[1] }
        ?27     = { defs={} expr=v4480[1] }
        ?28     = { defs={} expr=v4481[1] }
        ?29     = { defs={} expr=v4482[1] }
        ?30     = { defs={} expr=v4483[1] }
        ?31     = { defs={} expr=v4484[1] }
        ip      = { defs={0x080485b0,0x080485b1} expr=0x080485b3[32] }
    memory:
        address = { defs={0x080485b0} expr=(add[32] v4443[32] -4[32]) }
          value = { defs={0x080485b0} expr=v4444[32] }
          flags = { size=4 }
    ip = defs={0x080485b0,0x080485b1} expr=0x080485b3[32]
0x80485b3:push   ebx
    registers:
        ax      = { defs={} expr=v4439[32] }
        cx      = { defs={} expr=v4440[32] }
        dx      = { defs={} expr=v4441[32] }
        bx      = { defs={} expr=v4442[32] }
        sp      = { defs={0x080485b0,0x080485b3} expr=(add[32] (add[32] v4443[32] -4[32]) -4[32]) }
        bp      = { defs={0x080485b0,0x080485b1} expr=(add[32] v4443[32] -4[32]) }
        si      = { defs={} expr=v4445[32] }
        di      = { defs={} expr=v4446[32] }
        es      = { defs={} expr=v4447[16] }
        cs      = { defs={} expr=v4448[16] }
        ss      = { defs={} expr=v4449[16] }
        ds      = { defs={} expr=v4450[16] }
        fs      = { defs={} expr=v4451[16] }
        gs      = { defs={} expr=v4452[16] }
        cf      = { defs={} expr=v4453[1] }
        ?1      = { defs={} expr=v4454[1] }
        pf      = { defs={} expr=v4455[1] }
        ?3      = { defs={} expr=v4456[1] }
        af      = { defs={} expr=v4457[1] }
        ?5      = { defs={} expr=v4458[1] }
        zf      = { defs={} expr=v4459[1] }
        sf      = { defs={} expr=v4460[1] }
        tf      = { defs={} expr=v4461[1] }
        if      = { defs={} expr=v4462[1] }
        df      = { defs={} expr=v4463[1] }
        of      = { defs={} expr=v4464[1] }
        iopl0   = { defs={} expr=v4465[1] }
        iopl1   = { defs={} expr=v4466[1] }
        nt      = { defs={} expr=v4467[1] }
        ?15     = { defs={} expr=v4468[1] }
        rf      = { defs={} expr=v4469[1] }
        vm      = { defs={} expr=v4470[1] }
        ac      = { defs={} expr=v4471[1] }
        vif     = { defs={} expr=v4472[1] }
        vip     = { defs={} expr=v4473[1] }
        id      = { defs={} expr=v4474[1] }
        ?22     = { defs={} expr=v4475[1] }
        ?23     = { defs={} expr=v4476[1] }
        ?24     = { defs={} expr=v4477[1] }
        ?25     = { defs={} expr=v4478[1] }
        ?26     = { defs={} expr=v4479[1] }
        ?27     = { defs={} expr=v4480[1] }
        ?28     = { defs={} expr=v4481[1] }
        ?29     = { defs={} expr=v4482[1] }
        ?30     = { defs={} expr=v4483[1] }
        ?31     = { defs={} expr=v4484[1] }
        ip      = { defs={0x080485b0,0x080485b1,0x080485b3} expr=0x080485b4[32] }
    memory:
        address = { defs={0x080485b0} expr=(add[32] v4443[32] -4[32]) }
          value = { defs={0x080485b0} expr=v4444[32] }
          flags = { size=4 }
        address = { defs={0x080485b0,0x080485b3} expr=(add[32] (add[32] v4443[32] -4[32]) -4[32]) }
          value = { defs={0x080485b3} expr=v4442[32] }
          flags = { size=4 }
    ip = defs={0x080485b0,0x080485b1,0x080485b3} expr=0x080485b4[32]
0x80485b4:push   eax
    registers:
        ax      = { defs={} expr=v4439[32] }
        cx      = { defs={} expr=v4440[32] }
        dx      = { defs={} expr=v4441[32] }
        bx      = { defs={} expr=v4442[32] }
        sp      = { defs={0x080485b0,0x080485b3,0x080485b4} expr=(add[32] (add[32] (add[32] v4443[32] -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x080485b0,0x080485b1} expr=(add[32] v4443[32] -4[32]) }
        si      = { defs={} expr=v4445[32] }
        di      = { defs={} expr=v4446[32] }
        es      = { defs={} expr=v4447[16] }
        cs      = { defs={} expr=v4448[16] }
        ss      = { defs={} expr=v4449[16] }
        ds      = { defs={} expr=v4450[16] }
        fs      = { defs={} expr=v4451[16] }
        gs      = { defs={} expr=v4452[16] }
        cf      = { defs={} expr=v4453[1] }
        ?1      = { defs={} expr=v4454[1] }
        pf      = { defs={} expr=v4455[1] }
        ?3      = { defs={} expr=v4456[1] }
        af      = { defs={} expr=v4457[1] }
        ?5      = { defs={} expr=v4458[1] }
        zf      = { defs={} expr=v4459[1] }
        sf      = { defs={} expr=v4460[1] }
        tf      = { defs={} expr=v4461[1] }
        if      = { defs={} expr=v4462[1] }
        df      = { defs={} expr=v4463[1] }
        of      = { defs={} expr=v4464[1] }
        iopl0   = { defs={} expr=v4465[1] }
        iopl1   = { defs={} expr=v4466[1] }
        nt      = { defs={} expr=v4467[1] }
        ?15     = { defs={} expr=v4468[1] }
        rf      = { defs={} expr=v4469[1] }
        vm      = { defs={} expr=v4470[1] }
        ac      = { defs={} expr=v4471[1] }
        vif     = { defs={} expr=v4472[1] }
        vip     = { defs={} expr=v4473[1] }
        id      = { defs={} expr=v4474[1] }
        ?22     = { defs={} expr=v4475[1] }
        ?23     = { defs={} expr=v4476[1] }
        ?24     = { defs={} expr=v4477[1] }
        ?25     = { defs={} expr=v4478[1] }
        ?26     = { defs={} expr=v4479[1] }
        ?27     = { defs={} expr=v4480[1] }
        ?28     = { defs={} expr=v4481[1] }
        ?29     = { defs={} expr=v4482[1] }
        ?30     = { defs={} expr=v4483[1] }
        ?31     = { defs={} expr=v4484[1] }
        ip      = { defs={0x080485b0,0x080485b1,0x080485b3,0x080485b4} expr=0x080485b5[32] }
    memory:
        address = { defs={0x080485b0} expr=(add[32] v4443[32] -4[32]) }
          value = { defs={0x080485b0} expr=v4444[32] }
          flags = { size=4 }
        address = { defs={0x080485b0,0x080485b3} expr=(add[32] (add[32] v4443[32] -4[32]) -4[32]) }
          value = { defs={0x080485b3} expr=v4442[32] }
          flags = { size=4 }
        address = { defs={0x080485b0,0x080485b3,0x080485b4} expr=(add[32] (add[32] (add[32] v4443[32] -4[32]) -4[32]) -4[32]) }
          value = { defs={0x080485b4} expr=v4439[32] }
          flags = { size=4 }
    ip = defs={0x080485b0,0x080485b1,0x080485b3,0x080485b4} expr=0x080485b5[32]
0x80485b5:call   0x080485ba<<Insn>>
    registers:
        ax      = { defs={} expr=v4439[32] }
        cx      = { defs={} expr=v4440[32] }
        dx      = { defs={} expr=v4441[32] }
        bx      = { defs={} expr=v4442[32] }
        sp      = { defs={0x080485b0,0x080485b3,0x080485b4,0x080485b5} expr=(add[32] (add[32] (add[32] (add[32] v4443[32] -4[32]) -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x080485b0,0x080485b1} expr=(add[32] v4443[32] -4[32]) }
        si      = { defs={} expr=v4445[32] }
        di      = { defs={} expr=v4446[32] }
        es      = { defs={} expr=v4447[16] }
        cs      = { defs={} expr=v4448[16] }
        ss      = { defs={} expr=v4449[16] }
        ds      = { defs={} expr=v4450[16] }
        fs      = { defs={} expr=v4451[16] }
        gs      = { defs={} expr=v4452[16] }
        cf      = { defs={} expr=v4453[1] }
        ?1      = { defs={} expr=v4454[1] }
        pf      = { defs={} expr=v4455[1] }
        ?3      = { defs={} expr=v4456[1] }
        af      = { defs={} expr=v4457[1] }
        ?5      = { defs={} expr=v4458[1] }
        zf      = { defs={} expr=v4459[1] }
        sf      = { defs={} expr=v4460[1] }
        tf      = { defs={} expr=v4461[1] }
        if      = { defs={} expr=v4462[1] }
        df      = { defs={} expr=v4463[1] }
        of      = { defs={} expr=v4464[1] }
        iopl0   = { defs={} expr=v4465[1] }
        iopl1   = { defs={} expr=v4466[1] }
        nt      = { defs={} expr=v4467[1] }
        ?15     = { defs={} expr=v4468[1] }
        rf      = { defs={} expr=v4469[1] }
        vm      = { defs={} expr=v4470[1] }
        ac      = { defs={} expr=v4471[1] }
        vif     = { defs={} expr=v4472[1] }
        vip     = { defs={} expr=v4473[1] }
        id      = { defs={} expr=v4474[1] }
        ?22     = { defs={} expr=v4475[1] }
        ?23     = { defs={} expr=v4476[1] }
        ?24     = { defs={} expr=v4477[1] }
        ?25     = { defs={} expr=v4478[1] }
        ?26     = { defs={} expr=v4479[1] }
        ?27     = { defs={} expr=v4480[1] }
        ?28     = { defs={} expr=v4481[1] }
        ?29     = { defs={} expr=v4482[1] }
        ?30     = { defs={} expr=v4483[1] }
        ?31     = { defs={} expr=v4484[1] }
        ip      = { defs={0x080485b5} expr=0x080485ba[32] }
    memory:
        address = { defs={0x080485b0} expr=(add[32] v4443[32] -4[32]) }
          value = { defs={0x080485b0} expr=v4444[32] }
          flags = { size=4 }
        address = { defs={0x080485b0,0x080485b3} expr=(add[32] (add[32] v4443[32] -4[32]) -4[32]) }
          value = { defs={0x080485b3} expr=v4442[32] }
          flags = { size=4 }
        address = { defs={0x080485b0,0x080485b3,0x080485b4} expr=(add[32] (add[32] (add[32] v4443[32] -4[32]) -4[32]) -4[32]) }
          value = { defs={0x080485b4} expr=v4439[32] }
          flags = { size=4 }
        address = { defs={0x080485b0,0x080485b3,0x080485b4,0x080485b5} expr=(add[32] (add[32] (add[32] (add[32] v4443[32] -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x080485b0,0x080485b1,0x080485b3,0x080485b4,0x080485b5} expr=0x080485ba[32] }
          flags = { size=4 }
    ip = defs={0x080485b5} expr=0x080485ba[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485ba:pop    ebx
    registers:
        ax      = { defs={} expr=v4533[32] }
        cx      = { defs={} expr=v4534[32] }
        dx      = { defs={} expr=v4535[32] }
        bx      = { defs={0x080485ba} expr=v4579[32] }
        sp      = { defs={0x080485ba} expr=(add[32] v4537[32] 4[32]) }
        bp      = { defs={} expr=v4538[32] }
        si      = { defs={} expr=v4539[32] }
        di      = { defs={} expr=v4540[32] }
        es      = { defs={} expr=v4541[16] }
        cs      = { defs={} expr=v4542[16] }
        ss      = { defs={} expr=v4543[16] }
        ds      = { defs={} expr=v4544[16] }
        fs      = { defs={} expr=v4545[16] }
        gs      = { defs={} expr=v4546[16] }
        cf      = { defs={} expr=v4547[1] }
        ?1      = { defs={} expr=v4548[1] }
        pf      = { defs={} expr=v4549[1] }
        ?3      = { defs={} expr=v4550[1] }
        af      = { defs={} expr=v4551[1] }
        ?5      = { defs={} expr=v4552[1] }
        zf      = { defs={} expr=v4553[1] }
        sf      = { defs={} expr=v4554[1] }
        tf      = { defs={} expr=v4555[1] }
        if      = { defs={} expr=v4556[1] }
        df      = { defs={} expr=v4557[1] }
        of      = { defs={} expr=v4558[1] }
        iopl0   = { defs={} expr=v4559[1] }
        iopl1   = { defs={} expr=v4560[1] }
        nt      = { defs={} expr=v4561[1] }
        ?15     = { defs={} expr=v4562[1] }
        rf      = { defs={} expr=v4563[1] }
        vm      = { defs={} expr=v4564[1] }
        ac      = { defs={} expr=v4565[1] }
        vif     = { defs={} expr=v4566[1] }
        vip     = { defs={} expr=v4567[1] }
        id      = { defs={} expr=v4568[1] }
        ?22     = { defs={} expr=v4569[1] }
        ?23     = { defs={} expr=v4570[1] }
        ?24     = { defs={} expr=v4571[1] }
        ?25     = { defs={} expr=v4572[1] }
        ?26     = { defs={} expr=v4573[1] }
        ?27     = { defs={} expr=v4574[1] }
        ?28     = { defs={} expr=v4575[1] }
        ?29     = { defs={} expr=v4576[1] }
        ?30     = { defs={} expr=v4577[1] }
        ?31     = { defs={} expr=v4578[1] }
        ip      = { defs={0x080485ba} expr=0x080485bb[32] }
    memory:
        address = { defs={} expr=v4537[32] }
          value = { defs={} expr=v4579[32] }
          flags = { size=4; read-only }
    ip = defs={0x080485ba} expr=0x080485bb[32]
0x80485bb:add    ebx, 0x0000110e
    registers:
        ax      = { defs={} expr=v4533[32] }
        cx      = { defs={} expr=v4534[32] }
        dx      = { defs={} expr=v4535[32] }
        bx      = { defs={0x080485ba,0x080485bb} expr=(add[32] v4579[32] 4366[32]) }
        sp      = { defs={0x080485ba} expr=(add[32] v4537[32] 4[32]) }
        bp      = { defs={} expr=v4538[32] }
        si      = { defs={} expr=v4539[32] }
        di      = { defs={} expr=v4540[32] }
        es      = { defs={} expr=v4541[16] }
        cs      = { defs={} expr=v4542[16] }
        ss      = { defs={} expr=v4543[16] }
        ds      = { defs={} expr=v4544[16] }
        fs      = { defs={} expr=v4545[16] }
        gs      = { defs={} expr=v4546[16] }
        cf      = { defs={0x080485ba,0x080485bb} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v4579[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v4579[32]) 4366[33]))))) }
        ?1      = { defs={} expr=v4548[1] }
        pf      = { defs={0x080485ba,0x080485bb} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v4579[32] 4366[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v4579[32] 4366[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v4579[32] 4366[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v4579[32] 4366[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v4579[32] 4366[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v4579[32] 4366[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v4579[32] 4366[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v4579[32] 4366[32]))))))) }
        ?3      = { defs={} expr=v4550[1] }
        af      = { defs={0x080485ba,0x080485bb} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v4579[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v4579[32]) 4366[33]))))) }
        ?5      = { defs={} expr=v4552[1] }
        zf      = { defs={0x080485ba,0x080485bb} expr=(zerop[1] (add[32] v4579[32] 4366[32])) }
        sf      = { defs={0x080485ba,0x080485bb} expr=(extract[1] 31[32] 32[32] (add[32] v4579[32] 4366[32])) }
        tf      = { defs={} expr=v4555[1] }
        if      = { defs={} expr=v4556[1] }
        df      = { defs={} expr=v4557[1] }
        of      = { defs={0x080485ba,0x080485bb} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v4579[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v4579[32]) 4366[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v4579[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v4579[32]) 4366[33])))))) }
        iopl0   = { defs={} expr=v4559[1] }
        iopl1   = { defs={} expr=v4560[1] }
        nt      = { defs={} expr=v4561[1] }
        ?15     = { defs={} expr=v4562[1] }
        rf      = { defs={} expr=v4563[1] }
        vm      = { defs={} expr=v4564[1] }
        ac      = { defs={} expr=v4565[1] }
        vif     = { defs={} expr=v4566[1] }
        vip     = { defs={} expr=v4567[1] }
        id      = { defs={} expr=v4568[1] }
        ?22     = { defs={} expr=v4569[1] }
        ?23     = { defs={} expr=v4570[1] }
        ?24     = { defs={} expr=v4571[1] }
        ?25     = { defs={} expr=v4572[1] }
        ?26     = { defs={} expr=v4573[1] }
        ?27     = { defs={} expr=v4574[1] }
        ?28     = { defs={} expr=v4575[1] }
        ?29     = { defs={} expr=v4576[1] }
        ?30     = { defs={} expr=v4577[1] }
        ?31     = { defs={} expr=v4578[1] }
        ip      = { defs={0x080485ba,0x080485bb} expr=0x080485c1[32] }
    memory:
        address = { defs={} expr=v4537[32] }
          value = { defs={} expr=v4579[32] }
          flags = { size=4; read-only }
    ip = defs={0x080485ba,0x080485bb} expr=0x080485c1[32]
0x80485c1:call   0x08048390<__do_global_dtors_aux>
    registers:
        ax      = { defs={} expr=v4533[32] }
        cx      = { defs={} expr=v4534[32] }
        dx      = { defs={} expr=v4535[32] }
        bx      = { defs={0x080485ba,0x080485bb} expr=(add[32] v4579[32] 4366[32]) }
        sp      = { defs={0x080485ba,0x080485c1} expr=(add[32] (add[32] v4537[32] 4[32]) -4[32]) }
        bp      = { defs={} expr=v4538[32] }
        si      = { defs={} expr=v4539[32] }
        di      = { defs={} expr=v4540[32] }
        es      = { defs={} expr=v4541[16] }
        cs      = { defs={} expr=v4542[16] }
        ss      = { defs={} expr=v4543[16] }
        ds      = { defs={} expr=v4544[16] }
        fs      = { defs={} expr=v4545[16] }
        gs      = { defs={} expr=v4546[16] }
        cf      = { defs={0x080485ba,0x080485bb} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v4579[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v4579[32]) 4366[33]))))) }
        ?1      = { defs={} expr=v4548[1] }
        pf      = { defs={0x080485ba,0x080485bb} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v4579[32] 4366[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v4579[32] 4366[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v4579[32] 4366[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v4579[32] 4366[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v4579[32] 4366[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v4579[32] 4366[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v4579[32] 4366[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v4579[32] 4366[32]))))))) }
        ?3      = { defs={} expr=v4550[1] }
        af      = { defs={0x080485ba,0x080485bb} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v4579[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v4579[32]) 4366[33]))))) }
        ?5      = { defs={} expr=v4552[1] }
        zf      = { defs={0x080485ba,0x080485bb} expr=(zerop[1] (add[32] v4579[32] 4366[32])) }
        sf      = { defs={0x080485ba,0x080485bb} expr=(extract[1] 31[32] 32[32] (add[32] v4579[32] 4366[32])) }
        tf      = { defs={} expr=v4555[1] }
        if      = { defs={} expr=v4556[1] }
        df      = { defs={} expr=v4557[1] }
        of      = { defs={0x080485ba,0x080485bb} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v4579[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v4579[32]) 4366[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v4579[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v4579[32]) 4366[33])))))) }
        iopl0   = { defs={} expr=v4559[1] }
        iopl1   = { defs={} expr=v4560[1] }
        nt      = { defs={} expr=v4561[1] }
        ?15     = { defs={} expr=v4562[1] }
        rf      = { defs={} expr=v4563[1] }
        vm      = { defs={} expr=v4564[1] }
        ac      = { defs={} expr=v4565[1] }
        vif     = { defs={} expr=v4566[1] }
        vip     = { defs={} expr=v4567[1] }
        id      = { defs={} expr=v4568[1] }
        ?22     = { defs={} expr=v4569[1] }
        ?23     = { defs={} expr=v4570[1] }
        ?24     = { defs={} expr=v4571[1] }
        ?25     = { defs={} expr=v4572[1] }
        ?26     = { defs={} expr=v4573[1] }
        ?27     = { defs={} expr=v4574[1] }
        ?28     = { defs={} expr=v4575[1] }
        ?29     = { defs={} expr=v4576[1] }
        ?30     = { defs={} expr=v4577[1] }
        ?31     = { defs={} expr=v4578[1] }
        ip      = { defs={0x080485c1} expr=0x08048390[32] }
    memory:
        address = { defs={} expr=v4537[32] }
          value = { defs={} expr=v4579[32] }
          flags = { size=4; read-only }
        address = { defs={0x080485ba,0x080485c1} expr=(add[32] (add[32] v4537[32] 4[32]) -4[32]) }
          value = { defs={0x080485ba,0x080485bb,0x080485c1} expr=0x080485c6[32] }
          flags = { size=4 }
    ip = defs={0x080485c1} expr=0x08048390[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485c6:pop    eax
    registers:
        ax      = { defs={0x080485c6} expr=v4674[32] }
        cx      = { defs={} expr=v4629[32] }
        dx      = { defs={} expr=v4630[32] }
        bx      = { defs={} expr=v4631[32] }
        sp      = { defs={0x080485c6} expr=(add[32] v4632[32] 4[32]) }
        bp      = { defs={} expr=v4633[32] }
        si      = { defs={} expr=v4634[32] }
        di      = { defs={} expr=v4635[32] }
        es      = { defs={} expr=v4636[16] }
        cs      = { defs={} expr=v4637[16] }
        ss      = { defs={} expr=v4638[16] }
        ds      = { defs={} expr=v4639[16] }
        fs      = { defs={} expr=v4640[16] }
        gs      = { defs={} expr=v4641[16] }
        cf      = { defs={} expr=v4642[1] }
        ?1      = { defs={} expr=v4643[1] }
        pf      = { defs={} expr=v4644[1] }
        ?3      = { defs={} expr=v4645[1] }
        af      = { defs={} expr=v4646[1] }
        ?5      = { defs={} expr=v4647[1] }
        zf      = { defs={} expr=v4648[1] }
        sf      = { defs={} expr=v4649[1] }
        tf      = { defs={} expr=v4650[1] }
        if      = { defs={} expr=v4651[1] }
        df      = { defs={} expr=v4652[1] }
        of      = { defs={} expr=v4653[1] }
        iopl0   = { defs={} expr=v4654[1] }
        iopl1   = { defs={} expr=v4655[1] }
        nt      = { defs={} expr=v4656[1] }
        ?15     = { defs={} expr=v4657[1] }
        rf      = { defs={} expr=v4658[1] }
        vm      = { defs={} expr=v4659[1] }
        ac      = { defs={} expr=v4660[1] }
        vif     = { defs={} expr=v4661[1] }
        vip     = { defs={} expr=v4662[1] }
        id      = { defs={} expr=v4663[1] }
        ?22     = { defs={} expr=v4664[1] }
        ?23     = { defs={} expr=v4665[1] }
        ?24     = { defs={} expr=v4666[1] }
        ?25     = { defs={} expr=v4667[1] }
        ?26     = { defs={} expr=v4668[1] }
        ?27     = { defs={} expr=v4669[1] }
        ?28     = { defs={} expr=v4670[1] }
        ?29     = { defs={} expr=v4671[1] }
        ?30     = { defs={} expr=v4672[1] }
        ?31     = { defs={} expr=v4673[1] }
        ip      = { defs={0x080485c6} expr=0x080485c7[32] }
    memory:
        address = { defs={} expr=v4632[32] }
          value = { defs={} expr=v4674[32] }
          flags = { size=4; read-only }
    ip = defs={0x080485c6} expr=0x080485c7[32]
0x80485c7:pop    ebx
    registers:
        ax      = { defs={0x080485c6} expr=v4674[32] }
        cx      = { defs={} expr=v4629[32] }
        dx      = { defs={} expr=v4630[32] }
        bx      = { defs={0x080485c7} expr=v4675[32] }
        sp      = { defs={0x080485c6,0x080485c7} expr=(add[32] (add[32] v4632[32] 4[32]) 4[32]) }
        bp      = { defs={} expr=v4633[32] }
        si      = { defs={} expr=v4634[32] }
        di      = { defs={} expr=v4635[32] }
        es      = { defs={} expr=v4636[16] }
        cs      = { defs={} expr=v4637[16] }
        ss      = { defs={} expr=v4638[16] }
        ds      = { defs={} expr=v4639[16] }
        fs      = { defs={} expr=v4640[16] }
        gs      = { defs={} expr=v4641[16] }
        cf      = { defs={} expr=v4642[1] }
        ?1      = { defs={} expr=v4643[1] }
        pf      = { defs={} expr=v4644[1] }
        ?3      = { defs={} expr=v4645[1] }
        af      = { defs={} expr=v4646[1] }
        ?5      = { defs={} expr=v4647[1] }
        zf      = { defs={} expr=v4648[1] }
        sf      = { defs={} expr=v4649[1] }
        tf      = { defs={} expr=v4650[1] }
        if      = { defs={} expr=v4651[1] }
        df      = { defs={} expr=v4652[1] }
        of      = { defs={} expr=v4653[1] }
        iopl0   = { defs={} expr=v4654[1] }
        iopl1   = { defs={} expr=v4655[1] }
        nt      = { defs={} expr=v4656[1] }
        ?15     = { defs={} expr=v4657[1] }
        rf      = { defs={} expr=v4658[1] }
        vm      = { defs={} expr=v4659[1] }
        ac      = { defs={} expr=v4660[1] }
        vif     = { defs={} expr=v4661[1] }
        vip     = { defs={} expr=v4662[1] }
        id      = { defs={} expr=v4663[1] }
        ?22     = { defs={} expr=v4664[1] }
        ?23     = { defs={} expr=v4665[1] }
        ?24     = { defs={} expr=v4666[1] }
        ?25     = { defs={} expr=v4667[1] }
        ?26     = { defs={} expr=v4668[1] }
        ?27     = { defs={} expr=v4669[1] }
        ?28     = { defs={} expr=v4670[1] }
        ?29     = { defs={} expr=v4671[1] }
        ?30     = { defs={} expr=v4672[1] }
        ?31     = { defs={} expr=v4673[1] }
        ip      = { defs={0x080485c6,0x080485c7} expr=0x080485c8[32] }
    memory:
        address = { defs={} expr=v4632[32] }
          value = { defs={} expr=v4674[32] }
          flags = { size=4; read-only }
        address = { defs={0x080485c6} expr=(add[32] v4632[32] 4[32]) }
          value = { defs={} expr=v4675[32] }
          flags = { size=4; read-only }
    ip = defs={0x080485c6,0x080485c7} expr=0x080485c8[32]
0x80485c8:leave  
    registers:
        ax      = { defs={0x080485c6} expr=v4674[32] }
        cx      = { defs={} expr=v4629[32] }
        dx      = { defs={} expr=v4630[32] }
        bx      = { defs={0x080485c7} expr=v4675[32] }
        sp      = { defs={0x080485c8} expr=(add[32] v4633[32] 4[32]) }
        bp      = { defs={0x080485c8} expr=v4676[32] }
        si      = { defs={} expr=v4634[32] }
        di      = { defs={} expr=v4635[32] }
        es      = { defs={} expr=v4636[16] }
        cs      = { defs={} expr=v4637[16] }
        ss      = { defs={} expr=v4638[16] }
        ds      = { defs={} expr=v4639[16] }
        fs      = { defs={} expr=v4640[16] }
        gs      = { defs={} expr=v4641[16] }
        cf      = { defs={} expr=v4642[1] }
        ?1      = { defs={} expr=v4643[1] }
        pf      = { defs={} expr=v4644[1] }
        ?3      = { defs={} expr=v4645[1] }
        af      = { defs={} expr=v4646[1] }
        ?5      = { defs={} expr=v4647[1] }
        zf      = { defs={} expr=v4648[1] }
        sf      = { defs={} expr=v4649[1] }
        tf      = { defs={} expr=v4650[1] }
        if      = { defs={} expr=v4651[1] }
        df      = { defs={} expr=v4652[1] }
        of      = { defs={} expr=v4653[1] }
        iopl0   = { defs={} expr=v4654[1] }
        iopl1   = { defs={} expr=v4655[1] }
        nt      = { defs={} expr=v4656[1] }
        ?15     = { defs={} expr=v4657[1] }
        rf      = { defs={} expr=v4658[1] }
        vm      = { defs={} expr=v4659[1] }
        ac      = { defs={} expr=v4660[1] }
        vif     = { defs={} expr=v4661[1] }
        vip     = { defs={} expr=v4662[1] }
        id      = { defs={} expr=v4663[1] }
        ?22     = { defs={} expr=v4664[1] }
        ?23     = { defs={} expr=v4665[1] }
        ?24     = { defs={} expr=v4666[1] }
        ?25     = { defs={} expr=v4667[1] }
        ?26     = { defs={} expr=v4668[1] }
        ?27     = { defs={} expr=v4669[1] }
        ?28     = { defs={} expr=v4670[1] }
        ?29     = { defs={} expr=v4671[1] }
        ?30     = { defs={} expr=v4672[1] }
        ?31     = { defs={} expr=v4673[1] }
        ip      = { defs={0x080485c6,0x080485c7,0x080485c8} expr=0x080485c9[32] }
    memory:
        address = { defs={} expr=v4632[32] }
          value = { defs={} expr=v4674[32] }
          flags = { size=4; read-only }
        address = { defs={0x080485c6} expr=(add[32] v4632[32] 4[32]) }
          value = { defs={} expr=v4675[32] }
          flags = { size=4; read-only }
        address = { defs={0x080485c8} expr=v4633[32] }
          value = { defs={} expr=v4676[32] }
          flags = { size=4; read-only }
    ip = defs={0x080485c6,0x080485c7,0x080485c8} expr=0x080485c9[32]
0x80485c9:ret    
    registers:
        ax      = { defs={0x080485c6} expr=v4674[32] }
        cx      = { defs={} expr=v4629[32] }
        dx      = { defs={} expr=v4630[32] }
        bx      = { defs={0x080485c7} expr=v4675[32] }
        sp      = { defs={0x080485c8,0x080485c9} expr=(add[32] (add[32] v4633[32] 4[32]) 4[32]) }
        bp      = { defs={0x080485c8} expr=v4676[32] }
        si      = { defs={} expr=v4634[32] }
        di      = { defs={} expr=v4635[32] }
        es      = { defs={} expr=v4636[16] }
        cs      = { defs={} expr=v4637[16] }
        ss      = { defs={} expr=v4638[16] }
        ds      = { defs={} expr=v4639[16] }
        fs      = { defs={} expr=v4640[16] }
        gs      = { defs={} expr=v4641[16] }
        cf      = { defs={} expr=v4642[1] }
        ?1      = { defs={} expr=v4643[1] }
        pf      = { defs={} expr=v4644[1] }
        ?3      = { defs={} expr=v4645[1] }
        af      = { defs={} expr=v4646[1] }
        ?5      = { defs={} expr=v4647[1] }
        zf      = { defs={} expr=v4648[1] }
        sf      = { defs={} expr=v4649[1] }
        tf      = { defs={} expr=v4650[1] }
        if      = { defs={} expr=v4651[1] }
        df      = { defs={} expr=v4652[1] }
        of      = { defs={} expr=v4653[1] }
        iopl0   = { defs={} expr=v4654[1] }
        iopl1   = { defs={} expr=v4655[1] }
        nt      = { defs={} expr=v4656[1] }
        ?15     = { defs={} expr=v4657[1] }
        rf      = { defs={} expr=v4658[1] }
        vm      = { defs={} expr=v4659[1] }
        ac      = { defs={} expr=v4660[1] }
        vif     = { defs={} expr=v4661[1] }
        vip     = { defs={} expr=v4662[1] }
        id      = { defs={} expr=v4663[1] }
        ?22     = { defs={} expr=v4664[1] }
        ?23     = { defs={} expr=v4665[1] }
        ?24     = { defs={} expr=v4666[1] }
        ?25     = { defs={} expr=v4667[1] }
        ?26     = { defs={} expr=v4668[1] }
        ?27     = { defs={} expr=v4669[1] }
        ?28     = { defs={} expr=v4670[1] }
        ?29     = { defs={} expr=v4671[1] }
        ?30     = { defs={} expr=v4672[1] }
        ?31     = { defs={} expr=v4673[1] }
        ip      = { defs={0x080485c9} expr=v4677[32] }
    memory:
        address = { defs={} expr=v4632[32] }
          value = { defs={} expr=v4674[32] }
          flags = { size=4; read-only }
        address = { defs={0x080485c6} expr=(add[32] v4632[32] 4[32]) }
          value = { defs={} expr=v4675[32] }
          flags = { size=4; read-only }
        address = { defs={0x080485c8} expr=v4633[32] }
          value = { defs={} expr=v4676[32] }
          flags = { size=4; read-only }
        address = { defs={0x080485c8} expr=(add[32] v4633[32] 4[32]) }
          value = { defs={} expr=v4677[32] }
          flags = { size=4; read-only }
    ip = defs={0x080485c9} expr=v4677[32]
analyzed headers: 1
