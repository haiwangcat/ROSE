ROSE can be compiled with the Intel compiler (icc and icpc).

The only change to the usual configure line is to set CC and CXX 
variables on the configure command line.

The addition to the configure command line is just: "CC=icc CXX=icpc".

For example:
/home/dquinlan/ROSE/git-dq-main-rc/configure CC=icc CXX=icpc --with-ROSE_LONG_MAKE_CHECK_RULE=yes --with-CXX_DEBUG=-g --with-C_DEBUG=-g --with-CXX_WARNINGS=-Wall --prefix=/home/dquinlan/ROSE/ROSE_CompileTree/git_LINUX-64bit-4.2.4-dq-main-rc-intel_install --with-boost=/home/dquinlan/local/boost_1_37_0.gxx-4.2.4

Note that this will setup ROSE to use the Intel compiler to both compile ROSE
and also use the Intel compiler as a backend compiler for compiling code generated by
ROSE.  The BACKEND compile can be set separately using the options:
  --with-alternate_backend_Cxx_compiler=<compiler name>
  --with-alternate_backend_C_compiler=<compiler name>
  --with-alternate_backend_fortran_compiler=<compiler name>
The <compiler name> can be either an explicit path to the 
backend compiler if required, or just the name of the 
compiler executable (if it is in the user's path).

Information on Intel compiler options:
http://software.intel.com/sites/products/documentation/hpc/compilerpro/en-us/cpp/lin/compiler_c/index.htm 

Note that using "-Wall" tends to generate a lot of "remarks".
Use "--with-CXX_WARNINGS=-diag-file=my_diagnostics" to direct these to a file.
Use "--with-CXX_WARNINGS=-w" to turn all warnings off.

