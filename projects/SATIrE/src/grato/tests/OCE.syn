SYNTAX
START: PIrStatement

PIrStatement
            : IrAssign(destAddr: PIrExpr, rightSide: PIrExpr)
            // inner class
            | IrMultiAssign(assigns: PIrMultiAssign_Assign*, rightSide: PIrExpr)
            | IrEvaluate(expression: PIrExpr)
            | N_IrControlStatement(node: PIrControlStatement)
            // !!
            // | IrRangeLimit(localUse: PIrExpr, range: IrIntervalField)
            | IrModuloLimit(localUse: PIrExpr, modulo: IrInt64Field)
            // !!
            // | IrPhiTerm(dest: IrChildLink, links:
            //         IrNodelistTmpl<IrLocal, IrLinklistField>)
            ;

PIrMultiAssign_Assign
            : Assign(destAddr: PIrExpr, constraint: IrStringField,
                    reg: IrInt32Field)
            ;

PIrControlStatement
            : IrJump(destBlock: PIrExpr)
            | IrReturn()
            | IrReturnValue(returnExpr: PIrExpr, returnReg: IrInt32Field)
            | N_IrIf(node: PIrIf, condition: PIrExpr, thenBlock: PIrExpr,
                    elseBlock: PIrExpr)
            | IrLoopStart(iterationCount: PIrExpr, headBlockAddr: PIrExpr)
            | IrLoopEnd(headBlockAddr: PIrExpr, exitBlockAddr: PIrExpr)
            ;

PIrIf       : IrLoopBreak()
            ;

PIrExpr     : IrConstant(constValue: IrInt64Field)
            | N_IrUnary(node: PIrUnary, child: PIrExpr)
            | N_IrBinary(node: PIrBinary, left: PIrExpr, right: PIrExpr)
            // inner class
            | IrCall(functionAddr: PIrExpr, arguments: PIrCall_Argument*)
            | IrVectorExpr(memberExprs: PIrExpr*)
            // inner class
            | IrAsm(asmPattern: IrStringField, scratchPattern: IrStringField,
                    exeModes: IrInt32Field, infos: PIrAsm_Info*,
                    args: PIrAsm_Arg*)
            // | IrAddress(object: IrObjectLink)
            ;

PIrCall_Argument
            : Argument(argExpr: PIrExpr, reg: IrInt32Field)
            ;

PIrAsm_Arg  : Arg(expr: PIrExpr, constraint: IrStringField,
                    reg:IrInt32Field)
            ;
            
PIrAsm_Info : Info( // arg: IrLinkField,
                    argNr: IrInt32Field,
                    group: IrInt32Field, accu: IrInt32Field,
                    addrModifier: IrInt32Field,
                    // outArg: IrLinkField,
                    cplNr: IrInt32Field, psr: IrInt32Field)
            ;

PIrBinary   : IrModuloAdd(left: PIrExpr, right: PIrExpr,
                    lowerBound: PIrExpr, moduloSize: PIrExpr)
            | IrCircularAdd(left: PIrExpr, right: PIrExpr, moduloSize: PIrExpr)
            | IrBitReverse(left: PIrExpr, right: PIrExpr)
            | IrRevInc(left: PIrExpr, right: PIrExpr)
            | IrSatNegate(left: PIrExpr, right: PIrExpr)
            | IrSatAbs(left: PIrExpr, right: PIrExpr)
            | IrSat(left: PIrExpr, right: PIrExpr)
            | IrSatRound(left: PIrExpr, right: PIrExpr)
            | IrNorm(left: PIrExpr, right: PIrExpr)
            | IrSatAdd(left: PIrExpr, right: PIrExpr)
            | IrSatSub(left: PIrExpr, right: PIrExpr)
            | IrSatMult(left: PIrExpr, right: PIrExpr)
            | IrSatDiv(left: PIrExpr, right: PIrExpr, roundToZero: IrBoolField)
            | IrSatShiftLeft(left: PIrExpr, right: PIrExpr)
            | IrRndShiftRight(left: PIrExpr, right: PIrExpr)
            | IrAdd(left: PIrExpr, right: PIrExpr)
            | IrDimAdd(left: PIrExpr, right: PIrExpr, dimension: IrInt32Field)
            | IrSub(left: PIrExpr, right: PIrExpr)
            | IrMult(left: PIrExpr, right: PIrExpr)
            | IrDiv(left: PIrExpr, right: PIrExpr, roundToZero: IrBoolField)
            // !!!!!
            | IrMod(left: PIrExpr, right: PIrExpr, roundToZero: IrBoolField)
            | IrShiftLeft(left: PIrExpr, right: PIrExpr)
            | IrShiftRight(left: PIrExpr, right: PIrExpr)
            | IrMax(left: PIrExpr, right: PIrExpr)
            | IrMin(left: PIrExpr, right: PIrExpr)
            | IrOr(left: PIrExpr, right: PIrExpr)
            | IrAnd(left: PIrExpr, right: PIrExpr)
            | IrXor(left: PIrExpr, right: PIrExpr)
            | IrSetBits(left: PIrExpr, right: PIrExpr,
                    offset: IrInt32Field, width: IrInt32Field)
            | IrComma(left: PIrExpr, right: PIrExpr)
            | N_IrRelation(node: PIrRelation, left: PIrExpr, right: PIrExpr)
            | N_IrParallelBinary(node: PIrParallelBinary,
                    left: PIrExpr, right: PIrExpr, sectionBits: IrInt32Field)
            ;

PIrUnary    : IrBitReverse(child: PIrExpr)
            | IrSatNegate(child: PIrExpr)
            | IrSatAbs(child: PIrExpr)
            | IrSat(child: PIrExpr)
            | IrSatRound(child: PIrExpr)
            | IrNorm(child: PIrExpr)
            | IrNegate(child: PIrExpr)
            | IrInvert(child: PIrExpr)
            | IrNot(child: PIrExpr)
            | IrRead(child: PIrExpr)
            | IrConvert(child: PIrExpr)
            | IrBitLoyalConvert(child: PIrExpr)
            | IrRound(child: PIrExpr, method: IrInt32Field)
            | IrAbs(child: PIrExpr)
            | IrSquare(child: PIrExpr)
            | IrGetBits(child: PIrExpr, sign: IrBoolField,
                    offset: IrInt32Field, width: IrInt32Field)
            | IrMatchNtrm(child: PIrExpr, ntrm: IrInt32Field)
            ;

PIrRelation : IrEqual(left: PIrExpr, right: PIrExpr)
            | IrUnequal(left: PIrExpr, right: PIrExpr)
            | IrGreater(left: PIrExpr, right: PIrExpr)
            | IrGreaterEqual(left: PIrExpr, right: PIrExpr)
            | IrLess(left: PIrExpr, right: PIrExpr)
            | IrLessEqual(left: PIrExpr, right: PIrExpr)
            ;

PIrParallelBinary
            : IrParallelAdd(left: PIrExpr, right: PIrExpr,
                    sectionBits: IrInt32Field)
            | IrParallelSub(left: PIrExpr, right: PIrExpr,
                    sectionBits: IrInt32Field)
            ;

IrInt32Field  == snum;
IrInt64Field  == snum;
IrStringField == str;
IrBoolField   == bool;
