%{ /* -*- c++ -*- */
/*
 * Copyright 2008 Adrian Prantl
 * see COPYING in the root folder of the SATIrE project
*/
using namespace std;
#include <string>
#include <deque>
#include <iostream> 
#include "termite.h"
#include "dfiparser.tab.h++"

// This global variable is our "yyin"
const char* dfi_input = 0;
const char* dfi_input_start = 0;

#define YY_INPUT(buf,result,max_size) { \
      if (dfi_input == 0 || *dfi_input == 0) \
	result = YY_NULL; \
      else { \
	*buf = *dfi_input; \
        ++dfi_input; \
	result = 1; \
      }	\
    }

%}
%option noyywrap

top TOP
bottom BOT
setbegin \{
setclose \}
liftsetbegin \{\[
liftsetclose \]\}
int \-?[0-9]+
assign \-\>
/* kudos to kregexpeditor: */
token (::)?[_a-zA-Z\$][A-Za-z_0-9\$]*(::[a-zA-Z][A-Za-z_0-9]*)?
undef \<undefined\ dfi\>
site \<allocation\ site\ [0-9]+\>
labels labels
from_to \.\.
edge Edge
context Context
merged Merged
ws [ \t\r\n]

%%

{undef}  { return UNDEF; }
{top}    { return TOP; }
{bottom} { return BOT; }
{labels} { return LABELS; }
{from_to} { return FROM_TO; }
{edge}   { return EDGE; }
{context} { return CONTEXT; }
{merged} { return MERGED; }
{assign} { return ASSIGN; }
{setbegin} { return SET_BEGIN; }
{setclose} { return SET_CLOSE; }
{liftsetbegin} { return LIFT_SET_BEGIN; }
{liftsetclose} { return LIFT_SET_CLOSE; }

{int}   { //cerr<<"INT "<<yytext<<endl; 
          dfilval.intValue = (int)strtol(dfitext, NULL, 10); 
	  return(INT); }
{token} { //cerr<<"TOKEN "<<yytext<<endl; 
          dfilval.strValue = new string(dfitext); 
	  return(TOKEN); }
{site}  { dfilval.strValue = new string(dfitext); return TOKEN; }
\,      { return ','; }
{ws}    ;
.       { //cerr<<"ID "<<yytext<<endl;
          return(dfitext[0]); }

%%
