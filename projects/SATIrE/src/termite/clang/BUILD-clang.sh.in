# See also http://clang.llvm.org/get_started.html

function exit_failure {
    echo "BUILD FAILED: $1";
    exit 1;
}
    
function update_or_checkout_svn {
    DIR="$1"
    URL="$2"
    VER="$3"
    pushd `dirname $DIR`
    echo "svn-checkout for $2 (version $3) into $1"
    #do nothing if the directory is already present to preserve local changes
    if [ ! -d $DIR ] ; then
        svn co $URL `basename $DIR` -r $VER || exit_failure "svn checkout failed"
    else
        echo "already done before"
    fi
    popd
}

echo "building clang frontend";
LLVMDIR="@top_builddir@/clang/llvm";
CLANGDIR="@top_builddir@/clang/llvm/tools/clang";
BUILDDIR="@top_builddir@/clang/build";
JOBS=-j8

LLVM_SVN="`cat @srcdir@/VERSIONS | grep LLVM | cut  -f 2`";
LLVM_VER="`cat @srcdir@/VERSIONS | grep LLVM | cut  -f 3`";
CLANG_SVN="`cat @srcdir@/VERSIONS | grep CLANG | cut  -f 2`";
CLANG_VER="`cat @srcdir@/VERSIONS | grep CLANG | cut  -f 3`";

#make sure we have a sane environment
which svn > /dev/null && which darcs > /dev/null && which patch > /dev/null
if [ ! "$?x" ==  "0x" ] ; then
    echo "can't find required tools"
    exit 1
fi

#create directories if necessary
mkdir -p $BUILDDIR

#update llvm and clang from svn
update_or_checkout_svn $LLVMDIR $LLVM_SVN $LLVM_VER
update_or_checkout_svn $CLANGDIR $CLANG_SVN $CLANG_VER

#apply the patch if necessary
if [ -f $CLANGDIR/Driver/TermDumper.cpp ] ; then
    echo "clang patch already applied, reverting"
    pushd $CLANGDIR
    svn revert . -R || exit_failure "svn revert failed"
    #we have to manually remove TermDumper.cpp as it's not part of the official distribution
    rm -rf $CLANGDIR/Driver/TermDumper.cpp
    popd
fi

echo "applying clang patch"
currentsrcdir=@srcdir@
pushd $CLANGDIR
patch -p0 < $currentsrcdir/clang-termite.patch || exit_failure "failed to apply clang patch"
popd
    
#configure and build clang and llvm
echo "building clang+llvm"
pushd $BUILDDIR
if [ ! -f ./Makefile ] ; then
    ../llvm/configure --prefix=@prefix@ $LLVM_CONFIG $CCARGS || exit_failure "configuring LLVM failed"
fi;

make ENABLE_OPTIMIZED=0 $CCARGS $JOBS || exit_failure "building llvm failed"
make install || exit_failure "installing llvm failed"            
popd
echo "DONE"
# Non-mac users: Paths to system header files are currently hard coded
# into clang; as a result, if clang can't find your system headers,
# please follow these instructions:
#
# touch empty.c; gcc -v empty.c -fsyntax-only
#
# to get the path.  Look for the comment "FIXME: temporary hack:
# hard-coded paths" in clang/lib/Driver/InitHeaderSearch.cpp and
# change the lines below to include that path.

