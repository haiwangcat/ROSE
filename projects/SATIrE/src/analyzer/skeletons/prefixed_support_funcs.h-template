/*
 * Header template file defining prefixed macros for SATIrE support
 * functions.
 * Author: Gergo Barany, 2008
 *
 * If PAG generates an analyzer with an analyzer prefix set, it also tries
 * to access SATIrE support functions through prefixed names. This header
 * makes sure that those names are redirected to the actual unprefixed
 * names. It is included automagically when the PAG analyzer is compiled.
 *
 * Due to limitations of the C preprocessor, and to save some typing, this
 * file must first be processed by a simple macro replacement to become the
 * actual header file. This is taken care of by the SATIrE analyzer
 * Makefile.
 */

#ifndef H_PAGDATATYES
#define H_PAGDATATYES

#if PREFIX_SET
 /* support functions */
    #define o_@PREFIX@o_is_unary                o_is_unary
    #define o_@PREFIX@o_is_binary               o_is_binary
    #define o_@PREFIX@o_is_value                o_is_value
    #define o_@PREFIX@o_unary_get_child         o_unary_get_child
    #define o_@PREFIX@o_binary_get_left_child   o_binary_get_left_child
    #define o_@PREFIX@o_binary_get_right_child  o_binary_get_right_child
    #define o_@PREFIX@o_is_subtype_of           o_is_subtype_of
    #define o_@PREFIX@o_expr_type               o_expr_type
    #define o_@PREFIX@o_global_get_type         o_global_get_type
    #define o_@PREFIX@o_global_has_initializer  o_global_has_initializer
    #define o_@PREFIX@o_global_get_initializer  o_global_get_initializer
    #define o_@PREFIX@o_varsym_varid            o_varsym_varid
    #define o_@PREFIX@o_varref_varid            o_varref_varid
    #define o_@PREFIX@o_expr_exprid             o_expr_exprid
    #define o_@PREFIX@o_exprid_expr             o_exprid_expr
    #define o_@PREFIX@o_is_tmpvarid             o_is_tmpvarid
    #define o_@PREFIX@o_varid_str               o_varid_str
    #define o_@PREFIX@o_exprid_str              o_exprid_str
    #define o_@PREFIX@o_varid_exprid            o_varid_exprid
    #define o_@PREFIX@o_type_typeid             o_type_typeid
    #define o_@PREFIX@o_typeid_type             o_typeid_type
    #define o_@PREFIX@o_typeid_str              o_typeid_str
    #define o_@PREFIX@o_exprid_typeid           o_exprid_typeid
    #define o_@PREFIX@o_add_tmpvarid            o_add_tmpvarid
    #define o_@PREFIX@o_expr_asttext            o_expr_asttext
    #define o_@PREFIX@o_stmt_asttext            o_stmt_asttext

 /* deprecated support functions */ 
    #define o_@PREFIX@o_type_to_typenum         o_type_to_typenum
    #define o_@PREFIX@o_typenum_to_type         o_typenum_to_type
    #define o_@PREFIX@o_typenum_to_str          o_typenum_to_str
    #define o_@PREFIX@o_is_subtypenum_of        o_is_subtypenum_of
    #define o_@PREFIX@o_expr_to_exprnum         o_expr_to_exprnum
    #define o_@PREFIX@o_exprnum_to_expr         o_exprnum_to_expr
    #define o_@PREFIX@o_exprnum_to_str          o_exprnum_to_str
    #define o_@PREFIX@o_exprnum_typenum         o_exprnum_typenum
#endif

#endif
