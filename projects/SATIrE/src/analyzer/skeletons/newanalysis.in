#!/bin/bash

#if [ $# -ne 2 ]
#then
#    echo 
#    exit 1
#fi

# Debugging:
# set -x

# Command line options
while getopts ":d:p:u" Option
do
  case $Option in
    d) echo "Analysis depends on analyses $OPTARG"; OTHERANALYSES=$OPTARG ;;
    p) echo "Will set prefix '$OPTARG'"; PREFIX=$OPTARG ;;
    u) echo "Will not overwrite modified files"; UPDATE="T" ;;
    *) echo "usage: newanalysis [OPTION]... [analysis name] [analysis carrier type]"
       echo "supported options are:"
       echo " -d names  : analysis depends on named analyses [not for human use]"
       echo " -h        : this usage information"
       echo " -p prefix : add specified prefix to analyzer function names"
       echo " -u        : existing files are not overwritten"
       exit 1 ;;
  esac
done
shift $(($OPTIND - 1))

# Set default values
CURRENTDIR=`pwd`
if [ x$1 = x ]
then
    ANALYSIS_DIR=$CURRENTDIR
    ANALYSIS_NAME=`basename $CURRENTDIR`
else
    ANALYSIS_DIR=$1
    ANALYSIS_NAME=`basename $1`
fi

SATIRE_DATA="@pkgdatadir@"

# do the actual work
echo "creating new analysis $1..."
if [ -e "$ANALYSIS_DIR" ]
then
    echo "directory $ANALYSIS_DIR found."
else
    echo "creating directory $ANALYSIS_DIR ..."
    mkdir -p "$ANALYSIS_DIR"
fi
if [ -e "$ANALYSIS_DIR/anim-out" ]
then
    echo "directory $ANALYSIS_DIR/anim-out found."
else
    mkdir "$ANALYSIS_DIR/anim-out"
fi

echo "copying files..."
cp $SATIRE_DATA/main-support.h-template $ANALYSIS_DIR/main-support.h
cp $SATIRE_DATA/main-support.C-template $ANALYSIS_DIR/main-support.C
echo

# generate dependency declarations for other analyses
for analysis in $OTHERANALYSES
do
    echo "#include \"${analysis}_implementation.h\"" >> $ANALYSIS_DIR/main-support.C
done
if [ "x$OTHERANALYSES" != x ]
then
  # add a blank line for prettiness
    echo "" >> $ANALYSIS_DIR/main-support.C
fi
cat >> $ANALYSIS_DIR/main-support.C <<mainsupport_C_end
#include <satire.h>

void addDependencies(SATIrE::Analysis *analysis)
{
mainsupport_C_end
for analysis in $OTHERANALYSES
do
    echo "analysis->addDependency(${analysis});" >> $ANALYSIS_DIR/main-support.C
done
echo "}" >> $ANALYSIS_DIR/main-support.C

# create (or overwrite!) main and implementation files
function create_implementation_h
{
    cat > $ANALYSIS_DIR/${ANALYSIS_NAME}_implementation.h <<analysisimplementation_h_end
#ifndef H_SATIRE_DATAFLOW_ANALYSIS_IMPLEMENTATION_${ANALYSIS_NAME}
#define H_SATIRE_DATAFLOW_ANALYSIS_IMPLEMENTATION_${ANALYSIS_NAME}
#define ANALYSIS ${ANALYSIS_NAME}
analysisimplementation_h_end
    cat $SATIRE_DATA/satire_dataflow_analysis_implementation.h-template >> $ANALYSIS_DIR/${ANALYSIS_NAME}_implementation.h
}

function create_implementation_C
{
    cat > $ANALYSIS_DIR/${ANALYSIS_NAME}_implementation.C <<analysisimplementation_C_end
#include "${ANALYSIS_NAME}_implementation.h"
#define ANALYSIS ${ANALYSIS_NAME}

analysisimplementation_C_end
    cat $SATIRE_DATA/satire_dataflow_analysis_implementation.C-template >> $ANALYSIS_DIR/${ANALYSIS_NAME}_implementation.C
}

function create_main_C
{
    echo "#define MAIN_ANALYSIS ${ANALYSIS_NAME}" > $ANALYSIS_DIR/main.C
    cat $SATIRE_DATA/main.C-template >> $ANALYSIS_DIR/main.C
}

function create_main_h
{
    echo "#include \"${ANALYSIS_NAME}_implementation.h\"" > $ANALYSIS_DIR/main.h
    cat $SATIRE_DATA/main.h-template >> $ANALYSIS_DIR/main.h
}

function create_runtests
{
    cp $SATIRE_DATA/runtests-template $ANALYSIS_DIR/runtests
    chmod u+x $ANALYSIS_DIR/runtests
}

if [ x$UPDATE = xT ]
then
  # check for existence of each file, do not change existing files
    if [ -e "$ANALYSIS_DIR/${ANALYSIS_NAME}_implementation.h" ]
    then
        echo "$ANALYSIS_DIR/${ANALYSIS_NAME}_implementation.h exists and remains in $ANALYSIS_DIR."
    else
        create_implementation_h
    fi

    if [ -e "$ANALYSIS_DIR/${ANALYSIS_NAME}_implementation.C" ]
    then
        echo "$ANALYSIS_DIR/${ANALYSIS_NAME}_implementation.C exists and remains in $ANALYSIS_DIR."
    else
        create_implementation_C
    fi

    if [ -e "$ANALYSIS_DIR/main.C" ]
    then
        echo "$ANALYSIS_DIR/main.C exists and remains in $ANALYSIS_DIR."
    else
        create_main_C
    fi

    if [ -e "$ANALYSIS_DIR/main.h" ]
    then
        echo "$ANALYSIS_DIR/main.h exists and remains in $ANALYSIS_DIR."
    else
        create_main_h
    fi

    if [ -e "$ANALYSIS_DIR/runtests" ]
    then
        echo "$ANALYSIS_DIR/runtests exists and remains in $ANALYSIS_DIR."
    else
        create_runtests
    fi
else
  # unconditional creation
    create_implementation_h
    create_implementation_C
    create_main_C
    create_main_h
    create_runtests
fi

if [ -e "$ANALYSIS_DIR/$ANALYSIS_NAME.optla" ]
then
    echo "$ANALYSIS_DIR/$ANALYSIS_NAME.optla exists and remains in $ANALYSIS_DIR."
    echo "customizing Makefile..."
    echo "ANALYSIS = $ANALYSIS_NAME" > $ANALYSIS_DIR/Makefile
    CARRIER_TYPE=`egrep 'carrier[ ]*:' $ANALYSIS_DIR/$ANALYSIS_NAME.optla | awk -F ':' '{ print $2 }' | sed 's/ //g'`
    echo "CARRIER_TYPE = $CARRIER_TYPE" >> $ANALYSIS_DIR/Makefile
    echo "PREFIX = $PREFIX" >> $ANALYSIS_DIR/Makefile
    if [ x$PREFIX != x ]
    then
        egrep -q "prefix[ ]*:[ ]*$PREFIX" $ANALYSIS_DIR/$ANALYSIS_NAME.optla
        if [ $? -ne 0 ]
        then
            echo "Warning: You must add 'prefix: $PREFIX' to $ANALYSIS_DIR/$ANALYSIS_NAME.optla."
        fi
        echo "PREFIX_SET = 1" >> $ANALYSIS_DIR/Makefile
    else
        egrep -q "prefix[ ]*:[ ]*$PREFIX" $ANALYSIS_DIR/$ANALYSIS_NAME.optla
        if [ $? -eq 0 ]
        then
            echo "*** Error: $ANALYSIS_DIR/$ANALYSIS_NAME.optla sets a prefix, you must use the -p option!"
            exit 1
        fi
        echo "PREFIX_SET = 0" >> $ANALYSIS_DIR/Makefile
    fi
    cat $SATIRE_DATA/Makefile-template >> $ANALYSIS_DIR/Makefile
else
    echo "You must create the analysis specification $ANALYSIS_DIR/$ANALYSIS_NAME.optla before you can compile the analyzer $ANALYSIS_DIR/$ANALYSIS_NAME."
fi

if [ -e "$ANALYSIS_DIR/${ANALYSIS_NAME}.set" ]
then
    echo "$ANALYSIS_DIR/$ANALYSIS_NAME.set exists and remains in $ANALYSIS_DIR."
else
    egrep -q "ENDDOMAIN" $ANALYSIS_DIR/$ANALYSIS_NAME.optla
    if [ $? -eq 0 ]
    then
        echo "$ANALYSIS_DIR/$ANALYSIS_NAME.optla contains type definitions, no $ANALYSIS_DIR/$ANALYSIS_NAME.set needed."
    else
        echo "You must create $ANALYSIS_DIR/$ANALYSIS_NAME.set, or add type definitions to $ANALYSIS_DIR/$ANALYSIS_NAME.optla, before you can compile the analyzer $ANALYSIS_DIR/$ANALYSIS_NAME."
    fi
fi

echo
echo "All done, have fun."
