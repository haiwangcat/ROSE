# -*- makefile -*-
# you do not usually need to edit this file
PAGDIR=@pagdir@
ROSE_INCLUDE=@roseinclude@
ROSE_LIB=@roselib@
BOOST_INCLUDE=@boostinclude@
BOOST_LIB=@boostlib@
PL_INCLUDE=@plinclude@
SATIRE_LIB=@satirelib@
SATIRE_INCLUDE=@satireinclude@
SATIRE_DATA=@pkgdatadir@
# Adrian: By using libtool, we are creating both static and shared object files
CC=@satire-libtool@ --tag=C --mode=compile @cc@
CXX=@satire-libtool@ --tag=CXX --mode=compile @cxx@
# Adrian: we use libtool to extract the correct -rpath for the C++ runtime libraries
LD=@satire-libtool@ --tag=CXX --mode=link @cxx@

# variable CUSTOM_CFLAGS can be in separate file; so can options from
# newcombinedanalysis
custommakefile = $(wildcard Makefile*)
ifneq '$(custommakefile)' 'Makefile'
include Makefile.custom
endif

# OTHERANALYSES is set by newcombinedanalysis
OTHERANALYSISLIBS = ${OTHERANALYSES:%=otheranalyses/%.a}

PAG = $(PAGDIR)/bin/pag
CXXFLAGS = -O2 -Wall -Wno-deprecated -ggdb -I$(ROSE_INCLUDE) -I$(PAGDIR)/include/pag -I$(PAGDIR)/include/pag/analyzer -I$(BOOST_INCLUDE) -I$(PL_INCLUDE) -I$(SATIRE_INCLUDE) -I$(ANALYSIS)-out/src/
LPATH = -L$(ROSE_LIB) -Wl,-rpath -Wl,$(ROSE_LIB) -L$(BOOST_LIB) @pllibs@ @plldadd@ -Wl,-rpath $(BOOST_LIB) -L$(PAGDIR)/lib/pag -L$(SATIRE_LIB) -Wl,-rpath -Wl,$(SATIRE_LIB)
LIBS = $(ANALYSIS).a $(OTHERANALYSISLIBS) -lsatire -lsatiredfa -lsyntree -ltermsupport -lpagdatatypes -lrose -lpag

# common macro definitions passed on the command line
D_FLAGS = -DCARRIER_TYPE=$(CARRIER_TYPE) -DPREFIX=$(PREFIX) -DPREFIX_SET=$(PREFIX_SET) -DHAVE_PAG=1

.PHONY: all clean check update newanalysis

# GB: All of the specification (including the SET part) can be put into the
# .optla file, the .set file is no longer mandatory. Thus $(ANALYSIS).a now
# depends on the .optla file only because .set might not exist; however, IF
# it exists and is newer than the .optla file, this rule touches the .optla
# file to make sure that the analyzer is rebuilt.
all:
	@ if [ $(ANALYSIS).set -nt $(ANALYSIS).optla ]; then \
		touch $(ANALYSIS).optla; \
	fi
	$(MAKE) $(ANALYSIS)

$(ANALYSIS).a: $(ANALYSIS).optla Makefile
	mkdir -p anim-out
	mkdir -p $(ANALYSIS)-out/src
	rm -rf $(ANALYSIS)-out/src/*
	mkdir -p otheranalyses
	# call PAG to (try to) generate an analyzer
	if $(PAG) $(SATIRE_INCLUDE)/ iterate1.t $(ANALYSIS) $(ANALYSIS)-out --prefix=$(PAGDIR) 2> pag-out; then cat pag-out; else cat pag-out; false; fi
	# override syntree.o in the generated directory
	ar x $(SATIRE_LIB)/libsyntree.a syntree.o
	mv syntree.o $(ANALYSIS)-out/src/
	# override dummy header files for PAG data types provided by SATIrE
	cp $(SATIRE_INCLUDE)/o_*.h $(ANALYSIS)-out/src/
	# customize prefixed_support_funcs.h with the analysis prefix
	sed -e 's/[@]PREFIX[@]/$(PREFIX)/g' < $(SATIRE_DATA)/prefixed_support_funcs.h-template > $(ANALYSIS)-out/src/prefixed_support_funcs.h
	# make the analyzer library; suppress warnings with -w; do not recompile our files
	$(MAKE) -j1 CC="@cc@" CFLAGS="$(CUSTOM_CFLAGS) $(D_FLAGS) -w" -C $(ANALYSIS)-out/src/
	cp $(ANALYSIS)-out/src/$(ANALYSIS).a .

main.o: main.C main.h $(ANALYSIS).a Makefile
	$(CXX) $(CXXFLAGS) $(D_FLAGS) $(CUSTOM_CFLAGS) -c main.C

main-support.o: main-support.C main-support.h $(ANALYSIS).a Makefile
	$(CXX) $(CXXFLAGS) $(D_FLAGS) $(CUSTOM_CFLAGS) -c main-support.C

$(ANALYSIS)_implementation.o: $(ANALYSIS)_implementation.h $(ANALYSIS)_implementation.C $(ANALYSIS).a Makefile
	if [ -r analysis_query.C ]; then \
		$(CXX) $(CXXFLAGS) $(D_FLAGS) -DOVERRIDE_ANALYSIS_QUERY_METHOD $(CUSTOM_CFLAGS) -c $(ANALYSIS)_implementation.C; \
	else \
		$(CXX) $(CXXFLAGS) $(D_FLAGS) $(CUSTOM_CFLAGS) -c $(ANALYSIS)_implementation.C; \
	fi

$(ANALYSIS): $(ANALYSIS).a $(ANALYSIS)_implementation.o main.o main-support.o $(OTHERANALYSISLIBS)
	$(LD) $(ANALYSIS)_implementation.o main.o main-support.o -o $(ANALYSIS) $(LPATH) $(LIBS) 
	@echo
	@echo 'PAG said:'
	@cat pag-out
	@echo "nothing, because it wasn't run (the analysis specification has not changed)" > pag-out

otheranalyses/%.a:
	$(MAKE) -j1 CFLAGS="$(CUSTOM_CFLAGS)" $*.a -C $*
	cp $*/$*.a otheranalyses/

clean:
	rm -f *~ *.o *.a pig_temp* syntree* $(ANALYSIS) *.gdl pag-out
	rm -rf $(ANALYSIS)-out/
	rm -rf anim-out
	rm -f a.out
	rm -f rose_*
	for analysis in $(OTHERANALYSES); do $(MAKE) clean -C $$analysis; done
	rm -rf otheranalyses/

check:  $(ANALYSIS)
	bash runtests
