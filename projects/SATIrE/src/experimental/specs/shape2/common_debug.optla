// -----------------------------------
// functions that produce debug output
// -----------------------------------

// Author: Viktor Pavlu
// E-mail: e0425543@student.tuwien.ac.at
// Year  : 2008

debug_is_active::str->bool;
debug_is_active("astmatch")        = option_debugmessage_astmatch;
debug_is_active("assign")          = option_debugmessage_assign;
debug_is_active("tassign")         = option_debugmessage_tassign;
debug_is_active("lowlevel")        = option_debugmessage_lowlevel;
debug_is_active("materialisation") = option_debugmessage_materialisation;
debug_is_active(level) = println("please set debug_is_active(", level, ")!") false;

debug_print_str::str,str->snum;
debug_print_str(level,s) = if debug_is_active(level) then print(s) 0 else 0 endif;

debug_print_bool::str,str,bool->snum;
debug_print_bool(level,label,b) = if debug_is_active(level) then print(label." = ") print(b) print("\n") 0 else 0 endif;

debug_print_ShapeGraph::str,str,ShapeGraph->snum;
debug_print_ShapeGraph(level,label,g) = if debug_is_active(level) then print(label." = ") print(g) print("\n") 0 else 0 endif;

debug_print_ShapeGraphSet::str,str,ShapeGraphSet->snum;
debug_print_ShapeGraphSet(level,label,gs) = if debug_is_active(level) then debug_print_ShapeGraphList(level,label,[g!!g<--gs]) else 0 endif;

debug_print_ShapeGraphList::str,str,ShapeGraphList->snum;
debug_print_ShapeGraphList(level,label,     []) = if debug_is_active(level) then print(label." =\n") 0 else 0 endif;
debug_print_ShapeGraphList(level,label,car:cdr) =
  if debug_is_active(level) then
    let i = 1 + debug_print_ShapeGraphList(level,label,cdr); in
    print(label."(") print(i) print(") = ") print(car) print("\n") i
  else 0 endif;

debug_print_HeapEdgeSetList::str,str,HeapEdgeSetList->snum;
debug_print_HeapEdgeSetList(level,label,     []) = if debug_is_active(level) then print(label." =\n") 0 else 0 endif;
debug_print_HeapEdgeSetList(level,label,car:cdr) =
  if debug_is_active(level) then
    let i = 1 + debug_print_HeapEdgeSetList(level,label,cdr); in
    print("    ".label."(") print(i) print(") = ") print(car) print("\n") i
  else 0 endif;

debug_print_HeapEdgeSet::str,str,HeapEdgeSet->snum;
debug_print_HeapEdgeSet(level,label,H) = if debug_is_active(level) then print(label." = ") print(H) print("\n") 0 else 0 endif;

debug_print_HeapEdgeList::str,str,HeapEdgeList->snum;
debug_print_HeapEdgeList(level,label,H) = if debug_is_active(level) then print(label." = ") print(H) print("\n") 0 else 0 endif;



assert::str,bool->bool;
assert(s,e) =
  if e then e else print("assert failed: ") error(s) endif;
