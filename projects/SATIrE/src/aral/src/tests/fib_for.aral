ANALYSIS
IDMAP
map(label, string): {default->"" \ @10->"alf_label_3", @11->"alf_label_2", @7->"alf_label_0"};

map(varid, string): {default->"" \ #1->"a::1", #9->"b::9", #3->"i::3", #4->"n::4", #10->"next::10"};

RESULT NAME interval
TYPE <tuple(funcid, int(32))>
     map(varid, tuple(lift(int(32)), lift(int(32))))
DATA
@10 pre {default->(top,top) \ #1->(1,top), #9->(1,top), #10->(1,top)},
        <(#0,0)> {default->(top,top) \ #1->(1,top), #9->(1,top), #10->(1,top)};
@11 pre {default->(top,top) \ #1->(0,top), #9->(1,top), #10->(1,top)},
        <(#0,0)> {default->(top,top) \ #1->(0,top), #9->(1,top), #10->(1,top)};
@7 pre {default->(top,top) \ #1->(0,0), #9->(1,1)},
       <(#0,0)> {default->(top,top) \ #1->(0,0), #9->(1,1)};
END

RESULT NAME pointsto_locations
TYPE location = int(32);
     funcname = string;
     set(tuple(location, list(varid), list(funcname)))
DATA
program noflow {(18,[#10],[]), (17,[#9],[]), (16,[#3],[]), (15,[#1],[]), (14,[],["fib"]), (12,[],[]), (11,[#4],[]), (10,[],["fib"]), (8,[],[]), (7,[#4],[])};
END

RESULT NAME pointsto_relations
TYPE location = int(32);
     points_to = tuple(location, location);
     set(points_to)
DATA
program noflow {(14,12), (10,8)};
END

RESULT NAME variable_locations
TYPE location = int(32);
     <tuple(funcid, int(32))>
     set(tuple(varid, location))
DATA
program noflow <(#0,0)> {(#4,11), (#3,16), (#1,15), (#9,17), (#10,18)};
END

RESULT NAME callstrings
TYPE callsite = label;
     <tuple(funcid, int(32))>
     list(callsite)
DATA
function("fib") noflow <(#0,0)> [];
END

END
