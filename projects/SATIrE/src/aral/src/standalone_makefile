CC = g++ -g
LD = gcc -g
YACC = bison

DISTNAME = aral15
ARAL_SOURCES = aral.C aralir.C aralparser.yxx aralscanner.lxx \
               satire/aralir.h satire/aralparser_decls.h aralexample1.C runtests tests

All: aral

aralparser.h aralparser.C: aralparser.yxx
	${YACC} --defines=aralparser.h -p aral -o aralparser.C aralparser.yxx

aralscanner.C: aralscanner.lxx aralparser.h
	flex -Paral -oaralscanner.C aralscanner.lxx

aral :	aral.C aralscanner.C aralparser.h aralir.C satire/aralir.h 
	$(CC) aral.C aralscanner.C aralparser.C aralir.C -Isatire -lfl -o aral 

check: aral
	./runtests

.PHONY: clean
clean:
	rm -f aralscanner.C aralparser.[cChH] symtab.c
	rm -f aral aral.exe
	rm -f *~
	rm -f tests/*~
	rm -f $(DISTNAME).tar.gz


### The following targets (dist, distclean, distcheck) only make sense for
### developers working inside the SATIrE source tree.
dist:
	rm -rf _dist/
	rm -f $(DISTNAME).tar.gz
	mkdir _dist/
	mkdir _dist/aral/
	cp -r $(ARAL_SOURCES) _dist/aral/
	cp standalone_makefile _dist/aral/Makefile
	rm -f _dist/aral/tests/*.alf

# including the aralmanual.pdf in the distribution requires
# that the satire/docs are built.
# the aralmanual.pdf can also be built separately in satire/docs/aral
	mkdir _dist/aral/docs
	cp ../../../docs/aral/aralmanual.pdf _dist/aral/docs

	cd _dist && \
		tar vczf $(DISTNAME).tar.gz aral/
	mv _dist/$(DISTNAME).tar.gz .
	rm -rf _dist/

distclean: clean
	rm -f $(DISTNAME).tar.gz
	rm -rf _dist/

distcheck: distclean dist
	rm -rf _build
	mkdir _build
	cp $(DISTNAME).tar.gz _build
	cd _build && \
		tar vxzf $(DISTNAME).tar.gz && \
		cd aral && \
		make All && \
		make clean
	rm -rf _build
	@echo "============================================"
	@echo "$(DISTNAME) archives ready for distribution:"
	@echo "$(DISTNAME).tar.gz"
	@echo "============================================"
