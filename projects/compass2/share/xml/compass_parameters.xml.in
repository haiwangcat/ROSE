<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- <!DOCTYPE parameters SYSTEM "compass_parameters.dtd"> //-->
<parameters xmlns="http://www.rosecompiler.org"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://www.rosecompiler.org @ABS_COMPASS2_XML_SRCDIR@/compass_parameters.xsd">
            <!-- xsi:schemaLocation="http://www.rosecompiler.org compass_parameters.xsd"> //-->

  <!-- General Compass Parameters for all checkers //-->
  <general>
    <parameter name="target_directory">
      @absolute_path_srcdir@
    </parameter>
  </general>

  <!-- Checker-specific Compass Parameters //-->
  <checkers>
    <checker name="allowedFunctions">
      <parameter name="boost">join</parameter>
      <parameter name="std">push</parameter>
    </checker>

    <checker name="allowedVariableNames">
      <parameter name="variable1">foo</parameter>
      <parameter name="variable1">bar</parameter>
      <parameter name="variable2">xyz</parameter>
    </checker>

    <checker name="keywordMacros">
      <parameter name="ROSE">SgProject</parameter>
      <parameter name="ROSE">SgNode</parameter>

      <parameter name="C++ keyword">and</parameter>
      <parameter name="C++ keyword">and_eq</parameter>
      <parameter name="C++ keyword">alignas</parameter>
      <parameter name="C++ keyword">alignof</parameter>
      <parameter name="C++ keyword">asm</parameter>
      <parameter name="C++ keyword">auto</parameter>
      <parameter name="C++ keyword">bitand</parameter>
      <parameter name="C++ keyword">bitor</parameter>
      <parameter name="C++ keyword">bool</parameter>
      <parameter name="C++ keyword">break</parameter>
      <parameter name="C++ keyword">case</parameter>
      <parameter name="C++ keyword">catch</parameter>
      <parameter name="C++ keyword">char</parameter>
      <parameter name="C++ keyword">char16_t</parameter>
      <parameter name="C++ keyword">char32_t</parameter>
      <parameter name="C++ keyword">class</parameter>
      <parameter name="C++ keyword">compl</parameter>
      <parameter name="C++ keyword">const</parameter>
      <parameter name="C++ keyword">constexpr</parameter>
      <parameter name="C++ keyword">const_cast</parameter>
      <parameter name="C++ keyword">continue</parameter>
      <parameter name="C++ keyword">decltype</parameter>
      <parameter name="C++ keyword">default</parameter>
      <parameter name="C++ keyword">delete</parameter>
      <parameter name="C++ keyword">doudble</parameter>
      <parameter name="C++ keyword">dynamic_cast</parameter>
      <parameter name="C++ keyword">else</parameter>
      <parameter name="C++ keyword">enum</parameter>
      <parameter name="C++ keyword">explicit</parameter>
      <parameter name="C++ keyword">export</parameter>
      <parameter name="C++ keyword">extern</parameter>
      <parameter name="C++ keyword">false</parameter>
      <parameter name="C++ keyword">float</parameter>
      <parameter name="C++ keyword">for</parameter>
      <parameter name="C++ keyword">friend</parameter>
      <parameter name="C++ keyword">goto</parameter>
      <parameter name="C++ keyword">if</parameter>
      <parameter name="C++ keyword">inline</parameter>
      <parameter name="C++ keyword">int</parameter>
      <parameter name="C++ keyword">long</parameter>
      <parameter name="C++ keyword">mutable</parameter>
      <parameter name="C++ keyword">namespace</parameter>
      <parameter name="C++ keyword">new</parameter>
      <parameter name="C++ keyword">noexcept</parameter>
      <parameter name="C++ keyword">not</parameter>
      <parameter name="C++ keyword">not_eq</parameter>
      <parameter name="C++ keyword">nullptr</parameter>
      <parameter name="C++ keyword">operator</parameter>
      <parameter name="C++ keyword">or</parameter>
      <parameter name="C++ keyword">or_eq</parameter>
      <parameter name="C++ keyword">private</parameter>
      <parameter name="C++ keyword">protected</parameter>
      <parameter name="C++ keyword">public</parameter>
      <parameter name="C++ keyword">register</parameter>
      <parameter name="C++ keyword">reinterpret_cast</parameter>
      <parameter name="C++ keyword">return</parameter>
      <parameter name="C++ keyword">short</parameter>
      <parameter name="C++ keyword">signed</parameter>
      <parameter name="C++ keyword">sizedof</parameter>
      <parameter name="C++ keyword">static</parameter>
      <parameter name="C++ keyword">static_assert</parameter>
      <parameter name="C++ keyword">static_cast</parameter>
      <parameter name="C++ keyword">struct</parameter>
      <parameter name="C++ keyword">switch</parameter>
      <parameter name="C++ keyword">template</parameter>
      <parameter name="C++ keyword">this</parameter>
      <parameter name="C++ keyword">thread_local</parameter>
      <parameter name="C++ keyword">throw</parameter>
      <parameter name="C++ keyword">true</parameter>
      <parameter name="C++ keyword">try</parameter>
      <parameter name="C++ keyword">typedef</parameter>
      <parameter name="C++ keyword">typeid</parameter>
      <parameter name="C++ keyword">typenam</parameter>
      <parameter name="C++ keyword">union</parameter>
      <parameter name="C++ keyword">unsigned</parameter>
      <parameter name="C++ keyword">using</parameter>
      <parameter name="C++ keyword">virtual</parameter>
      <parameter name="C++ keyword">void</parameter>
      <parameter name="C++ keyword">volatile</parameter>
      <parameter name="C++ keyword">wchar_t</parameter>
      <parameter name="C++ keyword">while</parameter>
      <parameter name="C++ keyword">xor</parameter>
      <parameter name="C++ keyword">xor_eq</parameter>
      </checker>
  </checkers>
</parameters>
